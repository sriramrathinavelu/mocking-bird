sriram@ubuntu:/space/hashincludetest/mocking-bird$ 
sriram@ubuntu:/space/hashincludetest/mocking-bird$ 
sriram@ubuntu:/space/hashincludetest/mocking-bird$ cd plugins/
sriram@ubuntu:/space/hashincludetest/mocking-bird/plugins$ 
sriram@ubuntu:/space/hashincludetest/mocking-bird/plugins$ ls
[0m[01;34mcarhartl-jquery-cookie-92b7715[0m                [01;34mdate-picker[0m     [01;34mFlipClock-master[0m      [01;34mjquery-countdown[0m
[01;31mcarhartl-jquery-cookie-v1.4.1-0-g7f88a4e.zip[0m  [01;31mdatepicker.zip[0m  [01;31mFlipClock-master.zip[0m  [01;31mjquery-tree-master.zip[0m
sriram@ubuntu:/space/hashincludetest/mocking-bird/plugins$ 
sriram@ubuntu:/space/hashincludetest/mocking-bird/plugins$ 
sriram@ubuntu:/space/hashincludetest/mocking-bird/plugins$ 
sriram@ubuntu:/space/hashincludetest/mocking-bird/plugins$ unzip jquery-tree-master.zip 
Archive:  jquery-tree-master.zip
c0c691de4b17c2bf695d7a0ce42d3466f1002d33
   creating: jquery-tree-master/
  inflating: jquery-tree-master/README.md  
   creating: jquery-tree-master/demo/
  inflating: jquery-tree-master/demo/lazy.json  
  inflating: jquery-tree-master/index.html  
   creating: jquery-tree-master/minified/
   creating: jquery-tree-master/minified/images/
 extracting: jquery-tree-master/minified/images/anchor.gif  
  inflating: jquery-tree-master/minified/jquery.tree.min.css  
  inflating: jquery-tree-master/minified/jquery.tree.min.js  
  inflating: jquery-tree-master/minify.sh  
   creating: jquery-tree-master/src/
   creating: jquery-tree-master/src/css/
  inflating: jquery-tree-master/src/css/_jquery.treednd.css  
   creating: jquery-tree-master/src/css/images/
 extracting: jquery-tree-master/src/css/images/anchor.gif  
  inflating: jquery-tree-master/src/css/images/anchor.xcf  
  inflating: jquery-tree-master/src/css/jquery.tree.css  
   creating: jquery-tree-master/src/js/
  inflating: jquery-tree-master/src/js/jquery.tree.js  
  inflating: jquery-tree-master/src/js/jquery.treeajax.js  
  inflating: jquery-tree-master/src/js/jquery.treecheckbox.js  
  inflating: jquery-tree-master/src/js/jquery.treecollapse.js  
  inflating: jquery-tree-master/src/js/jquery.treednd.js  
sriram@ubuntu:/space/hashincludetest/mocking-bird/plugins$ ls
[0m[01;34mcarhartl-jquery-cookie-92b7715[0m                [01;34mdate-picker[0m     [01;34mFlipClock-master[0m      [01;34mjquery-countdown[0m    [01;31mjquery-tree-master.zip[0m
[01;31mcarhartl-jquery-cookie-v1.4.1-0-g7f88a4e.zip[0m  [01;31mdatepicker.zip[0m  [01;31mFlipClock-master.zip[0m  [01;34mjquery-tree-master[0m
sriram@ubuntu:/space/hashincludetest/mocking-bird/plugins$ 
sriram@ubuntu:/space/hashincludetest/mocking-bird/plugins$ 
sriram@ubuntu:/space/hashincludetest/mocking-bird/plugins$ 
sriram@ubuntu:/space/hashincludetest/mocking-bird/plugins$ cd jquery-tree-master/
sriram@ubuntu:/space/hashincludetest/mocking-bird/plugins/jquery-tree-master$ ls
[0m[01;34mdemo[0m  [01;32mindex.html[0m  [01;34mminified[0m  [01;32mminify.sh[0m  README.md  [01;34msrc[0m
sriram@ubuntu:/space/hashincludetest/mocking-bird/plugins/jquery-tree-master$ 
sriram@ubuntu:/space/hashincludetest/mocking-bird/plugins/jquery-tree-master$ 
sriram@ubuntu:/space/hashincludetest/mocking-bird/plugins/jquery-tree-master$ 
sriram@ubuntu:/space/hashincludetest/mocking-bird/plugins/jquery-tree-master$ 
sriram@ubuntu:/space/hashincludetest/mocking-bird/plugins/jquery-tree-master$ cd src/
sriram@ubuntu:/space/hashincludetest/mocking-bird/plugins/jquery-tree-master/src$ ls
[0m[01;34mcss[0m  [01;34mjs[0m
sriram@ubuntu:/space/hashincludetest/mocking-bird/plugins/jquery-tree-master/src$ 
sriram@ubuntu:/space/hashincludetest/mocking-bird/plugins/jquery-tree-master/src$ 
sriram@ubuntu:/space/hashincludetest/mocking-bird/plugins/jquery-tree-master/src$ 
sriram@ubuntu:/space/hashincludetest/mocking-bird/plugins/jquery-tree-master/src$ cd css/
sriram@ubuntu:/space/hashincludetest/mocking-bird/plugins/jquery-tree-master/src/css$ ls
[0m[01;34mimages[0m  [01;32mjquery.tree.css[0m  _jquery.treednd.css
sriram@ubuntu:/space/hashincludetest/mocking-bird/plugins/jquery-tree-master/src/css$ vi _jquery.treednd.css 
[?1049h[?1h=[1;38r[34l[34h[?25h[23m[24m[0m[H[J[?25l[38;1H"_jquery.treednd.css" [noeol] 27L, 524C[1;1H[36m.daredevel-tree[0m [33mli[0m [33mspan[0m[36m.prepended[0m [36m{[0m
    [32mposition[0m: [32mabsolute[0m;
    [32mleft[0m: [31m0px[0m;
    [32mtop[0m: [31m-5px[0m;
    [32mz-index[0m: [31m2[0m;
    [32mvisibility[0m: [32mhidden[0m;
    [32mheight[0m: [31m10px[0m;
    [32mwidth[0m: [31m100px[0m;
    [32moverflow[0m: [32mhidden[0m;
    [32mbackground-image[0m: [36murl([0m[31m"images/anchor.gif"[0m[36m)[0m;
[36m}

.daredevel-tree[0m [33mli[0m [33mspan[0m[36m.prepended.over[0m [36m{[0m
    [32mvisibility[0m: [32mvisible[0m;
[36m}

.daredevel-tree[0m [33mli[0m [33mspan[0m[36m.droppable-label[0m [36m{[0m
    [32mposition[0m: [32mabsolute[0m;
    [32mleft[0m: [31m0px[0m;
    [32mtop[0m: [31m5px[0m;
    [32mz-index[0m: [31m2[0m;
    [32mvisibility[0m: [32mhidden[0m;
    [32mheight[0m: [31m8px[0m;
    [32mwidth[0m: [31m100px[0m;
    [32moverflow[0m: [32mhidden[0m;
    [32mborder[0m: [32msolid[0m [31m1px[0m;
[36m}[0m
[1m[34m~                                                                                                                                              [29;1H~                                                                                                                                              [30;1H~                                                                                                                                              [31;1H~                                                                                                                                              [32;1H~                                                                                                                                              [33;1H~                                                                                                                                              [34;1H~                                                                                                                                              [35;1H~                                                                                                                                              [36;1H~                                                                                                                                              [37;1H~                                                                                                                                              [0m[38;126H1,1[11CAll[1;1H[34h[?25h[?25l[38;1H[K[38;1H:[34h[?25hs[?25l[34h[?25hp[?25l[34h[?25h[?25l [34h[?25h[?25l[34h[?25h[?25l[38;3H[K[38;3H[34h[?25h[?25l[38;2H[K[38;2H[34h[?25hv[?25l[34h[?25hs[?25l[34h[?25hp[?25l[34h[?25h[?25l [34h[?25ht[?25l[34h[?25hr[?25l[34h[?25h...[?25l[38;8H[K[38;8H[34h[?25h...[?25l[38;8H[K[38;8H[34h[?25h...[?25l[38;8H[K[38;8H[34h[?25h[?25l[38;7H[K[38;7H[34h[?25h[?25l[38;6H[K[38;6H[34h[?25h...[?25l_jquery.treednd.css[34h[?25h...[?25l:vsp images/[38;13H[K[38;13H[34h[?25h...[?25l:vsp jquery.tree.css[34h[?25h[?25l"jquery.tree.css" [38;19H[K[38;19H[noeol] 45L, 837C[1;19H [36m{[0m               [36C[7m|[0m
    [32mlist-style-type[0m: [32mnone[0m;[45C[7m|[0m
    [32mposition[0m: [32mrelative[0m;[48C[7m|[0m
[36m}[0m             [57C[7m|[0m
               [56C[7m|[0m
[36m.daredevel-tree[0m [33mli[0m [33mspan[0m[36m.daredevel-tree-label[0m [36m{[0m[25C[7m|[0m
    [32mcursor[0m: [32mdefault[0m;[51C[7m|[0m
    [32mz-index[0m: [31m1[0m;  [54C[7m|[0m
[36m}[0m                    [50C[7m|[0m
[34m/* collapse */[0m                                 [24C[7m|[0m
[36m.daredevel-tree[0m [33mli[0m [33mspan[0m[36m.daredevel-tree-anchor[0m [36m{[0m[24C[7m|[0m
    [32mcursor[0m: [32mdefault[0m;[51C[7m|[0m
    [32mposition[0m: [32mabsolute[0m;                 [31C[7m|[0m
    [32mtop[0m: [31m1px[0m;           [47C[7m|[0m
    [32mleft[0m: [31m-16px[0m;[55C[7m|[0m
[36m}[0m[70C[7m|[0m
                                         [30C[7m|[0m
[34m/* dnd */[0m              [48C[7m|[0m
[36m.daredevel-tree[0m [33mli[0m [33mspan[0m[36m.prepended[0m [36m{[0m[36C[7m|[0m
    [32mposition[0m: [32mabsolute[0m;[48C[7m|[0m
    [32mleft[0m: [31m0px[0m; [56C[7m|[0m
    [32mtop[0m: [31m-5px[0m;         [48C[7m|[0m
    [32mz-index[0m: [31m2[0m; [55C[7m|[0m
    [32mvisibility[0m: [32mhidden[0m;[48C[7m|[0m
    [32mheight[0m: [31m10px[0m;    [50C[7m|[0m
    [32mwidth[0m: [31m100px[0m;     [49C[7m|[0m
    [32moverflow[0m: [32mhidden[0m;[50C[7m|[0m
    [32mbackground-image[0m: [36murl([0m[31m"images/anchor.gif"[0m[36m)[0m;                        [7m|[0m
[36m}[0m                                                                      [7m|[0m
                                                                       [7m|[0m
[36m.daredevel-tree[0m [33mli[0m [33mspan[0m[36m.prepended.over[0m [36m{[0m                               [7m|[0m
    [32mvisibility[0m: [32mvisible[0m;                                               [7m|[0m
[36m}[0m                                                                      [7m|[0m
                                                                       [7m|[0m
[36m.daredevel-tree[0m [33mli[0m [33mspan[0m[36m.droppable-label[0m [36m{[0m                              [7m|[0m
    [32mposition[0m: [32mabsolute[0m;                                                [7m|[0m
[1m[7mjquery.tree.css                                      1,1            Top [0m[1;73H[36m.daredevel-tree[0m [33mli[0m [33mspan[0m[36m.prepended[0m [36m{[0m[2;76H [32mposition[0m: [32mabsolute[0m;[3;76H [32mleft[0m: [31m0px[0m;[4;76H [32mtop[0m: [31m-5px[0m;[5;76H [32mz-index[0m: [31m2[0m;[6;76H [32mvisibility[0m: [32mhidden[0m;[7;76H [32mheight[0m: [31m10px[0m;[8;76H [32mwidth[0m: [31m100px[0m;[9;76H [32moverflow[0m: [32mhidden[0m;[10;76H [32mbackground-image[0m: [36murl([0m[31m"images/anchor.gif"[0m[36m)[0m;[11;73H[36m}[13;73H.daredevel-tree[0m [33mli[0m [33mspan[0m[36m.prepended.over[0m [36m{[0m[14;76H [32mvisibility[0m: [32mvisible[0m;[15;73H[36m}[17;73H.daredevel-tree[0m [33mli[0m [33mspan[0m[36m.droppable-label[0m [36m{[0m[18;76H [32mposition[0m: [32mabsolute[0m;[19;76H [32mleft[0m: [31m0px[0m;[20;76H [32mtop[0m: [31m5px[0m;[21;76H [32mz-index[0m: [31m2[0m;[22;76H [32mvisibility[0m: [32mhidden[0m;[23;76H [32mheight[0m: [31m8px[0m;[24;76H [32mwidth[0m: [31m100px[0m;[25;76H [32moverflow[0m: [32mhidden[0m;[26;76H [32mborder[0m: [32msolid[0m [31m1px[0m;[27;73H[36m}[0m[28;73H[1m[34m~[29;73H~[30;73H~[31;73H~[32;73H~[33;73H~[34;73H~[35;73H~[36;73H~[0m[37;73H[7m_jquery.treednd.css                                  1,1            All[1;1H[34h[?25h[?25l[0m[37;54H[1m[7m2[2;1H[34h[?25h[?25l[37;54H3[3;1H[34h[?25h[?25l[0m[1;20H[36m[46m{


}[0m[37;54H[1m[7m4[4;1H[34h[?25h[?25l[0m[1;20H[36m{


}[0m[37;54H[1m[7m5,0-1[5;1H[34h[?25h[?25l[37;54H6,1  [6;1H[34h[?25h[?25l[37;54H7[7;1H[34h[?25h[?25l[37;54H8[8;1H[34h[?25h[?25l[0m[6;46H[36m[46m{


}[0m[37;54H[1m[7m9[9;1H[34h[?25h[?25l[0m[6;46H[36m{


}[0m[37;54H[1m[7m10,1[10;1H[34h[?25h[?25l[37;55H1[11;1H[34h[?25h[?25l[37;55H2[12;1H[34h[?25h[?25l[37;55H3[13;1H[34h[?25h[?25l[37;55H4[14;1H[34h[?25h[?25l[37;55H5[15;1H[34h[?25h[?25l[0m[11;47H[36m[46m{[16;1H}[0m[37;55H[1m[7m6[16;1H[34h[?25h[?25l[0m[11;47H[36m{[16;1H}[0m[37;55H[1m[7m7,0-1[17;1H[34h[?25h[?25l[37;55H8,1  [18;1H[34h[?25h[?25l[37;55H9[19;1H[34h[?25h[?25l[37;54H20[20;1H[34h[?25h[?25l[37;55H1[21;1H[34h[?25h[?25l[37;55H2[22;1H[34h[?25h[?25l[37;55H3[23;1H[34h[?25h[?25l[37;55H4[24;1H[34h[?25h[?25l[37;55H5[25;1H[34h[?25h[?25l[37;55H6[26;1H[34h[?25h[?25l[37;55H7[27;1H[34h[?25h[?25l[37;55H8[28;1H[34h[?25h[?25l[0m[19;35H[36m[46m{[29;1H}[0m[37;55H[1m[7m9[29;1H[34h[?25h[?25l[0m[19;35H[36m{[29;1H}[0m[37;54H[1m[7m30,0-1[30;1H[34h[?25h[?25l[37;55H1,1  [31;1H[34h[?25h[?25l[37;55H2[32;1H[34h[?25h[?25l[0m[31;40H[36m[46m{

}[0m[37;55H[1m[7m3[33;1H[34h[?25h[?25l[0m[31;40H[36m{

}[0m[37;55H[1m[7m4,0-1[34;1H[34h[?25h[?25l[37;55H5,1  [35;1H[34h[?25h[?25l[37;55H6[36;1H[34h[?25h[?25l[0m[1;1H    [32mlist-style-type[0m: [32mnone[0m;                                             
    [32mposition[0m: [32mrelative[0m;                                                
[36m}[0m                                                                      
                                                                       
[36m.daredevel-tree[0m [33mli[0m [33mspan[0m[36m.daredevel-tree-label[0m [36m{[0m                         
    [32mcursor[0m: [32mdefault[0m;                                                   
    [32mz-index[0m: [31m1[0m;                                                        
[36m}[0m                                                                      
[34m/* collapse */[0m                                                         
[36m.daredevel-tree[0m [33mli[0m [33mspan[0m[36m.daredevel-tree-anchor[0m [36m{[0m                        
    [32mcursor[0m: [32mdefault[0m;                                                   
    [32mposition[0m: [32mabsolute[0m;                                                
    [32mtop[0m: [31m1px[0m;                                                          
    [32mleft[0m: [31m-16px[0m;                                                       
[36m}[0m                                                                      
                                                                       
[34m/* dnd */[0m                                                              
[36m.daredevel-tree[0m [33mli[0m [33mspan[0m[36m.prepended[0m [36m{[0m                                    
    [32mposition[0m: [32mabsolute[0m;                                                
    [32mleft[0m: [31m0px[0m;                                                         
    [32mtop[0m: [31m-5px[0m;                                                         
    [32mz-index[0m: [31m2[0m;                                                        
    [32mvisibility[0m: [32mhidden[0m;                                                
    [32mheight[0m: [31m10px[0m;                                                      
    [32mwidth[0m: [31m100px[0m;                                                      
    [32moverflow[0m: [32mhidden[0m;                                                  
    [32mbackground-image[0m: [36murl([0m[31m"images/anchor.gif"[0m[36m)[0m;                        
[36m}[0m                                                                      
                                                                       
[36m.daredevel-tree[0m [33mli[0m [33mspan[0m[36m.prepended.over[0m [36m{[0m                               
    [32mvisibility[0m: [32mvisible[0m;                                               
[36m}[0m                                                                      
                                                                       
[36m.daredevel-tree[0m [33mli[0m [33mspan[0m[36m.droppable-label[0m [36m{[0m                              
    [32mposition[0m: [32mabsolute[0m;                                                
                                                                           [32mleft[0m: [31m0px[0m;[38;1H[K[37;55H[1m[7m7[13C11%[36;1H[34h[?25h[?25l[0m[1;1H    [32mposition[0m: [32mrelative[0m;                                                
[36m}[0m                                                                      
                                                                       
[36m.daredevel-tree[0m [33mli[0m [33mspan[0m[36m.daredevel-tree-label[0m [36m{[0m                         
    [32mcursor[0m: [32mdefault[0m;                                                   
    [32mz-index[0m: [31m1[0m;                                                        
[36m}[0m                                                                      
[34m/* collapse */[0m                                                         
[36m.daredevel-tree[0m [33mli[0m [33mspan[0m[36m.daredevel-tree-anchor[0m [36m{[0m                        
    [32mcursor[0m: [32mdefault[0m;                                                   
    [32mposition[0m: [32mabsolute[0m;                                                
    [32mtop[0m: [31m1px[0m;                                                          
    [32mleft[0m: [31m-16px[0m;                                                       
[36m}[0m                                                                      
                                                                       
[34m/* dnd */[0m                                                              
[36m.daredevel-tree[0m [33mli[0m [33mspan[0m[36m.prepended[0m [36m{[0m                                    
    [32mposition[0m: [32mabsolute[0m;                                                
    [32mleft[0m: [31m0px[0m;                                                         
    [32mtop[0m: [31m-5px[0m;                                                         
    [32mz-index[0m: [31m2[0m;                                                        
    [32mvisibility[0m: [32mhidden[0m;                                                
    [32mheight[0m: [31m10px[0m;                                                      
    [32mwidth[0m: [31m100px[0m;                                                      
    [32moverflow[0m: [32mhidden[0m;                                                  
    [32mbackground-image[0m: [36murl([0m[31m"images/anchor.gif"[0m[36m)[0m;                        
[36m}[0m                                                                      
                                                                       
[36m.daredevel-tree[0m [33mli[0m [33mspan[0m[36m.prepended.over[0m [36m{[0m                               
    [32mvisibility[0m: [32mvisible[0m;                                               
[36m}[0m                                                                      
                                                                       
[36m.daredevel-tree[0m [33mli[0m [33mspan[0m[36m.droppable-label[0m [36m{[0m                              
    [32mposition[0m: [32mabsolute[0m;                                                
    [32mleft[0m: [31m0px[0m;                                                         
                                                                           [32mtop[0m: [31m5px[0m;[37;55H[1m[7m8[13C22[36;1H[34h[?25h[?25l[0m[1;1H[36m}[0m                                                                      
                                                                       
[36m.daredevel-tree[0m [33mli[0m [33mspan[0m[36m.daredevel-tree-label[0m [36m{[0m                         
    [32mcursor[0m: [32mdefault[0m;                                                   
    [32mz-index[0m: [31m1[0m;                                                        
[36m}[0m                                                                      
[34m/* collapse */[0m                                                         
[36m.daredevel-tree[0m [33mli[0m [33mspan[0m[36m.daredevel-tree-anchor[0m [36m{[0m                        
    [32mcursor[0m: [32mdefault[0m;                                                   
    [32mposition[0m: [32mabsolute[0m;                                                
    [32mtop[0m: [31m1px[0m;                                                          
    [32mleft[0m: [31m-16px[0m;                                                       
[36m}[0m                                                                      
                                                                       
[34m/* dnd */[0m                                                              
[36m.daredevel-tree[0m [33mli[0m [33mspan[0m[36m.prepended[0m [36m{[0m                                    
    [32mposition[0m: [32mabsolute[0m;                                                
    [32mleft[0m: [31m0px[0m;                                                         
    [32mtop[0m: [31m-5px[0m;                                                         
    [32mz-index[0m: [31m2[0m;                                                        
    [32mvisibility[0m: [32mhidden[0m;                                                
    [32mheight[0m: [31m10px[0m;                                                      
    [32mwidth[0m: [31m100px[0m;                                                      
    [32moverflow[0m: [32mhidden[0m;                                                  
    [32mbackground-image[0m: [36murl([0m[31m"images/anchor.gif"[0m[36m)[0m;                        
[36m}[0m                                                                      
                                                                       
[36m.daredevel-tree[0m [33mli[0m [33mspan[0m[36m.prepended.over[0m [36m{[0m                               
    [32mvisibility[0m: [32mvisible[0m;                                               
[36m}[0m                                                                      
                                                                       
[36m.daredevel-tree[0m [33mli[0m [33mspan[0m[36m.droppable-label[0m [36m{[0m                              
    [32mposition[0m: [32mabsolute[0m;                                                
    [32mleft[0m: [31m0px[0m;                                                         
    [32mtop[0m: [31m5px[0m;                                                          
                                                                           [32mz-index[0m: [31m2[0m;[37;55H[1m[7m9[13C33[36;1H[34h[?25h[?25l[0m[1;1H                                                                       
[36m.daredevel-tree[0m [33mli[0m [33mspan[0m[36m.daredevel-tree-label[0m [36m{[0m                         
    [32mcursor[0m: [32mdefault[0m;                                                   
    [32mz-index[0m: [31m1[0m;                                                        
[36m}[0m                                                                      
[34m/* collapse */[0m                                                         
[36m.daredevel-tree[0m [33mli[0m [33mspan[0m[36m.daredevel-tree-anchor[0m [36m{[0m                        
    [32mcursor[0m: [32mdefault[0m;                                                   
    [32mposition[0m: [32mabsolute[0m;                                                
    [32mtop[0m: [31m1px[0m;                                                          
    [32mleft[0m: [31m-16px[0m;                                                       
[36m}[0m                                                                      
                                                                       
[34m/* dnd */[0m                                                              
[36m.daredevel-tree[0m [33mli[0m [33mspan[0m[36m.prepended[0m [36m{[0m                                    
    [32mposition[0m: [32mabsolute[0m;                                                
    [32mleft[0m: [31m0px[0m;                                                         
    [32mtop[0m: [31m-5px[0m;                                                         
    [32mz-index[0m: [31m2[0m;                                                        
    [32mvisibility[0m: [32mhidden[0m;                                                
    [32mheight[0m: [31m10px[0m;                                                      
    [32mwidth[0m: [31m100px[0m;                                                      
    [32moverflow[0m: [32mhidden[0m;                                                  
    [32mbackground-image[0m: [36murl([0m[31m"images/anchor.gif"[0m[36m)[0m;                        
[36m}[0m                                                                      
                                                                       
[36m.daredevel-tree[0m [33mli[0m [33mspan[0m[36m.prepended.over[0m [36m{[0m                               
    [32mvisibility[0m: [32mvisible[0m;                                               
[36m}[0m                                                                      
                                                                       
[36m.daredevel-tree[0m [33mli[0m [33mspan[0m[36m.droppable-label[0m [36m{[0m                              
    [32mposition[0m: [32mabsolute[0m;                                                
    [32mleft[0m: [31m0px[0m;                                                         
    [32mtop[0m: [31m5px[0m;                                                          
    [32mz-index[0m: [31m2[0m;                                                        
                                                                           [32mvisibility[0m: [32mhidden[0m;[37;54H[1m[7m40[13C44[36;1H[34h[?25h[?25l[0m[1;1H[36m.daredevel-tree[0m [33mli[0m [33mspan[0m[36m.daredevel-tree-label[0m [36m{[0m                         
    [32mcursor[0m: [32mdefault[0m;                                                   
    [32mz-index[0m: [31m1[0m;                                                        
[36m}[0m                                                                      
[34m/* collapse */[0m                                                         
[36m.daredevel-tree[0m [33mli[0m [33mspan[0m[36m.daredevel-tree-anchor[0m [36m{[0m                        
    [32mcursor[0m: [32mdefault[0m;                                                   
    [32mposition[0m: [32mabsolute[0m;                                                
    [32mtop[0m: [31m1px[0m;                                                          
    [32mleft[0m: [31m-16px[0m;                                                       
[36m}[0m                                                                      
                                                                       
[34m/* dnd */[0m                                                              
[36m.daredevel-tree[0m [33mli[0m [33mspan[0m[36m.prepended[0m [36m{[0m                                    
    [32mposition[0m: [32mabsolute[0m;                                                
    [32mleft[0m: [31m0px[0m;                                                         
    [32mtop[0m: [31m-5px[0m;                                                         
    [32mz-index[0m: [31m2[0m;                                                        
    [32mvisibility[0m: [32mhidden[0m;                                                
    [32mheight[0m: [31m10px[0m;                                                      
    [32mwidth[0m: [31m100px[0m;                                                      
    [32moverflow[0m: [32mhidden[0m;                                                  
    [32mbackground-image[0m: [36murl([0m[31m"images/anchor.gif"[0m[36m)[0m;                        
[36m}[0m                                                                      
                                                                       
[36m.daredevel-tree[0m [33mli[0m [33mspan[0m[36m.prepended.over[0m [36m{[0m                               
    [32mvisibility[0m: [32mvisible[0m;                                               
[36m}[0m                                                                      
                                                                       
[36m.daredevel-tree[0m [33mli[0m [33mspan[0m[36m.droppable-label[0m [36m{[0m                              
    [32mposition[0m: [32mabsolute[0m;                                                
    [32mleft[0m: [31m0px[0m;                                                         
    [32mtop[0m: [31m5px[0m;                                                          
    [32mz-index[0m: [31m2[0m;                                                        
    [32mvisibility[0m: [32mhidden[0m;                                                
                                                                           [32mheight[0m: [31m8px[0m;[37;55H[1m[7m1[13C55[36;1H[34h[?25h[?25l[0m[1;1H    [32mcursor[0m: [32mdefault[0m;                                                   
    [32mz-index[0m: [31m1[0m;                                                        
[36m}[0m                                                                      
[34m/* collapse */[0m                                                         
[36m.daredevel-tree[0m [33mli[0m [33mspan[0m[36m.daredevel-tree-anchor[0m [36m{[0m                        
    [32mcursor[0m: [32mdefault[0m;                                                   
    [32mposition[0m: [32mabsolute[0m;                                                
    [32mtop[0m: [31m1px[0m;                                                          
    [32mleft[0m: [31m-16px[0m;                                                       
[36m}[0m                                                                      
                                                                       
[34m/* dnd */[0m                                                              
[36m.daredevel-tree[0m [33mli[0m [33mspan[0m[36m.prepended[0m [36m{[0m                                    
    [32mposition[0m: [32mabsolute[0m;                                                
    [32mleft[0m: [31m0px[0m;                                                         
    [32mtop[0m: [31m-5px[0m;                                                         
    [32mz-index[0m: [31m2[0m;                                                        
    [32mvisibility[0m: [32mhidden[0m;                                                
    [32mheight[0m: [31m10px[0m;                                                      
    [32mwidth[0m: [31m100px[0m;                                                      
    [32moverflow[0m: [32mhidden[0m;                                                  
    [32mbackground-image[0m: [36murl([0m[31m"images/anchor.gif"[0m[36m)[0m;                        
[36m}[0m                                                                      
                                                                       
[36m.daredevel-tree[0m [33mli[0m [33mspan[0m[36m.prepended.over[0m [36m{[0m                               
    [32mvisibility[0m: [32mvisible[0m;                                               
[36m}[0m                                                                      
                                                                       
[36m.daredevel-tree[0m [33mli[0m [33mspan[0m[36m.droppable-label[0m [36m{[0m                              
    [32mposition[0m: [32mabsolute[0m;                                                
    [32mleft[0m: [31m0px[0m;                                                         
    [32mtop[0m: [31m5px[0m;                                                          
    [32mz-index[0m: [31m2[0m;                                                        
    [32mvisibility[0m: [32mhidden[0m;                                                
    [32mheight[0m: [31m8px[0m;                                                       
                                                                           [32mwidth[0m: [31m100px[0m;[37;55H[1m[7m2[13C66[36;1H[34h[?25h[?25l[0m[1;1H    [32mz-index[0m: [31m1[0m;                                                        
[36m}[0m                                                                      
[34m/* collapse */[0m                                                         
[36m.daredevel-tree[0m [33mli[0m [33mspan[0m[36m.daredevel-tree-anchor[0m [36m{[0m                        
    [32mcursor[0m: [32mdefault[0m;                                                   
    [32mposition[0m: [32mabsolute[0m;                                                
    [32mtop[0m: [31m1px[0m;                                                          
    [32mleft[0m: [31m-16px[0m;                                                       
[36m}[0m                                                                      
                                                                       
[34m/* dnd */[0m                                                              
[36m.daredevel-tree[0m [33mli[0m [33mspan[0m[36m.prepended[0m [36m{[0m                                    
    [32mposition[0m: [32mabsolute[0m;                                                
    [32mleft[0m: [31m0px[0m;                                                         
    [32mtop[0m: [31m-5px[0m;                                                         
    [32mz-index[0m: [31m2[0m;                                                        
    [32mvisibility[0m: [32mhidden[0m;                                                
    [32mheight[0m: [31m10px[0m;                                                      
    [32mwidth[0m: [31m100px[0m;                                                      
    [32moverflow[0m: [32mhidden[0m;                                                  
    [32mbackground-image[0m: [36murl([0m[31m"images/anchor.gif"[0m[36m)[0m;                        
[36m}[0m                                                                      
                                                                       
[36m.daredevel-tree[0m [33mli[0m [33mspan[0m[36m.prepended.over[0m [36m{[0m                               
    [32mvisibility[0m: [32mvisible[0m;                                               
[36m}[0m                                                                      
                                                                       
[36m.daredevel-tree[0m [33mli[0m [33mspan[0m[36m.droppable-label[0m [36m{[0m                              
    [32mposition[0m: [32mabsolute[0m;                                                
    [32mleft[0m: [31m0px[0m;                                                         
    [32mtop[0m: [31m5px[0m;                                                          
    [32mz-index[0m: [31m2[0m;                                                        
    [32mvisibility[0m: [32mhidden[0m;                                                
    [32mheight[0m: [31m8px[0m;                                                       
    [32mwidth[0m: [31m100px[0m;                                                      
                                                                           [32moverflow[0m: [32mhidden[0m;[37;55H[1m[7m3[13C77[36;1H[34h[?25h[?25l[0m[1;1H[36m}[0m                                                                      
[34m/* collapse */[0m                                                         
[36m.daredevel-tree[0m [33mli[0m [33mspan[0m[36m.daredevel-tree-anchor[0m [36m{[0m                        
    [32mcursor[0m: [32mdefault[0m;                                                   
    [32mposition[0m: [32mabsolute[0m;                                                
    [32mtop[0m: [31m1px[0m;                                                          
    [32mleft[0m: [31m-16px[0m;                                                       
[36m}[0m                                                                      
                                                                       
[34m/* dnd */[0m                                                              
[36m.daredevel-tree[0m [33mli[0m [33mspan[0m[36m.prepended[0m [36m{[0m                                    
    [32mposition[0m: [32mabsolute[0m;                                                
    [32mleft[0m: [31m0px[0m;                                                         
    [32mtop[0m: [31m-5px[0m;                                                         
    [32mz-index[0m: [31m2[0m;                                                        
    [32mvisibility[0m: [32mhidden[0m;                                                
    [32mheight[0m: [31m10px[0m;                                                      
    [32mwidth[0m: [31m100px[0m;                                                      
    [32moverflow[0m: [32mhidden[0m;                                                  
    [32mbackground-image[0m: [36murl([0m[31m"images/anchor.gif"[0m[36m)[0m;                        
[36m}[0m                                                                      
                                                                       
[36m.daredevel-tree[0m [33mli[0m [33mspan[0m[36m.prepended.over[0m [36m{[0m                               
    [32mvisibility[0m: [32mvisible[0m;                                               
[36m}[0m                                                                      
                                                                       
[36m.daredevel-tree[0m [33mli[0m [33mspan[0m[36m.droppable-label[0m [36m{[0m                              
    [32mposition[0m: [32mabsolute[0m;                                                
    [32mleft[0m: [31m0px[0m;                                                         
    [32mtop[0m: [31m5px[0m;                                                          
    [32mz-index[0m: [31m2[0m;                                                        
    [32mvisibility[0m: [32mhidden[0m;                                                
    [32mheight[0m: [31m8px[0m;                                                       
    [32mwidth[0m: [31m100px[0m;                                                      
    [32moverflow[0m: [32mhidden[0m;                                                  
                                                                           [32mborder[0m: [32msolid[0m [31m1px[0m;[37;55H[1m[7m4[13C88[36;1H[34h[?25h[?25l[0m[1;1H[34m/* collapse */[0m                                                         
[36m.daredevel-tree[0m [33mli[0m [33mspan[0m[36m.daredevel-tree-anchor[0m [36m{[0m                        
    [32mcursor[0m: [32mdefault[0m;                                                   
    [32mposition[0m: [32mabsolute[0m;                                                
    [32mtop[0m: [31m1px[0m;                                                          
    [32mleft[0m: [31m-16px[0m;                                                       
[36m}[0m                                                                      
                                                                       
[34m/* dnd */[0m                                                              
[36m.daredevel-tree[0m [33mli[0m [33mspan[0m[36m.prepended[0m [36m{[0m                                    
    [32mposition[0m: [32mabsolute[0m;                                                
    [32mleft[0m: [31m0px[0m;                                                         
    [32mtop[0m: [31m-5px[0m;                                                         
    [32mz-index[0m: [31m2[0m;                                                        
    [32mvisibility[0m: [32mhidden[0m;                                                
    [32mheight[0m: [31m10px[0m;                                                      
    [32mwidth[0m: [31m100px[0m;                                                      
    [32moverflow[0m: [32mhidden[0m;                                                  
    [32mbackground-image[0m: [36murl([0m[31m"images/anchor.gif"[0m[36m)[0m;                        
[36m}[0m                                                                      
                                                                       
[36m.daredevel-tree[0m [33mli[0m [33mspan[0m[36m.prepended.over[0m [36m{[0m                               
    [32mvisibility[0m: [32mvisible[0m;                                               
[36m}[0m                                                                      
                                                                       
[36m.daredevel-tree[0m [33mli[0m [33mspan[0m[36m.droppable-label[0m [36m{[0m                              
    [32mposition[0m: [32mabsolute[0m;                                                
    [32mleft[0m: [31m0px[0m;                                                         
    [32mtop[0m: [31m5px[0m;                                                          
    [32mz-index[0m: [31m2[0m;                                                        
    [32mvisibility[0m: [32mhidden[0m;                                                
    [32mheight[0m: [31m8px[0m;                                                       
    [32mwidth[0m: [31m100px[0m;                                                      
    [32moverflow[0m: [32mhidden[0m;                                                  
    [32mborder[0m: [32msolid[0m [31m1px[0m;                                                 
                                                                       [26;41H[36m[46m{[36;1H}[0m[37;55H[1m[7m5[13CBot[36;1H[34h[?25h[?25l[0m[26;41H[36m{[36;1H}[0m[37;55H[1m[7m4[35;1H[34h[?25h[?25l[0m[1;1H                                                                       
                                                                       
                                                                       
                                                                       
                                                                       
                                                                       
                                                                       
                                                                       
                                                                       
[34m/* collapse */[0m                                                         
[36m.daredevel-tree[0m [33mli[0m [33mspan[0m[36m.daredevel-tree-anchor[0m [36m{[0m                        
    [32mcursor[0m: [32mdefault[0m;                                                   
    [32mposition[0m: [32mabsolute[0m;                                                
    [32mtop[0m: [31m1px[0m;                                                          
    [32mleft[0m: [31m-16px[0m;                                                       
[36m}[0m                                                                      
                                                                       
[34m/* dnd */[0m                                                              
[36m.daredevel-tree[0m [33mli[0m [33mspan[0m[36m.prepended[0m [36m{[0m                                    
    [32mposition[0m: [32mabsolute[0m;                                                
    [32mleft[0m: [31m0px[0m;                                                         
    [32mtop[0m: [31m-5px[0m;                                                         
    [32mz-index[0m: [31m2[0m;                                                        
    [32mvisibility[0m: [32mhidden[0m;                                                
    [32mheight[0m: [31m10px[0m;                                                      
    [32mwidth[0m: [31m100px[0m;                                                      
    [32moverflow[0m: [32mhidden[0m;                                                  
    [32mbackground-image[0m: [36murl([0m[31m"images/anchor.gif"[0m[36m)[0m;                        
[36m}[0m                                                                      
                                                                       
[36m.daredevel-tree[0m [33mli[0m [33mspan[0m[36m.prepended.over[0m [36m{[0m                               
    [32mvisibility[0m: [32mvisible[0m;                                               
[36m}[0m                                                                      
                                                                       
[36m.daredevel-tree[0m [33mli[0m [33mspan[0m[36m.droppable-label[0m [36m{[0m                              
    [32mposition[0m: [32mabsolute[0m;                                                [1;1H[36m.daredevel-tree[0m [33mli[0m [36m{[0m
    [32mlist-style-type[0m: [32mnone[0m;
    [32mposition[0m: [32mrelative[0m;
[36m}

.daredevel-tree[0m [33mli[0m [33mspan[0m[36m.daredevel-tree-label[0m [36m{[0m
    [32mcursor[0m: [32mdefault[0m;
    [32mz-index[0m: [31m1[0m;
[36m}[0m[37;54H[1m[7m11[13CTop[11;1H[34h[?25h[?25l[34h[?25h[?25l[38;1H[0m:[34h[?25hq[?25l[34h[?25h![?25l[34h[?25h[?25l[1;19H [33mspan[0m[36m.prepended[0m [36m{[0m[1;72H[K[2;4H [32mposition[0m: [32mabsolute[0m;[2;24H[K[3;4H [32mleft[0m: [31m0px[0m;[3;15H[K[4;1H    [32mtop[0m: [31m-5px[0m;[4;72H[K[5;4H [32mz-index[0m: [31m2[0m;[5;72H[K[6;1H    [32mvisibility[0m: [32mhidden[0m;[6;24H[K[7;4H [32mheight[0m: [31m10px[0m;[7;18H[K[8;4H [32mwidth[0m: [31m100px[0m;[8;72H[K[9;1H    [32moverflow[0m: [32mhidden[0m;[9;72H[K[10;1H    [32mbackground-image[0m: [36murl([0m[31m"images/anchor.gif"[0m[36m)[0m;[10;72H[K[11;1H[36m}[0m[11;2H[K[12;5H[K[13;1H[36m.daredevel-tree[0m [33mli[0m [33mspan[0m[36m.prepended.over[0m [36m{[0m[13;72H[K[14;4H [32mvisibility[0m: [32mvisible[0m;[14;72H[K[15;1H[36m}[0m[15;5H[K[16;1H[K[17;1H[36m.daredevel-tree[0m [33mli[0m [33mspan[0m[36m.droppable-label[0m [36m{[0m[17;72H[K[18;1H    [32mposition[0m: [32mabsolute[0m;[18;72H[K[19;1H    [32mleft[0m: [31m0px[0m;[19;15H[K[20;4H [32mtop[0m: [31m5px[0m;[20;15H[K[21;4H [32mz-index[0m: [31m2[0m;[21;72H[K[22;4H [32mvisibility[0m: [32mhidden[0m;[22;72H[K[23;4H [32mheight[0m: [31m8px[0m;[23;72H[K[24;4H [32mwidth[0m: [31m100px[0m;[24;18H[K[25;4H [32moverflow[0m: [32mhidden[0m;[25;72H[K[26;4H [32mborder[0m: [32msolid[0m [31m1px[0m;[26;72H[K[27;1H[36m}[0m[27;5H[K[28;1H[1m[34m~                                                                        
~                                                                        
~                                                                        
~                                                                        
~                                                                        
~                                                                        
~                                                                        
~                                                                        
~                                                                        
~                                                                                                                                              [0m[38;126H1,1[11CAll[1;1H[34h[?25h[?25l[38;1H[K[38;1H:[34h[?25hq[?25l[34h[?25h![?25l[34h[?25h[?25l[38;1H[K[38;1H[?1l>[34h[?25h[?1049lsriram@ubuntu:/space/hashincludetest/mocking-bird/plugins/jquery-tree-master/src/css$ 
sriram@ubuntu:/space/hashincludetest/mocking-bird/plugins/jquery-tree-master/src/css$ 
sriram@ubuntu:/space/hashincludetest/mocking-bird/plugins/jquery-tree-master/src/css$ 
sriram@ubuntu:/space/hashincludetest/mocking-bird/plugins/jquery-tree-master/src/css$ 
sriram@ubuntu:/space/hashincludetest/mocking-bird/plugins/jquery-tree-master/src/css$ 
sriram@ubuntu:/space/hashincludetest/mocking-bird/plugins/jquery-tree-master/src/css$ ls
[0m[01;34mimages[0m  [01;32mjquery.tree.css[0m  _jquery.treednd.css
sriram@ubuntu:/space/hashincludetest/mocking-bird/plugins/jquery-tree-master/src/css$ 
sriram@ubuntu:/space/hashincludetest/mocking-bird/plugins/jquery-tree-master/src/css$ 
sriram@ubuntu:/space/hashincludetest/mocking-bird/plugins/jquery-tree-master/src/css$ 
sriram@ubuntu:/space/hashincludetest/mocking-bird/plugins/jquery-tree-master/src/css$ 
sriram@ubuntu:/space/hashincludetest/mocking-bird/plugins/jquery-tree-master/src/css$ cd ,,'[K[K[K[K[K[Kcp jquery.tree.css /[K/space [K/mockingbird[K[K[K[K[K[K[K[K[K[K[Khashincludetest [K/mocking-bird [K/mo ck
/space/hashincludetest/mocking-bird/mockingsite  /space/hashincludetest/mocking-bird/mocktest
sriram@ubuntu:/space/hashincludetest/mocking-bird/plugins/jquery-tree-master/src/css$ cp jquery.tree.css /space/hashincludetest/mocking-bird/mocck
/space/hashincludetest/mocking-bird/mockingsite  /space/hashincludetest/mocking-bird/mocktest
sriram@ubuntu:/space/hashincludetest/mocking-bird/plugins/jquery-tree-master/src/css$ cp jquery.tree.css /space/hashincludetest/mocking-bird/mocckingsite [K/
/space/hashincludetest/mocking-bird/mockingsite/__init__.py   /space/hashincludetest/mocking-bird/mockingsite/static
/space/hashincludetest/mocking-bird/mockingsite/__init__.pyc  /space/hashincludetest/mocking-bird/mockingsite/urls.py
/space/hashincludetest/mocking-bird/mockingsite/logfile       /space/hashincludetest/mocking-bird/mockingsite/urls.pyc
/space/hashincludetest/mocking-bird/mockingsite/logfile.1     /space/hashincludetest/mocking-bird/mockingsite/wsgi.py
/space/hashincludetest/mocking-bird/mockingsite/settings.py   /space/hashincludetest/mocking-bird/mockingsite/wsgi.pyc
/space/hashincludetest/mocking-bird/mockingsite/settings.pyc  
sriram@ubuntu:/space/hashincludetest/mocking-bird/plugins/jquery-tree-master/src/css$ cp jquery.tree.css /space/hashincludetest/mocking-bird/mocckingsite/static [K/
/space/hashincludetest/mocking-bird/mockingsite/static/admin
/space/hashincludetest/mocking-bird/mockingsite/static/bower_components
/space/hashincludetest/mocking-bird/mockingsite/static/bower.json
/space/hashincludetest/mocking-bird/mockingsite/static/mocktest
sriram@ubuntu:/space/hashincludetest/mocking-bird/plugins/jquery-tree-master/src/css$ cp jquery.tree.css /space/hashincludetest/mocking-bird/mocckingsite/static/mocktest [K/
/space/hashincludetest/mocking-bird/mockingsite/static/mocktest/fonts
/space/hashincludetest/mocking-bird/mockingsite/static/mocktest/images
/space/hashincludetest/mocking-bird/mockingsite/static/mocktest/scripts
/space/hashincludetest/mocking-bird/mockingsite/static/mocktest/styles
sriram@ubuntu:/space/hashincludetest/mocking-bird/plugins/jquery-tree-master/src/css$ cp jquery.tree.css /space/hashincludetest/mocking-bird/mocckingsite/static/mocktest/styles [K/
/space/hashincludetest/mocking-bird/mockingsite/static/mocktest/styles/autocomplete.css
/space/hashincludetest/mocking-bird/mockingsite/static/mocktest/styles/components.css
/space/hashincludetest/mocking-bird/mockingsite/static/mocktest/styles/fancyDate.css
/space/hashincludetest/mocking-bird/mockingsite/static/mocktest/styles/jquery.countdown.css
/space/hashincludetest/mocking-bird/mockingsite/static/mocktest/styles/jquery.flipcountdown.css
/space/hashincludetest/mocking-bird/mockingsite/static/mocktest/styles/jquerymobile.css
/space/hashincludetest/mocking-bird/mockingsite/static/mocktest/styles/main.css
/space/hashincludetest/mocking-bird/mockingsite/static/mocktest/styles/styles
sriram@ubuntu:/space/hashincludetest/mocking-bird/plugins/jquery-tree-master/src/css$ cp jquery.tree.css /space/hashincludetest/mocking-bird/mocckingsite/static/mocktest/styles/
sriram@ubuntu:/space/hashincludetest/mocking-bird/plugins/jquery-tree-master/src/css$ 
sriram@ubuntu:/space/hashincludetest/mocking-bird/plugins/jquery-tree-master/src/css$ 
sriram@ubuntu:/space/hashincludetest/mocking-bird/plugins/jquery-tree-master/src/css$ 
sriram@ubuntu:/space/hashincludetest/mocking-bird/plugins/jquery-tree-master/src/css$ ls
[0m[01;34mimages[0m  [01;32mjquery.tree.css[0m  _jquery.treednd.css
sriram@ubuntu:/space/hashincludetest/mocking-bird/plugins/jquery-tree-master/src/css$ cd images/
sriram@ubuntu:/space/hashincludetest/mocking-bird/plugins/jquery-tree-master/src/css/images$ kls[K[K[Kls
[0m[01;35manchor.gif[0m  [01;35manchor.xcf[0m
sriram@ubuntu:/space/hashincludetest/mocking-bird/plugins/jquery-tree-master/src/css/images$ cp * /space/hashincludetest/mocking-bird/mockingsi te/static/mocktest/styles/[K[K[K[K[K[K[K
/space/hashincludetest/mocking-bird/mockingsite/static/mocktest/fonts
/space/hashincludetest/mocking-bird/mockingsite/static/mocktest/images
/space/hashincludetest/mocking-bird/mockingsite/static/mocktest/scripts
/space/hashincludetest/mocking-bird/mockingsite/static/mocktest/styles
sriram@ubuntu:/space/hashincludetest/mocking-bird/plugins/jquery-tree-master/src/css/images$ cp * /space/hashincludetest/mocking-bird/mockingsitte/static/mocktest/images/
/space/hashincludetest/mocking-bird/mockingsite/static/mocktest/images/background_blur1.jpg
/space/hashincludetest/mocking-bird/mockingsite/static/mocktest/images/background.jpg
/space/hashincludetest/mocking-bird/mockingsite/static/mocktest/images/background_orig.jpg
/space/hashincludetest/mocking-bird/mockingsite/static/mocktest/images/digits.png
/space/hashincludetest/mocking-bird/mockingsite/static/mocktest/images/hamburger.png
/space/hashincludetest/mocking-bird/mockingsite/static/mocktest/images/hamburger.svg
/space/hashincludetest/mocking-bird/mockingsite/static/mocktest/images/icons
/space/hashincludetest/mocking-bird/mockingsite/static/mocktest/images/images
/space/hashincludetest/mocking-bird/mockingsite/static/mocktest/images/touch
sriram@ubuntu:/space/hashincludetest/mocking-bird/plugins/jquery-tree-master/src/css/images$ cp * /space/hashincludetest/mocking-bird/mockingsitte/static/mocktest/images/icons anchor.[K[K[K[K[K[K[K[K/
sriram@ubuntu:/space/hashincludetest/mocking-bird/plugins/jquery-tree-master/src/css/images$ 
sriram@ubuntu:/space/hashincludetest/mocking-bird/plugins/jquery-tree-master/src/css/images$ 
sriram@ubuntu:/space/hashincludetest/mocking-bird/plugins/jquery-tree-master/src/css/images$ 
sriram@ubuntu:/space/hashincludetest/mocking-bird/plugins/jquery-tree-master/src/css/images$ 
sriram@ubuntu:/space/hashincludetest/mocking-bird/plugins/jquery-tree-master/src/css/images$ 
sriram@ubuntu:/space/hashincludetest/mocking-bird/plugins/jquery-tree-master/src/css/images$ cd .
sriram@ubuntu:/space/hashincludetest/mocking-bird/plugins/jquery-tree-master/src/css/images$ cd ..
sriram@ubuntu:/space/hashincludetest/mocking-bird/plugins/jquery-tree-master/src/css$ ls
[0m[01;34mimages[0m  [01;32mjquery.tree.css[0m  _jquery.treednd.css
sriram@ubuntu:/space/hashincludetest/mocking-bird/plugins/jquery-tree-master/src/css$ cd ..
sriram@ubuntu:/space/hashincludetest/mocking-bird/plugins/jquery-tree-master/src$ ls
[0m[01;34mcss[0m  [01;34mjs[0m
sriram@ubuntu:/space/hashincludetest/mocking-bird/plugins/jquery-tree-master/src$ cd js/
sriram@ubuntu:/space/hashincludetest/mocking-bird/plugins/jquery-tree-master/src/js$ s[Kls
jquery.treeajax.js  jquery.treecheckbox.js  jquery.treecollapse.js  jquery.treednd.js  [0m[01;32mjquery.tree.js[0m
sriram@ubuntu:/space/hashincludetest/mocking-bird/plugins/jquery-tree-master/src/js$ vi jquery.tree.js
[?1049h[?1h=[1;38r[34l[34h[?25h[23m[24m[0m[H[J[?25l[38;1H"jquery.tree.js" 1212L, 35888C[1;1H[34m/*!
 * Tree - jQuery Tree Widget
 * @author Valerio Galano <v.galano@daredevel.com>
 * @license MIT
 * @see https://github.com/daredevel/jquery-tree
 * @version 0.1
 */[0m
([36mfunction[0m ($, [33mundefined[0m) [36m{[0m
    $.widget([31m"daredevel.tree"[0m, [36m{[0m[11;8H [34m/**
         * Attach node li code under passed parent element at passed position
         *
         * @private
         *
         * @param li node to attach
         * @param parent element to attach node to (can be another node or widget base element)
         * @param position position of the node between brothers (expressed as positive integer)
         */[0m[20;8H _attachLi: [36mfunction[0m (li, [33mparent[0m, position) [36m{[0m[22;12H [36mvar[0m ul = [33mparent[0m.find([31m'ul:first'[0m);[24;12H [33mif[0m (ul.length) [36m{[0m[25;16H [33mif[0m (([33mundefined[0m == position) || (ul.children([31m'li'[0m).length < position)) [36m{[0m[26;20H ul.append(li);[27;16H [36m}[0m [33melse[0m [36m{[0m[28;20H [33mif[0m (position == 0) [36m{[0m[29;24H position = position + 1;[30;20H [36m}[0m[31;20H ul.children([31m'li:nth-child('[0m + position + [31m')'[0m).before(li);[32;16H [36m}[0m[33;12H [36m}[0m [33melse[0m [36m{[0m[34;16H ul = $([31m'<ul/>'[0m);[35;16H [33mparent[0m.append(ul.append(li));[36;12H [36m}[0m[38;126H1,1[11CTop[1;1H[34h[?25h[?25l[23m[24m[0m[H[J[1;12H [36m}[0m[3;8H [36m}[0m,[5;8H [34m/**
         * Attach a node under passed parent (if no parent is passed, node is attached as root)
         *
         * @private
         *
         * @param li node to attach
         * @param parentLi node under which new node will be attached
         * @param position position of the node between brothers (expressed as positive integer)
         */[0m[14;8H _attachNode: [36mfunction[0m (li, parentLi, position) [36m{[0m[16;12H [33mif[0m ([33mundefined[0m == parentLi) [36m{[0m[18;16H [36mvar[0m [33mparent[0m = [36mthis[0m.element;[20;16H [36mthis[0m._attachLi(li, [33mparent[0m, position);[22;16H [34m//initialize nodes from core to call all components initialize methods[0m[23;16H [36mthis[0m._initializeNode(li);[25;12H [36m}[0m [33melse[0m [36m{[0m[27;16H [36mvar[0m [33mparent[0m = parentLi;[29;16H [36mthis[0m._attachLi(li, [33mparent[0m, position);[31;16H [33mparent[0m.removeClass([31m'leaf collapsed'[0m).addClass([31m'expanded'[0m); [34m//@todo find right way to do this[0m[33;16H [34m//initialize nodes from core to call all components initialize methods[0m[34;16H [36mthis[0m._initializeNode(li);[35;16H [36mthis[0m._initializeNode([33mparent[0m);[36;12H [36m}[0m[37;8H [36m}[0m,[38;126H36,13[10C2%[1;13H[34h[?25h[?25l[23m[24m[0m[H[J[1;12H [36m}[0m[2;8H [36m}[0m,[4;8H [34m/**
         * Create a new node object
         *
         * Attributes must contains a list of attributes for html elements of the node.
         *
         * @private
         *
         * @param attributes object containing a list of new node's html elements attributes
         * @return a li element object
         */[0m[14;8H _buildNode: [36mfunction[0m (attributes) [36m{[0m[16;12H attributes = $.extend([31mtrue[0m, [36mthis[0m.options.defaultNodeAttributes, attributes);[18;12H [34m// create new node label[0m[19;12H [36mvar[0m span = $([31m'<span/>'[0m, attributes.span);[21;12H [34m// create node[0m[22;12H [36mvar[0m li = $([31m'<li/>'[0m, attributes.li);[24;12H [34m// if checkbox component is active, new node must contain checkbox input[0m[25;12H [33mif[0m ($.inArray([31m'checkbox'[0m, [36mthis[0m.options.components) > -1) [36m{[0m[26;16H [36mvar[0m input = $([31m'<input/>'[0m,[27;20H attributes.input[28;16H );[29;16H li.append(input);[30;12H [36m}[0m[32;12H li.append(span);[34;12H [33mreturn[0m li;[35;8H [36m}[0m,[37;8H [34m/**[0m[38;126H71,13[10C5%[1;13H[34h[?25h[?25l[23m[24m[0m[H[J[2;8H [34m/**
         * Initialize plugin.
         *
         * @private
         *
         * @note Base tree structure must be something like this:
         *
         * <div id="tree">
         *   <ul>
         *     <li id="node1" class="expanded"><input type="checkbox"><label>Node 1</label><span>Node 1</span>
         *       <ul>
         *         <li><input type="checkbox"><label>Node 1.1</label>
         *         <li><input type="checkbox"><label>Node 1.2</label>
         *       </ul>
         *     </li>
         *   </ul>
         * </div>
         *
         * 1) input type="checkbox" tag and label tag are mandatory only to use checkbox component
         */[0m[22;8H _create: [36mfunction[0m () [36m{[0m[24;12H [36mvar[0m t = [36mthis[0m;[26;12H [34m// add core widget to options so components can add methods @todo remove core variable[0m[27;12H [36mthis[0m.options.core = [36mthis[0m;[29;12H [34m// add jQueryUI css widget classes[0m[30;12H [36mthis[0m.element.addClass([31m'ui-widget ui-widget-content daredevel-tree'[0m);[32;12H [34m// initialize requested features[0m[33;12H [33mif[0m ([36mthis[0m.options.checkbox) [36m{[0m[34;16H [36mthis[0m._createCheckbox();[35;12H [36m}[0m[36;12H [33mif[0m ([36mthis[0m.options.collapsible) [36m{[0m[37;16H [36mthis[0m._createCollapsible();[38;126H106,0-1[8C8%[1;1H[34h[?25h[?25l[23m[24m[0m[H[J[1;12H [33mif[0m ([36mthis[0m.options.collapsible) [36m{[0m[2;16H [36mthis[0m._createCollapsible();[3;12H [36m}[0m[4;12H [33mif[0m ([36mthis[0m.options.dnd) [36m{[0m[5;16H [36mthis[0m._createDnd();[6;12H [36m}[0m[7;12H [33mif[0m ([36mthis[0m.options.selectable) [36m{[0m[8;16H [36mthis[0m._createSelectable();[9;12H [36m}[0m[11;12H [34m// initialize requested components[0m[12;12H [34m//this._initializeComponents();[0m[14;12H [36mthis[0m.element.find([31m'li'[0m).each([36mfunction[0m () [36m{[0m[15;16H t._initializeNode($([36mthis[0m));[16;12H [36m}[0m);[18;12H [33mif[0m ([36mthis[0m.options.nodes != [33mnull[0m) [36m{[0m[19;16H $.each([36mthis[0m.options.nodes, [36mfunction[0m (key, value) [36m{[0m[20;20H t.options.core.addNode(value);[21;16H [36m}[0m);[22;12H [36m}[0m[23;8H [36m}[0m,[25;8H [34m/**
         * Destroy plugin
         *
         * @private
         *
         * @todo complete destroy method
         */[0m[32;8H _destroy: [36mfunction[0m () [36m{[0m[33;12H $.Widget.prototype.destroy.call([36mthis[0m);[34;8H [36m}[0m,[36;8H [34m/**
         * Detach a node (actually don't delete it)[0m[38;126H141,13[8C11%[1;13H[34h[?25h[?25l[23m[24m[0m[H[J[1;8H [34m/**
         * Detach a node (actually don't delete it)
         *
         * @private
         *
         * @param li node to detach
         */[0m[8;8H _detachNode: [36mfunction[0m (li) [36m{[0m[10;12H [36mvar[0m parentLi = [36mthis[0m.options.core.parentNode(li);[12;12H [36mvar[0m ul = parentLi.find([31m'ul:first'[0m);[14;12H [33mif[0m (ul.children().length == 1) [36m{[0m[15;16H ul.detach();[16;16H parentLi.removeClass([31m'collapsed expanded'[0m).addClass([31m'leaf'[0m) [34m//@todo find right way to do this[0m[17;12H [36m}[0m [33melse[0m [36m{[0m[18;16H li.detach();[19;12H [36m}[0m[21;12H [34m//initialize node from core to call all components initialize methods[0m[22;12H [36mthis[0m.options.core._initializeNode(parentLi);[23;8H [36m}[0m,[25;8H [34m/**
         * Initialize requested components
         *
         * @private
         */[0m[30;8H _initializeComponents: [36mfunction[0m () [36m{[0m[31;12H [33mfor[0m ([36mvar[0m i [33min[0m [36mthis[0m.options.components) [36m{[0m[32;16H [36mvar[0m initializeComponent = [31m'element.tree'[0m + [36mthis[0m.options.components[36m[[0mi[36m][0m + [31m'(options);'[0m;[33;16H run = [33mnew[0m [32mFunction[0m([31m"options"[0m, [31m"element"[0m, initializeComponent);[34;16H run([36mthis[0m.options, [36mthis[0m.element);[35;12H [36m}[0m[36;8H [36m}[0m,[38;126H176,9[9C14%[1;9H[34h[?25h[?25l[23m[24m[0m[H[J[1;8H [36m}[0m,[3;8H [34m/**
         * Initialize passed node
         *
         * @private
         *
         * @param li node to initialize
         */[0m[10;8H _initializeNode: [36mfunction[0m (li) [36m{[0m[11;12H li.children([31m'span:last'[0m).addClass([31m'daredevel-tree-label'[0m);[13;12H [33mif[0m ([36mthis[0m.options.checkbox) [36m{[0m[14;16H [36mthis[0m._initializeCheckboxNode(li);[15;12H [36m}[0m[16;12H [33mif[0m ([36mthis[0m.options.collapsible) [36m{[0m[17;16H [36mthis[0m._initializeCollapsibleNode(li);[18;12H [36m}[0m[19;12H [33mif[0m ([36mthis[0m.options.dnd) [36m{[0m[20;16H [36mthis[0m._initializeDndNode(li);[21;12H [36m}[0m[22;12H [33mif[0m ([36mthis[0m.options.selectable) [36m{[0m[23;16H [36mthis[0m._initializeSelectableNode(li);[24;12H [36m}[0m[25;8H [36m}[0m,[27;8H [34m/**
         * Add a new node as children of passed one
         *
         * @public
         *
         * @param attributes new node attributes
         * @param parentLi node under which new node will be attached
         * @param position position of the node between brothers (expressed as positive integer)
         */[0m[36;8H addNode: [36mfunction[0m (attributes, parentLi, position) [36m{[0m[38;126H211,9[9C17%[1;9H[34h[?25h[?25l[23m[24m[0m[H[J[1;8H addNode: [36mfunction[0m (attributes, parentLi, position) [36m{[0m[3;12H [36mvar[0m t = [36mthis[0m;[5;12H [36mvar[0m li = [36mthis[0m._buildNode(attributes);[7;12H [33mif[0m (([33mundefined[0m == parentLi) || 0 == parentLi.length) [36m{[0m[8;16H [36mthis[0m._attachNode($(li), [33mundefined[0m, position);[9;12H [36m}[0m [33melse[0m [36m{[0m[10;16H [36mthis[0m._attachNode($(li), $(parentLi), position);[11;12H [36m}[0m[13;12H [33mif[0m ([33mundefined[0m != attributes.children) [36m{[0m[14;16H $.each(attributes.children, [36mfunction[0m (key, value) [36m{[0m[15;20H t.addNode(value, li);[16;16H [36m}[0m);[17;12H [36m}[0m[19;12H t._trigger([31m'add'[0m, [31mtrue[0m, li);[20;8H [36m}[0m,[22;8H [34m/**
         * Check if passed node is a root
         *
         * @public
         *
         * @param li node to check
         */[0m[29;8H isRoot: [36mfunction[0m (li) [36m{[0m[31;12H li = $(li);[33;12H [36mvar[0m parents = li.parentsUntil([31m'.daredevel-tree'[0m);[35;12H [33mreturn[0m 1 == parents.length;[36;8H [36m}[0m,[38;126H246,9[9C20%[1;9H[34h[?25h[?25l[23m[24m[0m[H[J[1;8H [36m}[0m,[3;8H [34m/**
         * Move a node under new parent
         *
         * @param li node to move
         * @param parentLi node under which node will be moved
         * @param position position of the node between brothers (expressed as positive integer)
         */[0m[10;8H moveNode: [36mfunction[0m (li, parentLi, position) [36m{[0m[12;12H [36mthis[0m._detachNode($(li));[14;12H [33mif[0m (([33mundefined[0m == parentLi) || 0 == parentLi.length) [36m{[0m[15;16H [36mthis[0m._attachNode($(li), [33mundefined[0m, position);[16;12H [36m}[0m [33melse[0m [36m{[0m[17;16H [36mthis[0m._attachNode($(li), $(parentLi), position);[18;12H [36m}[0m[20;12H [36mthis[0m._trigger([31m'move'[0m, [31mtrue[0m, $(li));[21;8H [36m}[0m,[23;8H [34m/**
         * Return parent li of the passed li
         *
         * @public
         *
         * @param li node as jQuery object or selector
         * @return parent li
         */[0m[31;8H parentNode: [36mfunction[0m (li) [36m{[0m[32;12H [33mreturn[0m $(li).parents([31m'li:first'[0m);[33;8H [36m}[0m,[35;8H [34m/**
         * Remove a node from tree (node is not actually delete, but still in memory)
         *[0m[38;126H281,9[9C23%[1;9H[34h[?25h[?25l[23m[24m[0m[H[J[1;1H[34m         * Remove a node from tree (node is not actually delete, but still in memory)
         *
         * @param li node to delete (can be jQuery object or selector)
         */[0m[5;8H removeNode: [36mfunction[0m (li) [36m{[0m[7;12H [36mthis[0m._detachNode($(li));[9;12H [36mthis[0m._trigger([31m'remove'[0m, [31mtrue[0m, $(li));[11;8H [36m}[0m,[13;8H [34m/**
         * Check if all descendant of passed node are checked
         *
         * @private
         * @param li node
         * @return true if all descendant checked
         */[0m[20;8H _allDescendantChecked: [36mfunction[0m (li) [36m{[0m[21;12H [33mreturn[0m (li.find([31m'li input:checkbox:not(:checked)'[0m).length == 0);[22;8H [36m}[0m,[24;8H [34m/**
         * Check ancestors on passed node
         *
         * Don't use check() method because we won't trigger onCheck events
         *
         * @private
         * @param li node
         */[0m[32;8H _checkAncestors: [36mfunction[0m (li) [36m{[0m[33;12H li.parentsUntil([31m'daredevel-tree'[0m).filter([31m'li'[0m).find([31m'input:checkbox:first:not(:checked)'[0m).prop([31m'checked'[0m, [31mtrue[0m).change();[34;8H [36m}[0m,[36;8H [34m/**
         * Check descendants on passed node[0m[38;126H316,10[8C26%[1;10H[34h[?25h[?25l[23m[24m[0m[H[J[1;8H [34m/**
         * Check descendants on passed node
         *
         * Don't use check() method because we won't trigger onCheck events
         *
         * @private
         * @param li node
         */[0m[9;8H _checkDescendants: [36mfunction[0m (li) [36m{[0m[10;12H li.find([31m'li input:checkbox:not(:checked)'[0m).prop([31m'checked'[0m, [31mtrue[0m).change();[11;8H [36m}[0m,[13;8H [34m/**
         * Check nodes that are neither ancestors or descendants of passed node
         *
         * Don't use check() method because we won't trigger onCheck events
         *
         * @private
         * @param li node
         */[0m[21;8H _checkOthers: [36mfunction[0m (li) [36m{[0m[22;12H [36mvar[0m t = [36mthis[0m;[23;12H li.addClass([31m'exclude'[0m);[24;12H li.parents([31m'li'[0m).addClass([31m'exclude'[0m);[25;12H li.find([31m'li'[0m).addClass([31m'exclude'[0m);[26;12H $([36mthis[0m.element).find([31m'li'[0m).each([36mfunction[0m () [36m{[0m[27;16H [33mif[0m (!$([36mthis[0m).hasClass([31m'exclude'[0m)) [36m{[0m[28;20H $([36mthis[0m).find([31m'input:checkbox:first:not(:checked)'[0m).prop([31m'checked'[0m, [31mtrue[0m).change();[29;16H [36m}[0m[30;12H [36m}[0m);[31;12H $([36mthis[0m.element).find([31m'li'[0m).removeClass([31m'exclude'[0m);[32;8H [36m}[0m,[34;8H [34m/**
         * Initialize plugin.
         *
         * @private[0m[38;126H351,9[9C29%[1;9H[34h[?25h[?25l[23m[24m[0m[H[J[1;1H[34m         *
         * @private
         */[0m[4;8H _createCheckbox: [36mfunction[0m () [36m{[0m[6;12H [36mvar[0m t = [36mthis[0m;[8;12H [34m// bind node uncheck event[0m[9;12H [36mthis[0m.element.on([31m'click'[0m, [31m'input:checkbox:not(:checked)'[0m, [36mfunction[0m () [36m{[0m[10;16H t.uncheck(t.options.core.parentNode($([36mthis[0m)));[11;12H [36m}[0m);[13;12H [34m// bind node check event[0m[14;12H [36mthis[0m.element.on([31m'click'[0m, [31m'input:checkbox:checked'[0m, [36mfunction[0m () [36m{[0m[15;16H t.check(t.options.core.parentNode($([36mthis[0m)));[16;12H [36m}[0m);[18;12H [34m// bind collapse on uncheck event[0m[19;12H [33mif[0m ([36mthis[0m.options.onUncheck.node == [31m'collapse'[0m) [36m{[0m[20;16H [36mthis[0m.element.on([31m"click"[0m, [31m'input:checkbox:not(:checked)'[0m, [36mfunction[0m () [36m{[0m[21;20H t.options.core.collapse(t.options.core.parentNode($([36mthis[0m)));[22;16H [36m}[0m);[23;12H [36m}[0m [33melse[0m[25;12H [34m// bind expand on uncheck event[0m[26;12H [33mif[0m ([36mthis[0m.options.onUncheck.node == [31m'expand'[0m) [36m{[0m[27;16H [36mthis[0m.element.on([31m"click"[0m, [31m'input:checkbox:not(:checked)'[0m, [36mfunction[0m () [36m{[0m[28;20H t.options.core.expand(t.options.core.parentNode($([36mthis[0m)));[29;16H [36m}[0m);[30;12H [36m}[0m[32;12H [34m// bind collapse on check event[0m[33;12H [33mif[0m ([36mthis[0m.options.onCheck.node == [31m'collapse'[0m) [36m{[0m[34;16H [36mthis[0m.element.on([31m"click"[0m, [31m'input:checkbox:checked'[0m, [36mfunction[0m () [36m{[0m[35;20H t.options.core.collapse(t.options.core.parentNode($([36mthis[0m)));[36;16H [36m}[0m);[37;12H [36m}[0m [33melse[0m[38;126H386,10[8C32%[1;10H[34h[?25h[?25l[23m[24m[0m[H[J[1;16H [36m}[0m);[2;12H [36m}[0m [33melse[0m[4;12H [34m// bind expand on check event[0m[5;12H [33mif[0m ([36mthis[0m.options.onCheck.node == [31m'expand'[0m) [36m{[0m[6;16H [36mthis[0m.element.on([31m"click"[0m, [31m'input:checkbox:checked'[0m, [36mfunction[0m () [36m{[0m[7;20H t.options.core.expand(t.options.core.parentNode($([36mthis[0m)));[8;16H [36m}[0m);[9;12H [36m}[0m[10;8H [36m}[0m,[12;8H [34m/**
         * Initialize passed node
         *
         * @private
         * @param li node to initialize
         */[0m[18;8H _initializeCheckboxNode: [36mfunction[0m (li) [36m{[0m[20;8H [36m}[0m,[22;8H [34m/**
         * Uncheck ancestors of passed node
         *
         * Don't use uncheck() method because we won't trigger onUncheck events
         *
         * @private
         * @param li node
         */[0m[30;8H _uncheckAncestors: [36mfunction[0m (li) [36m{[0m[31;12H li.parentsUntil([31m'daredevel-tree'[0m).filter([31m'li'[0m).find([31m'input:checkbox:first:checked'[0m).prop([31m'checked'[0m, [31mfalse[0m).change();[32;8H [36m}[0m,[34;8H [34m/**
         * Uncheck descendants of passed node
         *
         * Don't use uncheck() method because we won't trigger onUncheck events[0m[38;126H421,17[8C35%[1;17H[34h[?25h[?25l[23m[24m[0m[H[J[1;1H[34m         *
         * Don't use uncheck() method because we won't trigger onUncheck events
         *
         * @private
         * @param li node
         */[0m[7;8H _uncheckDescendants: [36mfunction[0m (li) [36m{[0m[8;12H li.find([31m'li input:checkbox:checked'[0m).prop([31m'checked'[0m, [31mfalse[0m).change();[9;8H [36m}[0m,[11;8H [34m/**
         * Uncheck nodes that are neither ancestors or descendants of passed node
         *
         * Don't use uncheck() method because we won't trigger onUncheck events
         *
         * @private
         * @param li node
         */[0m[19;8H _uncheckOthers: [36mfunction[0m (li) [36m{[0m[20;12H [36mvar[0m t = [36mthis[0m;[21;12H li.addClass([31m'exclude'[0m);[22;12H li.parents([31m'li'[0m).addClass([31m'exclude'[0m);[23;12H li.find([31m'li'[0m).addClass([31m'exclude'[0m);[24;12H $([36mthis[0m.element).find([31m'li'[0m).each([36mfunction[0m () [36m{[0m[25;16H [33mif[0m (!$([36mthis[0m).hasClass([31m'exclude'[0m)) [36m{[0m[26;20H $([36mthis[0m).find([31m'input:checkbox:first:checked'[0m).prop([31m'checked'[0m, [31mfalse[0m).change();[27;16H [36m}[0m[28;12H [36m}[0m);[29;12H $([36mthis[0m.element).find([31m'li'[0m).removeClass([31m'exclude'[0m);[30;8H [36m}[0m,[32;8H [34m/**
         * Check node
         *
         * @public
         * @param li node to check
         */[0m[38;126H456,10[8C38%[1;10H[34h[?25h[?25l[38;126H[K[38;1H:[34h[?25hq[?25l[34h[?25h![?25l[34h[?25h[?25l[38;1H[K[38;1H[?1l>[34h[?25h[?1049lsriram@ubuntu:/space/hashincludetest/mocking-bird/plugins/jquery-tree-master/src/js$ ls
jquery.treeajax.js  jquery.treecheckbox.js  jquery.treecollapse.js  jquery.treednd.js  [0m[01;32mjquery.tree.js[0m
sriram@ubuntu:/space/hashincludetest/mocking-bird/plugins/jquery-tree-master/src/js$ vi jquery.treeajax.js 
[?1049h[?1h=[1;38r[34l[34h[?25h[23m[24m[0m[H[J[?25l[38;1H"jquery.treeajax.js" [noeol] 181L, 4299C[1;1H[34m/*!
 * Tree - jQuery Tree Widget - ajax component
 * @author Valerio Galano <v.galano@daredevel.com>
 */[0m
$.widget([31m"daredevel.treeajax"[0m, [36m{[0m[7;4H [34m/**
     * Initialize plugin
     *
     * @private
     */[0m
    _create:[36mfunction[0m () [36m{[0m[14;8H [36mvar[0m t = [36mthis[0m;[16;8H [34m// initialize ajax nodes[0m[17;8H [33mif[0m ([36mthis[0m.options.dataSourceUrl) [36m{[0m[18;12H t._lazyInit();[19;8H [36m}[0m[21;8H [34m// bind lazy loading on expand event[0m[22;8H [33mif[0m ([36mthis[0m.options.dataSourceUrl) [36m{[0m[23;12H [36mthis[0m.element.bind([31m"treeexpand"[0m, [36mfunction[0m ([33mevent[0m, element) [36m{[0m[24;16H [33mif[0m ($(element).find([31m'ul'[0m).length) [36m{[0m[25;20H [33mreturn[0m;[26;16H [36m}[0m[27;16H t._lazyLoad($(element));[28;12H [36m}[0m);[29;8H [36m}[0m[31;8H [34m// bind edit on drop event[0m[32;8H [33mif[0m ([36mthis[0m.options.dataEditUrl) [36m{[0m[33;12H [36mthis[0m.element.bind([31m"treemove"[0m, [36mfunction[0m ([33mevent[0m, element) [36m{[0m[34;16H [34m/** @todo: test if parent is not changed */[0m[35;16H t._notifyMove($(element));[36;12H [36m}[0m);[37;8H [36m}[0m[38;126H1,1[11CTop[1;1H[34h[?25h[?25l[38;1H[K[38;1H:[34h[?25hq[?25l[34h[?25h![?25l[34h[?25h[?25l[38;1H[K[38;1H[?1l>[34h[?25h[?1049lsriram@ubuntu:/space/hashincludetest/mocking-bird/plugins/jquery-tree-master/src/js$ vi jquery.treeajax.js ls[Kvi jquery.tree.js
[?1049h[?1h=[1;38r[34l[34h[?25h[23m[24m[0m[H[J[?25l[38;1H"jquery.tree.js" 1212L, 35888C[1;8H _initializeCheckboxNode: [36mfunction[0m (li) [36m{[0m[3;8H [36m}[0m,[5;8H [34m/**
         * Uncheck ancestors of passed node
         *
         * Don't use uncheck() method because we won't trigger onUncheck events
         *
         * @private
         * @param li node
         */[0m[13;8H _uncheckAncestors: [36mfunction[0m (li) [36m{[0m[14;12H li.parentsUntil([31m'daredevel-tree'[0m).filter([31m'li'[0m).find([31m'input:checkbox:first:checked'[0m).prop([31m'checked'[0m, [31mfalse[0m).change();[15;8H [36m}[0m,[17;8H [34m/**
         * Uncheck descendants of passed node
         *
         * Don't use uncheck() method because we won't trigger onUncheck events
         *
         * @private
         * @param li node
         */[0m[25;8H _uncheckDescendants: [36mfunction[0m (li) [36m{[0m[26;12H li.find([31m'li input:checkbox:checked'[0m).prop([31m'checked'[0m, [31mfalse[0m).change();[27;8H [36m}[0m,[29;8H [34m/**
         * Uncheck nodes that are neither ancestors or descendants of passed node
         *
         * Don't use uncheck() method because we won't trigger onUncheck events
         *
         * @private
         * @param li node
         */[0m[37;8H _uncheckOthers: [36mfunction[0m (li) [36m{[0m[38;126H456,10[8C37%[19;10H[34h[?25h[?25l[38;1H[K[38;1H/[34h[?25ht[?25l[20;16H[7m[34mt[0m[38;126H457,16[8C37%[38;126H[K[38;3H[34h[?25hr[?25l[20;16H[34mt[0m[39C[7m[34mtr[0m[38;126H457,56[8C37%[38;126H[K[38;4H[34h[?25he[?25l[23m[24m[0m[H[J[1;16H [36mthis[0m._uncheckDescendants(li);[2;12H [36m}[0m[4;12H [34m// handle ancestors[0m[5;12H [33mif[0m ([36mthis[0m.options.onCheck.ancestors == [31m'check'[0m) [36m{[0m[6;16H [36mthis[0m._checkAncestors(li);[7;12H [36m}[0m [33melse[0m [33mif[0m ([36mthis[0m.options.onCheck.ancestors == [31m'uncheck'[0m) [36m{[0m[8;16H [36mthis[0m._uncheckAncestors(li);[9;12H [36m}[0m [33melse[0m [33mif[0m ([36mthis[0m.options.onCheck.ancestors == [31m'checkIfFull'[0m) [36m{[0m[10;16H [36mvar[0m isRoot = [36mthis[0m.options.core.isRoot(li);[11;16H [36mvar[0m allDescendantChecked = [36mthis[0m._allDescendantChecked([36mthis[0m.options.core.parentNode(li));[12;16H [33mif[0m (!isRoot && allDescendantChecked) [36m{[0m[13;20H [36mthis[0m.check([36mthis[0m.options.core.parentNode(li));[14;16H [36m}[0m[15;12H [36m}[0m[16;8H [36m}[0m,[18;8H [34m/**
         * Check all [0m[7m[34mtre[0m[34me elements
         *
         * Don't use check() method so it won't trigger onCheck events
         *
         * @public
         */[0m[25;8H checkAll: [36mfunction[0m () [36m{[0m[26;12H $([36mthis[0m.element).find([31m'input:checkbox:not(:checked)'[0m).prop([31m'checked'[0m, [31mtrue[0m).change();[27;8H [36m}[0m,[29;8H [34m/**
         * Uncheck node
         *
         * @public
         * @param li node to uncheck
         */[0m[35;8H uncheck: [36mfunction[0m (li) [36m{[0m[37;12H li = $(li);[38;126H528,22[8C43%/tre[38;126H[K[38;5H[34h[?25he[?25l[19;25H[7m[34me[0m[38;126H528,22[8C43%[38;126H[K[38;6H[34h[?25ha[?25l[23m[24m[0m[H[J[1;8H _initializeCheckboxNode: [36mfunction[0m (li) [36m{[0m[3;8H [36m}[0m,[5;8H [34m/**
         * Uncheck ancestors of passed node
         *
         * Don't use uncheck() method because we won't trigger onUncheck events
         *
         * @private
         * @param li node
         */[0m[13;8H _uncheckAncestors: [36mfunction[0m (li) [36m{[0m[14;12H li.parentsUntil([31m'daredevel-tree'[0m).filter([31m'li'[0m).find([31m'input:checkbox:first:checked'[0m).prop([31m'checked'[0m, [31mfalse[0m).change();[15;8H [36m}[0m,[17;8H [34m/**
         * Uncheck descendants of passed node
         *
         * Don't use uncheck() method because we won't trigger onUncheck events
         *
         * @private
         * @param li node
         */[0m[25;8H _uncheckDescendants: [36mfunction[0m (li) [36m{[0m[26;12H li.find([31m'li input:checkbox:checked'[0m).prop([31m'checked'[0m, [31mfalse[0m).change();[27;8H [36m}[0m,[29;8H [34m/**
         * Uncheck nodes that are neither ancestors or descendants of passed node
         *
         * Don't use uncheck() method because we won't trigger onUncheck events
         *
         * @private
         * @param li node
         */[0m[37;8H _uncheckOthers: [36mfunction[0m (li) [36m{[0m[38;126H456,10[8C37%/treea[38;126H[K[38;7H[34h[?25hj[?25l[118C456,10[8C37%[38;126H[K[38;8H[34h[?25ha[?25l[117C456,10[8C37%[38;126H[K[38;9H[34h[?25h[?25l[38;8H[K[38;126H456,10[8C37%[38;126H[K[38;8H[34h[?25h[?25l[38;7H[K[38;126H456,10[8C37%[38;126H[K[38;7H[34h[?25h[?25l[38;6H[K[23m[24m[0m[H[J[1;16H [36mthis[0m._uncheckDescendants(li);[2;12H [36m}[0m[4;12H [34m// handle ancestors[0m[5;12H [33mif[0m ([36mthis[0m.options.onCheck.ancestors == [31m'check'[0m) [36m{[0m[6;16H [36mthis[0m._checkAncestors(li);[7;12H [36m}[0m [33melse[0m [33mif[0m ([36mthis[0m.options.onCheck.ancestors == [31m'uncheck'[0m) [36m{[0m[8;16H [36mthis[0m._uncheckAncestors(li);[9;12H [36m}[0m [33melse[0m [33mif[0m ([36mthis[0m.options.onCheck.ancestors == [31m'checkIfFull'[0m) [36m{[0m[10;16H [36mvar[0m isRoot = [36mthis[0m.options.core.isRoot(li);[11;16H [36mvar[0m allDescendantChecked = [36mthis[0m._allDescendantChecked([36mthis[0m.options.core.parentNode(li));[12;16H [33mif[0m (!isRoot && allDescendantChecked) [36m{[0m[13;20H [36mthis[0m.check([36mthis[0m.options.core.parentNode(li));[14;16H [36m}[0m[15;12H [36m}[0m[16;8H [36m}[0m,[18;8H [34m/**
         * Check all [0m[7m[34mtree[0m[34m elements
         *
         * Don't use check() method so it won't trigger onCheck events
         *
         * @public
         */[0m[25;8H checkAll: [36mfunction[0m () [36m{[0m[26;12H $([36mthis[0m.element).find([31m'input:checkbox:not(:checked)'[0m).prop([31m'checked'[0m, [31mtrue[0m).change();[27;8H [36m}[0m,[29;8H [34m/**
         * Uncheck node
         *
         * @public
         * @param li node to uncheck
         */[0m[35;8H uncheck: [36mfunction[0m (li) [36m{[0m[37;12H li = $(li);[38;126H528,22[8C43%/tree[38;126H[K[38;6H[34h[?25h[?25l[38;5H[K[19;25H[34me[0m[38;126H528,22[8C43%[38;126H[K[38;5H[34h[?25h[?25l[38;4H[K[23m[24m[0m[H[J[1;8H _initializeCheckboxNode: [36mfunction[0m (li) [36m{[0m[3;8H [36m}[0m,[5;8H [34m/**
         * Uncheck ancestors of passed node
         *
         * Don't use uncheck() method because we won't trigger onUncheck events
         *
         * @private
         * @param li node
         */[0m[13;8H _uncheckAncestors: [36mfunction[0m (li) [36m{[0m[14;12H li.parentsUntil([31m'daredevel-tree'[0m).filter([31m'li'[0m).find([31m'input:checkbox:first:checked'[0m).prop([31m'checked'[0m, [31mfalse[0m).change();[15;8H [36m}[0m,[17;8H [34m/**
         * Uncheck descendants of passed node
         *
         * Don't use uncheck() method because we won't [0m[7m[34mtr[0m[34migger onUncheck events
         *
         * @private
         * @param li node
         */[0m[25;8H _uncheckDescendants: [36mfunction[0m (li) [36m{[0m[26;12H li.find([31m'li input:checkbox:checked'[0m).prop([31m'checked'[0m, [31mfalse[0m).change();[27;8H [36m}[0m,[29;8H [34m/**
         * Uncheck nodes that are neither ancestors or descendants of passed node
         *
         * Don't use uncheck() method because we won't trigger onUncheck events
         *
         * @private
         * @param li node
         */[0m[37;8H _uncheckOthers: [36mfunction[0m (li) [36m{[0m[38;126H457,56[8C37%/tr[38;126H[K[38;4H[34h[?25h[?25l[38;3H[K[20;16H[7m[34mt[0m[39C[34mtr[0m[38;126H457,16[8C37%[38;126H[K[38;3H[34h[?25h[?25l[38;2H[K[20;16H[34mt[0m[38;126H456,10[8C37%[38;126H[K[38;2H[34h[?25ha[?25l[20;42H[7m[34ma[0m[38;126H457,42[8C37%[38;126H[K[38;3H[34h[?25hj[?25l[20;42H[34ma[0m[38;126H456,10[8C37%[38;126H[K[38;4H[34h[?25ha[?25l[121C456,10[8C37%[38;126H[K[38;5H[34h[?25hx[?25l[120C456,10[8C37%[38;126H[K[38;6H[34h[?25h[?25l[31msearch hit BOTTOM, continuing at TOP[0m[1m[37m[41mE486: Pattern not found: ajax[0m[38;30H[K[38;126H456,10[8C37%[19;10H[34h[?25h[?25l[38;1H[K[38;1H:[34h[?25hq[?25l[34h[?25h![?25l[34h[?25h[?25l[38;1H[K[38;1H[?1l>[34h[?25h[?1049lsriram@ubuntu:/space/hashincludetest/mocking-bird/plugins/jquery-tree-master/src/js$ 
sriram@ubuntu:/space/hashincludetest/mocking-bird/plugins/jquery-tree-master/src/js$ 
sriram@ubuntu:/space/hashincludetest/mocking-bird/plugins/jquery-tree-master/src/js$ 
sriram@ubuntu:/space/hashincludetest/mocking-bird/plugins/jquery-tree-master/src/js$ ls
jquery.treeajax.js  jquery.treecheckbox.js  jquery.treecollapse.js  jquery.treednd.js  [0m[01;32mjquery.tree.js[0m
sriram@ubuntu:/space/hashincludetest/mocking-bird/plugins/jquery-tree-master/src/js$ 
sriram@ubuntu:/space/hashincludetest/mocking-bird/plugins/jquery-tree-master/src/js$ 
sriram@ubuntu:/space/hashincludetest/mocking-bird/plugins/jquery-tree-master/src/js$ 
sriram@ubuntu:/space/hashincludetest/mocking-bird/plugins/jquery-tree-master/src/js$ lsvi jquery.tree.js
[?1049h[?1h=[1;38r[34l[34h[?25h[23m[24m[0m[H[J[?25l[38;1H"jquery.tree.js" 1212L, 35888C[1;8H _initializeCheckboxNode: [36mfunction[0m (li) [36m{[0m[3;8H [36m}[0m,[5;8H [34m/**
         * Uncheck ancestors of passed node
         *
         * Don't use uncheck() method because we won't trigger onUncheck events
         *
         * @private
         * @param li node
         */[0m[13;8H _uncheckAncestors: [36mfunction[0m (li) [36m{[0m[14;12H li.parentsUntil([31m'daredevel-tree'[0m).filter([31m'li'[0m).find([31m'input:checkbox:first:checked'[0m).prop([31m'checked'[0m, [31mfalse[0m).change();[15;8H [36m}[0m,[17;8H [34m/**
         * Uncheck descendants of passed node
         *
         * Don't use uncheck() method because we won't trigger onUncheck events
         *
         * @private
         * @param li node
         */[0m[25;8H _uncheckDescendants: [36mfunction[0m (li) [36m{[0m[26;12H li.find([31m'li input:checkbox:checked'[0m).prop([31m'checked'[0m, [31mfalse[0m).change();[27;8H [36m}[0m,[29;8H [34m/**
         * Uncheck nodes that are neither ancestors or descendants of passed node
         *
         * Don't use uncheck() method because we won't trigger onUncheck events
         *
         * @private
         * @param li node
         */[0m[37;8H _uncheckOthers: [36mfunction[0m (li) [36m{[0m[38;126H456,10[8C37%[19;10H[34h[?25h[?25l[23m[24m[0m[H[J[1;12H [34m// bind collapse on uncheck event[0m[2;12H [33mif[0m ([36mthis[0m.options.onUncheck.node == [31m'collapse'[0m) [36m{[0m[3;16H [36mthis[0m.element.on([31m"click"[0m, [31m'input:checkbox:not(:checked)'[0m, [36mfunction[0m () [36m{[0m[4;20H t.options.core.collapse(t.options.core.parentNode($([36mthis[0m)));[5;16H [36m}[0m);[6;12H [36m}[0m [33melse[0m[8;12H [34m// bind expand on uncheck event[0m[9;12H [33mif[0m ([36mthis[0m.options.onUncheck.node == [31m'expand'[0m) [36m{[0m[10;16H [36mthis[0m.element.on([31m"click"[0m, [31m'input:checkbox:not(:checked)'[0m, [36mfunction[0m () [36m{[0m[11;20H t.options.core.expand(t.options.core.parentNode($([36mthis[0m)));[12;16H [36m}[0m);[13;12H [36m}[0m[15;12H [34m// bind collapse on check event[0m[16;12H [33mif[0m ([36mthis[0m.options.onCheck.node == [31m'collapse'[0m) [36m{[0m[17;16H [36mthis[0m.element.on([31m"click"[0m, [31m'input:checkbox:checked'[0m, [36mfunction[0m () [36m{[0m[18;20H t.options.core.collapse(t.options.core.parentNode($([36mthis[0m)));[19;16H [36m}[0m);[20;12H [36m}[0m [33melse[0m[22;12H [34m// bind expand on check event[0m[23;12H [33mif[0m ([36mthis[0m.options.onCheck.node == [31m'expand'[0m) [36m{[0m[24;16H [36mthis[0m.element.on([31m"click"[0m, [31m'input:checkbox:checked'[0m, [36mfunction[0m () [36m{[0m[25;20H t.options.core.expand(t.options.core.parentNode($([36mthis[0m)));[26;16H [36m}[0m);[27;12H [36m}[0m[28;8H [36m}[0m,[30;8H [34m/**
         * Initialize passed node
         *
         * @private
         * @param li node to initialize
         */[0m[36;8H _initializeCheckboxNode: [36mfunction[0m (li) [36m{[0m[38;126H439,0-1[7C34%[37;1H[34h[?25h[?25l[23m[24m[0m[H[J[1;1H[34m         * @private
         * @param li node
         */[0m[4;8H _checkOthers: [36mfunction[0m (li) [36m{[0m[5;12H [36mvar[0m t = [36mthis[0m;[6;12H li.addClass([31m'exclude'[0m);[7;12H li.parents([31m'li'[0m).addClass([31m'exclude'[0m);[8;12H li.find([31m'li'[0m).addClass([31m'exclude'[0m);[9;12H $([36mthis[0m.element).find([31m'li'[0m).each([36mfunction[0m () [36m{[0m[10;16H [33mif[0m (!$([36mthis[0m).hasClass([31m'exclude'[0m)) [36m{[0m[11;20H $([36mthis[0m).find([31m'input:checkbox:first:not(:checked)'[0m).prop([31m'checked'[0m, [31mtrue[0m).change();[12;16H [36m}[0m[13;12H [36m}[0m);[14;12H $([36mthis[0m.element).find([31m'li'[0m).removeClass([31m'exclude'[0m);[15;8H [36m}[0m,[17;8H [34m/**
         * Initialize plugin.
         *
         * @private
         */[0m[22;8H _createCheckbox: [36mfunction[0m () [36m{[0m[24;12H [36mvar[0m t = [36mthis[0m;[26;12H [34m// bind node uncheck event[0m[27;12H [36mthis[0m.element.on([31m'click'[0m, [31m'input:checkbox:not(:checked)'[0m, [36mfunction[0m () [36m{[0m[28;16H t.uncheck(t.options.core.parentNode($([36mthis[0m)));[29;12H [36m}[0m);[31;12H [34m// bind node check event[0m[32;12H [36mthis[0m.element.on([31m'click'[0m, [31m'input:checkbox:checked'[0m, [36mfunction[0m () [36m{[0m[33;16H t.check(t.options.core.parentNode($([36mthis[0m)));[34;12H [36m}[0m);[36;12H [34m// bind collapse on uncheck event[0m[37;12H [33mif[0m ([36mthis[0m.options.onUncheck.node == [31m'collapse'[0m) [36m{[0m[38;126H404,13[8C31%[37;13H[34h[?25h[?25l[23m[24m[0m[H[J[1;1H[34m         * @return true if all descendant checked
         */[0m[3;8H _allDescendantChecked: [36mfunction[0m (li) [36m{[0m[4;12H [33mreturn[0m (li.find([31m'li input:checkbox:not(:checked)'[0m).length == 0);[5;8H [36m}[0m,[7;8H [34m/**
         * Check ancestors on passed node
         *
         * Don't use check() method because we won't trigger onCheck events
         *
         * @private
         * @param li node
         */[0m[15;8H _checkAncestors: [36mfunction[0m (li) [36m{[0m[16;12H li.parentsUntil([31m'daredevel-tree'[0m).filter([31m'li'[0m).find([31m'input:checkbox:first:not(:checked)'[0m).prop([31m'checked'[0m, [31mtrue[0m).change();[17;8H [36m}[0m,[19;8H [34m/**
         * Check descendants on passed node
         *
         * Don't use check() method because we won't trigger onCheck events
         *
         * @private
         * @param li node
         */[0m[27;8H _checkDescendants: [36mfunction[0m (li) [36m{[0m[28;12H li.find([31m'li input:checkbox:not(:checked)'[0m).prop([31m'checked'[0m, [31mtrue[0m).change();[29;8H [36m}[0m,[31;8H [34m/**
         * Check nodes that are neither ancestors or descendants of passed node
         *
         * Don't use check() method because we won't trigger onCheck events
         *
         * @private
         * @param li node[0m[38;126H369,10[8C28%[37;10H[34h[?25h[?25l[23m[24m[0m[H[J[1;12H [36m}[0m[3;12H [36mthis[0m._trigger([31m'move'[0m, [31mtrue[0m, $(li));[4;8H [36m}[0m,[6;8H [34m/**
         * Return parent li of the passed li
         *
         * @public
         *
         * @param li node as jQuery object or selector
         * @return parent li
         */[0m[14;8H parentNode: [36mfunction[0m (li) [36m{[0m[15;12H [33mreturn[0m $(li).parents([31m'li:first'[0m);[16;8H [36m}[0m,[18;8H [34m/**
         * Remove a node from tree (node is not actually delete, but still in memory)
         *
         * @param li node to delete (can be jQuery object or selector)
         */[0m[23;8H removeNode: [36mfunction[0m (li) [36m{[0m[25;12H [36mthis[0m._detachNode($(li));[27;12H [36mthis[0m._trigger([31m'remove'[0m, [31mtrue[0m, $(li));[29;8H [36m}[0m,[31;8H [34m/**
         * Check if all descendant of passed node are checked
         *
         * @private
         * @param li node
         * @return true if all descendant checked
         */[0m[38;126H334,10[8C25%[37;10H[34h[?25h[?25l[23m[24m[0m[H[J[2;12H t._trigger([31m'add'[0m, [31mtrue[0m, li);[3;8H [36m}[0m,[5;8H [34m/**
         * Check if passed node is a root
         *
         * @public
         *
         * @param li node to check
         */[0m[12;8H isRoot: [36mfunction[0m (li) [36m{[0m[14;12H li = $(li);[16;12H [36mvar[0m parents = li.parentsUntil([31m'.daredevel-tree'[0m);[18;12H [33mreturn[0m 1 == parents.length;[19;8H [36m}[0m,[21;8H [34m/**
         * Move a node under new parent
         *
         * @param li node to move
         * @param parentLi node under which node will be moved
         * @param position position of the node between brothers (expressed as positive integer)
         */[0m[28;8H moveNode: [36mfunction[0m (li, parentLi, position) [36m{[0m[30;12H [36mthis[0m._detachNode($(li));[32;12H [33mif[0m (([33mundefined[0m == parentLi) || 0 == parentLi.length) [36m{[0m[33;16H [36mthis[0m._attachNode($(li), [33mundefined[0m, position);[34;12H [36m}[0m [33melse[0m [36m{[0m[35;16H [36mthis[0m._attachNode($(li), $(parentLi), position);[36;12H [36m}[0m[38;126H299,0-1[7C22%[37;1H[34h[?25h[?25l[23m[24m[0m[H[J[1;12H [36m}[0m[2;12H [33mif[0m ([36mthis[0m.options.dnd) [36m{[0m[3;16H [36mthis[0m._initializeDndNode(li);[4;12H [36m}[0m[5;12H [33mif[0m ([36mthis[0m.options.selectable) [36m{[0m[6;16H [36mthis[0m._initializeSelectableNode(li);[7;12H [36m}[0m[8;8H [36m}[0m,[10;8H [34m/**
         * Add a new node as children of passed one
         *
         * @public
         *
         * @param attributes new node attributes
         * @param parentLi node under which new node will be attached
         * @param position position of the node between brothers (expressed as positive integer)
         */[0m[19;8H addNode: [36mfunction[0m (attributes, parentLi, position) [36m{[0m[21;12H [36mvar[0m t = [36mthis[0m;[23;12H [36mvar[0m li = [36mthis[0m._buildNode(attributes);[25;12H [33mif[0m (([33mundefined[0m == parentLi) || 0 == parentLi.length) [36m{[0m[26;16H [36mthis[0m._attachNode($(li), [33mundefined[0m, position);[27;12H [36m}[0m [33melse[0m [36m{[0m[28;16H [36mthis[0m._attachNode($(li), $(parentLi), position);[29;12H [36m}[0m[31;12H [33mif[0m ([33mundefined[0m != attributes.children) [36m{[0m[32;16H $.each(attributes.children, [36mfunction[0m (key, value) [36m{[0m[33;20H t.addNode(value, li);[34;16H [36m}[0m);[35;12H [36m}[0m[37;12H t._trigger([31m'add'[0m, [31mtrue[0m, li);[38;126H264,13[8C19%[37;13H[34h[?25h[?25l[23m[24m[0m[H[J[1;16H li.detach();[2;12H [36m}[0m[4;12H [34m//initialize node from core to call all components initialize methods[0m[5;12H [36mthis[0m.options.core._initializeNode(parentLi);[6;8H [36m}[0m,[8;8H [34m/**
         * Initialize requested components
         *
         * @private
         */[0m[13;8H _initializeComponents: [36mfunction[0m () [36m{[0m[14;12H [33mfor[0m ([36mvar[0m i [33min[0m [36mthis[0m.options.components) [36m{[0m[15;16H [36mvar[0m initializeComponent = [31m'element.tree'[0m + [36mthis[0m.options.components[36m[[0mi[36m][0m + [31m'(options);'[0m;[16;16H run = [33mnew[0m [32mFunction[0m([31m"options"[0m, [31m"element"[0m, initializeComponent);[17;16H run([36mthis[0m.options, [36mthis[0m.element);[18;12H [36m}[0m[19;8H [36m}[0m,[21;8H [34m/**
         * Initialize passed node
         *
         * @private
         *
         * @param li node to initialize
         */[0m[28;8H _initializeNode: [36mfunction[0m (li) [36m{[0m[29;12H li.children([31m'span:last'[0m).addClass([31m'daredevel-tree-label'[0m);[31;12H [33mif[0m ([36mthis[0m.options.checkbox) [36m{[0m[32;16H [36mthis[0m._initializeCheckboxNode(li);[33;12H [36m}[0m[34;12H [33mif[0m ([36mthis[0m.options.collapsible) [36m{[0m[35;16H [36mthis[0m._initializeCollapsibleNode(li);[36;12H [36m}[0m[37;12H [33mif[0m ([36mthis[0m.options.dnd) [36m{[0m[38;126H229,13[8C16%[37;13H[34h[?25h[?25l[23m[24m[0m[H[J[1;12H [33mif[0m ([36mthis[0m.options.nodes != [33mnull[0m) [36m{[0m[2;16H $.each([36mthis[0m.options.nodes, [36mfunction[0m (key, value) [36m{[0m[3;20H t.options.core.addNode(value);[4;16H [36m}[0m);[5;12H [36m}[0m[6;8H [36m}[0m,[8;8H [34m/**
         * Destroy plugin
         *
         * @private
         *
         * @todo complete destroy method
         */[0m[15;8H _destroy: [36mfunction[0m () [36m{[0m[16;12H $.Widget.prototype.destroy.call([36mthis[0m);[17;8H [36m}[0m,[19;8H [34m/**
         * Detach a node (actually don't delete it)
         *
         * @private
         *
         * @param li node to detach
         */[0m[26;8H _detachNode: [36mfunction[0m (li) [36m{[0m[28;12H [36mvar[0m parentLi = [36mthis[0m.options.core.parentNode(li);[30;12H [36mvar[0m ul = parentLi.find([31m'ul:first'[0m);[32;12H [33mif[0m (ul.children().length == 1) [36m{[0m[33;16H ul.detach();[34;16H parentLi.removeClass([31m'collapsed expanded'[0m).addClass([31m'leaf'[0m) [34m//@todo find right way to do this[0m[35;12H [36m}[0m [33melse[0m [36m[46m{[0m[36;16H li.detach();[37;12H [36m[46m}[0m[38;126H194,13[8C13%[37;13H[34h[?25h[?25l[23m[24m[0m[H[J[1;1H[34m         * </div>
         *
         * 1) input type="checkbox" tag and label tag are mandatory only to use checkbox component
         */[0m[5;8H _create: [36mfunction[0m () [36m{[0m[7;12H [36mvar[0m t = [36mthis[0m;[9;12H [34m// add core widget to options so components can add methods @todo remove core variable[0m[10;12H [36mthis[0m.options.core = [36mthis[0m;[12;12H [34m// add jQueryUI css widget classes[0m[13;12H [36mthis[0m.element.addClass([31m'ui-widget ui-widget-content daredevel-tree'[0m);[15;12H [34m// initialize requested features[0m[16;12H [33mif[0m ([36mthis[0m.options.checkbox) [36m{[0m[17;16H [36mthis[0m._createCheckbox();[18;12H [36m}[0m[19;12H [33mif[0m ([36mthis[0m.options.collapsible) [36m{[0m[20;16H [36mthis[0m._createCollapsible();[21;12H [36m}[0m[22;12H [33mif[0m ([36mthis[0m.options.dnd) [36m{[0m[23;16H [36mthis[0m._createDnd();[24;12H [36m}[0m[25;12H [33mif[0m ([36mthis[0m.options.selectable) [36m{[0m[26;16H [36mthis[0m._createSelectable();[27;12H [36m}[0m[29;12H [34m// initialize requested components[0m[30;12H [34m//this._initializeComponents();[0m[32;12H [36mthis[0m.element.find([31m'li'[0m).each([36mfunction[0m () [36m{[0m[33;16H t._initializeNode($([36mthis[0m));[34;12H [36m}[0m);[36;12H [33mif[0m ([36mthis[0m.options.nodes != [33mnull[0m) [36m{[0m[37;16H $.each([36mthis[0m.options.nodes, [36mfunction[0m (key, value) [36m{[0m[38;126H159,17[8C10%[37;17H[34h[?25h[?25l[23m[24m[0m[H[J[1;12H [34m// create new node label[0m[2;12H [36mvar[0m span = $([31m'<span/>'[0m, attributes.span);[4;12H [34m// create node[0m[5;12H [36mvar[0m li = $([31m'<li/>'[0m, attributes.li);[7;12H [34m// if checkbox component is active, new node must contain checkbox input[0m[8;12H [33mif[0m ($.inArray([31m'checkbox'[0m, [36mthis[0m.options.components) > -1) [36m{[0m[9;16H [36mvar[0m input = $([31m'<input/>'[0m,[10;20H attributes.input[11;16H );[12;16H li.append(input);[13;12H [36m}[0m[15;12H li.append(span);[17;12H [33mreturn[0m li;[18;8H [36m}[0m,[20;8H [34m/**
         * Initialize plugin.
         *
         * @private
         *
         * @note Base tree structure must be something like this:
         *
         * <div id="tree">
         *   <ul>
         *     <li id="node1" class="expanded"><input type="checkbox"><label>Node 1</label><span>Node 1</span>
         *       <ul>
         *         <li><input type="checkbox"><label>Node 1.1</label>
         *         <li><input type="checkbox"><label>Node 1.2</label>
         *       </ul>
         *     </li>
         *   </ul>
         * </div>
         *[0m[38;126H124,10[9C7%[37;10H[34h[?25h[?25l[23m[24m[0m[H[J[1;16H [36mvar[0m [33mparent[0m = [36mthis[0m.element;[3;16H [36mthis[0m._attachLi(li, [33mparent[0m, position);[5;16H [34m//initialize nodes from core to call all components initialize methods[0m[6;16H [36mthis[0m._initializeNode(li);[8;12H [36m}[0m [33melse[0m [36m{[0m[10;16H [36mvar[0m [33mparent[0m = parentLi;[12;16H [36mthis[0m._attachLi(li, [33mparent[0m, position);[14;16H [33mparent[0m.removeClass([31m'leaf collapsed'[0m).addClass([31m'expanded'[0m); [34m//@todo find right way to do this[0m[16;16H [34m//initialize nodes from core to call all components initialize methods[0m[17;16H [36mthis[0m._initializeNode(li);[18;16H [36mthis[0m._initializeNode([33mparent[0m);[19;12H [36m}[0m[20;8H [36m}[0m,[22;8H [34m/**
         * Create a new node object
         *
         * Attributes must contains a list of attributes for html elements of the node.
         *
         * @private
         *
         * @param attributes object containing a list of new node's html elements attributes
         * @return a li element object
         */[0m[32;8H _buildNode: [36mfunction[0m (attributes) [36m{[0m[34;12H attributes = $.extend([31mtrue[0m, [36mthis[0m.options.defaultNodeAttributes, attributes);[36;12H [34m// create new node label[0m[37;12H [36mvar[0m span = $([31m'<span/>'[0m, attributes.span);[38;126H89,13[10C4%[37;13H[34h[?25h[?25l[23m[24m[0m[H[J[1;1H[34m         * @param position position of the node between brothers (expressed as positive integer)
         */[0m[3;8H _attachLi: [36mfunction[0m (li, [33mparent[0m, position) [36m{[0m[5;12H [36mvar[0m ul = [33mparent[0m.find([31m'ul:first'[0m);[7;12H [33mif[0m (ul.length) [36m{[0m[8;16H [33mif[0m (([33mundefined[0m == position) || (ul.children([31m'li'[0m).length < position)) [36m{[0m[9;20H ul.append(li);[10;16H [36m}[0m [33melse[0m [36m{[0m[11;20H [33mif[0m (position == 0) [36m{[0m[12;24H position = position + 1;[13;20H [36m}[0m[14;20H ul.children([31m'li:nth-child('[0m + position + [31m')'[0m).before(li);[15;16H [36m}[0m[16;12H [36m}[0m [33melse[0m [36m{[0m[17;16H ul = $([31m'<ul/>'[0m);[18;16H [33mparent[0m.append(ul.append(li));[19;12H [36m}[0m[21;8H [36m}[0m,[23;8H [34m/**
         * Attach a node under passed parent (if no parent is passed, node is attached as root)
         *
         * @private
         *
         * @param li node to attach
         * @param parentLi node under which new node will be attached
         * @param position position of the node between brothers (expressed as positive integer)
         */[0m[32;8H _attachNode: [36mfunction[0m (li, parentLi, position) [36m{[0m[34;12H [33mif[0m ([33mundefined[0m == parentLi) [36m{[0m[36;16H [36mvar[0m [33mparent[0m = [36mthis[0m.element;[38;126H54,0-1[9C1%[37;1H[34h[?25h[?25l[1;37r[1;1H[17L[1;38r[1;1H[34m/*!
 * Tree - jQuery Tree Widget
 * @author Valerio Galano <v.galano@daredevel.com>
 * @license MIT
 * @see https://github.com/daredevel/jquery-tree
 * @version 0.1
 */[0m
([36mfunction[0m ($, [33mundefined[0m) [36m{[0m
    $.widget([31m"daredevel.tree"[0m, [36m{[0m[11;8H [34m/**
         * Attach node li code under passed parent element at passed position
         *
         * @private
         *
         * @param li node to attach
         * @param parent element to attach node to (can be another node or widget base element)[0m[38;126H[K[38;126H19,10[9CTop[19;10H[34h[?25h[?25l[34h[?25h[?25l[34h[?25h[?25l[34h[?25h[?25l[34h[?25h[?25l[34h[?25h[?25l[34h[?25h[?25l[34h[?25h[?25l[34h[?25h[?25l[34h[?25h[?25l[34h[?25h[?25l[34h[?25h[?25l[34h[?25h[?25l[23m[24m[0m[H[J[1;12H [36m}[0m[3;8H [36m}[0m,[5;8H [34m/**
         * Attach a node under passed parent (if no parent is passed, node is attached as root)
         *
         * @private
         *
         * @param li node to attach
         * @param parentLi node under which new node will be attached
         * @param position position of the node between brothers (expressed as positive integer)
         */[0m[14;8H _attachNode: [36mfunction[0m (li, parentLi, position) [36m{[0m[16;12H [33mif[0m ([33mundefined[0m == parentLi) [36m{[0m[18;16H [36mvar[0m [33mparent[0m = [36mthis[0m.element;[20;16H [36mthis[0m._attachLi(li, [33mparent[0m, position);[22;16H [34m//initialize nodes from core to call all components initialize methods[0m[23;16H [36mthis[0m._initializeNode(li);[25;12H [36m}[0m [33melse[0m [36m{[0m[27;16H [36mvar[0m [33mparent[0m = parentLi;[29;16H [36mthis[0m._attachLi(li, [33mparent[0m, position);[31;16H [33mparent[0m.removeClass([31m'leaf collapsed'[0m).addClass([31m'expanded'[0m); [34m//@todo find right way to do this[0m[33;16H [34m//initialize nodes from core to call all components initialize methods[0m[34;16H [36mthis[0m._initializeNode(li);[35;16H [36mthis[0m._initializeNode([33mparent[0m);[36;12H [36m}[0m[37;8H [36m}[0m,[38;126H36,13[10C2%[1;13H[34h[?25h[?25l[23m[24m[0m[H[J[1;12H [36m}[0m[2;8H [36m}[0m,[4;8H [34m/**
         * Create a new node object
         *
         * Attributes must contains a list of attributes for html elements of the node.
         *
         * @private
         *
         * @param attributes object containing a list of new node's html elements attributes
         * @return a li element object
         */[0m[14;8H _buildNode: [36mfunction[0m (attributes) [36m{[0m[16;12H attributes = $.extend([31mtrue[0m, [36mthis[0m.options.defaultNodeAttributes, attributes);[18;12H [34m// create new node label[0m[19;12H [36mvar[0m span = $([31m'<span/>'[0m, attributes.span);[21;12H [34m// create node[0m[22;12H [36mvar[0m li = $([31m'<li/>'[0m, attributes.li);[24;12H [34m// if checkbox component is active, new node must contain checkbox input[0m[25;12H [33mif[0m ($.inArray([31m'checkbox'[0m, [36mthis[0m.options.components) > -1) [36m{[0m[26;16H [36mvar[0m input = $([31m'<input/>'[0m,[27;20H attributes.input[28;16H );[29;16H li.append(input);[30;12H [36m}[0m[32;12H li.append(span);[34;12H [33mreturn[0m li;[35;8H [36m}[0m,[37;8H [34m/**[0m[38;126H71,13[10C5%[1;13H[34h[?25h[?25l[23m[24m[0m[H[J[2;8H [34m/**
         * Initialize plugin.
         *
         * @private
         *
         * @note Base tree structure must be something like this:
         *
         * <div id="tree">
         *   <ul>
         *     <li id="node1" class="expanded"><input type="checkbox"><label>Node 1</label><span>Node 1</span>
         *       <ul>
         *         <li><input type="checkbox"><label>Node 1.1</label>
         *         <li><input type="checkbox"><label>Node 1.2</label>
         *       </ul>
         *     </li>
         *   </ul>
         * </div>
         *
         * 1) input type="checkbox" tag and label tag are mandatory only to use checkbox component
         */[0m[22;8H _create: [36mfunction[0m () [36m{[0m[24;12H [36mvar[0m t = [36mthis[0m;[26;12H [34m// add core widget to options so components can add methods @todo remove core variable[0m[27;12H [36mthis[0m.options.core = [36mthis[0m;[29;12H [34m// add jQueryUI css widget classes[0m[30;12H [36mthis[0m.element.addClass([31m'ui-widget ui-widget-content daredevel-tree'[0m);[32;12H [34m// initialize requested features[0m[33;12H [33mif[0m ([36mthis[0m.options.checkbox) [36m{[0m[34;16H [36mthis[0m._createCheckbox();[35;12H [36m}[0m[36;12H [33mif[0m ([36mthis[0m.options.collapsible) [36m{[0m[37;16H [36mthis[0m._createCollapsible();[38;126H106,0-1[8C8%[1;1H[34h[?25h[?25l[23m[24m[0m[H[J[1;12H [33mif[0m ([36mthis[0m.options.collapsible) [36m{[0m[2;16H [36mthis[0m._createCollapsible();[3;12H [36m}[0m[4;12H [33mif[0m ([36mthis[0m.options.dnd) [36m{[0m[5;16H [36mthis[0m._createDnd();[6;12H [36m}[0m[7;12H [33mif[0m ([36mthis[0m.options.selectable) [36m{[0m[8;16H [36mthis[0m._createSelectable();[9;12H [36m}[0m[11;12H [34m// initialize requested components[0m[12;12H [34m//this._initializeComponents();[0m[14;12H [36mthis[0m.element.find([31m'li'[0m).each([36mfunction[0m () [36m{[0m[15;16H t._initializeNode($([36mthis[0m));[16;12H [36m}[0m);[18;12H [33mif[0m ([36mthis[0m.options.nodes != [33mnull[0m) [36m{[0m[19;16H $.each([36mthis[0m.options.nodes, [36mfunction[0m (key, value) [36m{[0m[20;20H t.options.core.addNode(value);[21;16H [36m}[0m);[22;12H [36m}[0m[23;8H [36m}[0m,[25;8H [34m/**
         * Destroy plugin
         *
         * @private
         *
         * @todo complete destroy method
         */[0m[32;8H _destroy: [36mfunction[0m () [36m{[0m[33;12H $.Widget.prototype.destroy.call([36mthis[0m);[34;8H [36m}[0m,[36;8H [34m/**
         * Detach a node (actually don't delete it)[0m[38;126H141,13[8C11%[1;13H[34h[?25h[?25l[23m[24m[0m[H[J[1;8H [34m/**
         * Detach a node (actually don't delete it)
         *
         * @private
         *
         * @param li node to detach
         */[0m[8;8H _detachNode: [36mfunction[0m (li) [36m{[0m[10;12H [36mvar[0m parentLi = [36mthis[0m.options.core.parentNode(li);[12;12H [36mvar[0m ul = parentLi.find([31m'ul:first'[0m);[14;12H [33mif[0m (ul.children().length == 1) [36m{[0m[15;16H ul.detach();[16;16H parentLi.removeClass([31m'collapsed expanded'[0m).addClass([31m'leaf'[0m) [34m//@todo find right way to do this[0m[17;12H [36m}[0m [33melse[0m [36m{[0m[18;16H li.detach();[19;12H [36m}[0m[21;12H [34m//initialize node from core to call all components initialize methods[0m[22;12H [36mthis[0m.options.core._initializeNode(parentLi);[23;8H [36m}[0m,[25;8H [34m/**
         * Initialize requested components
         *
         * @private
         */[0m[30;8H _initializeComponents: [36mfunction[0m () [36m{[0m[31;12H [33mfor[0m ([36mvar[0m i [33min[0m [36mthis[0m.options.components) [36m{[0m[32;16H [36mvar[0m initializeComponent = [31m'element.tree'[0m + [36mthis[0m.options.components[36m[[0mi[36m][0m + [31m'(options);'[0m;[33;16H run = [33mnew[0m [32mFunction[0m([31m"options"[0m, [31m"element"[0m, initializeComponent);[34;16H run([36mthis[0m.options, [36mthis[0m.element);[35;12H [36m}[0m[36;8H [36m}[0m,[38;126H176,9[9C14%[1;9H[34h[?25h[?25l[23m[24m[0m[H[J[1;8H [36m}[0m,[3;8H [34m/**
         * Initialize passed node
         *
         * @private
         *
         * @param li node to initialize
         */[0m[10;8H _initializeNode: [36mfunction[0m (li) [36m{[0m[11;12H li.children([31m'span:last'[0m).addClass([31m'daredevel-tree-label'[0m);[13;12H [33mif[0m ([36mthis[0m.options.checkbox) [36m{[0m[14;16H [36mthis[0m._initializeCheckboxNode(li);[15;12H [36m}[0m[16;12H [33mif[0m ([36mthis[0m.options.collapsible) [36m{[0m[17;16H [36mthis[0m._initializeCollapsibleNode(li);[18;12H [36m}[0m[19;12H [33mif[0m ([36mthis[0m.options.dnd) [36m{[0m[20;16H [36mthis[0m._initializeDndNode(li);[21;12H [36m}[0m[22;12H [33mif[0m ([36mthis[0m.options.selectable) [36m{[0m[23;16H [36mthis[0m._initializeSelectableNode(li);[24;12H [36m}[0m[25;8H [36m}[0m,[27;8H [34m/**
         * Add a new node as children of passed one
         *
         * @public
         *
         * @param attributes new node attributes
         * @param parentLi node under which new node will be attached
         * @param position position of the node between brothers (expressed as positive integer)
         */[0m[36;8H addNode: [36mfunction[0m (attributes, parentLi, position) [36m{[0m[38;126H211,9[9C17%[1;9H[34h[?25h[?25l[23m[24m[0m[H[J[1;8H addNode: [36mfunction[0m (attributes, parentLi, position) [36m{[0m[3;12H [36mvar[0m t = [36mthis[0m;[5;12H [36mvar[0m li = [36mthis[0m._buildNode(attributes);[7;12H [33mif[0m (([33mundefined[0m == parentLi) || 0 == parentLi.length) [36m{[0m[8;16H [36mthis[0m._attachNode($(li), [33mundefined[0m, position);[9;12H [36m}[0m [33melse[0m [36m{[0m[10;16H [36mthis[0m._attachNode($(li), $(parentLi), position);[11;12H [36m}[0m[13;12H [33mif[0m ([33mundefined[0m != attributes.children) [36m{[0m[14;16H $.each(attributes.children, [36mfunction[0m (key, value) [36m{[0m[15;20H t.addNode(value, li);[16;16H [36m}[0m);[17;12H [36m}[0m[19;12H t._trigger([31m'add'[0m, [31mtrue[0m, li);[20;8H [36m}[0m,[22;8H [34m/**
         * Check if passed node is a root
         *
         * @public
         *
         * @param li node to check
         */[0m[29;8H isRoot: [36mfunction[0m (li) [36m{[0m[31;12H li = $(li);[33;12H [36mvar[0m parents = li.parentsUntil([31m'.daredevel-tree'[0m);[35;12H [33mreturn[0m 1 == parents.length;[36;8H [36m}[0m,[38;126H246,9[9C20%[1;9H[34h[?25h[?25l[23m[24m[0m[H[J[1;8H [36m}[0m,[3;8H [34m/**
         * Move a node under new parent
         *
         * @param li node to move
         * @param parentLi node under which node will be moved
         * @param position position of the node between brothers (expressed as positive integer)
         */[0m[10;8H moveNode: [36mfunction[0m (li, parentLi, position) [36m{[0m[12;12H [36mthis[0m._detachNode($(li));[14;12H [33mif[0m (([33mundefined[0m == parentLi) || 0 == parentLi.length) [36m{[0m[15;16H [36mthis[0m._attachNode($(li), [33mundefined[0m, position);[16;12H [36m}[0m [33melse[0m [36m{[0m[17;16H [36mthis[0m._attachNode($(li), $(parentLi), position);[18;12H [36m}[0m[20;12H [36mthis[0m._trigger([31m'move'[0m, [31mtrue[0m, $(li));[21;8H [36m}[0m,[23;8H [34m/**
         * Return parent li of the passed li
         *
         * @public
         *
         * @param li node as jQuery object or selector
         * @return parent li
         */[0m[31;8H parentNode: [36mfunction[0m (li) [36m{[0m[32;12H [33mreturn[0m $(li).parents([31m'li:first'[0m);[33;8H [36m}[0m,[35;8H [34m/**
         * Remove a node from tree (node is not actually delete, but still in memory)
         *[0m[38;126H281,9[9C23%[1;9H[34h[?25h[?25l[23m[24m[0m[H[J[1;1H[34m         * Remove a node from tree (node is not actually delete, but still in memory)
         *
         * @param li node to delete (can be jQuery object or selector)
         */[0m[5;8H removeNode: [36mfunction[0m (li) [36m{[0m[7;12H [36mthis[0m._detachNode($(li));[9;12H [36mthis[0m._trigger([31m'remove'[0m, [31mtrue[0m, $(li));[11;8H [36m}[0m,[13;8H [34m/**
         * Check if all descendant of passed node are checked
         *
         * @private
         * @param li node
         * @return true if all descendant checked
         */[0m[20;8H _allDescendantChecked: [36mfunction[0m (li) [36m{[0m[21;12H [33mreturn[0m (li.find([31m'li input:checkbox:not(:checked)'[0m).length == 0);[22;8H [36m}[0m,[24;8H [34m/**
         * Check ancestors on passed node
         *
         * Don't use check() method because we won't trigger onCheck events
         *
         * @private
         * @param li node
         */[0m[32;8H _checkAncestors: [36mfunction[0m (li) [36m{[0m[33;12H li.parentsUntil([31m'daredevel-tree'[0m).filter([31m'li'[0m).find([31m'input:checkbox:first:not(:checked)'[0m).prop([31m'checked'[0m, [31mtrue[0m).change();[34;8H [36m}[0m,[36;8H [34m/**
         * Check descendants on passed node[0m[38;126H316,10[8C26%[1;10H[34h[?25h[?25l[23m[24m[0m[H[J[1;8H [34m/**
         * Check descendants on passed node
         *
         * Don't use check() method because we won't trigger onCheck events
         *
         * @private
         * @param li node
         */[0m[9;8H _checkDescendants: [36mfunction[0m (li) [36m{[0m[10;12H li.find([31m'li input:checkbox:not(:checked)'[0m).prop([31m'checked'[0m, [31mtrue[0m).change();[11;8H [36m}[0m,[13;8H [34m/**
         * Check nodes that are neither ancestors or descendants of passed node
         *
         * Don't use check() method because we won't trigger onCheck events
         *
         * @private
         * @param li node
         */[0m[21;8H _checkOthers: [36mfunction[0m (li) [36m{[0m[22;12H [36mvar[0m t = [36mthis[0m;[23;12H li.addClass([31m'exclude'[0m);[24;12H li.parents([31m'li'[0m).addClass([31m'exclude'[0m);[25;12H li.find([31m'li'[0m).addClass([31m'exclude'[0m);[26;12H $([36mthis[0m.element).find([31m'li'[0m).each([36mfunction[0m () [36m{[0m[27;16H [33mif[0m (!$([36mthis[0m).hasClass([31m'exclude'[0m)) [36m{[0m[28;20H $([36mthis[0m).find([31m'input:checkbox:first:not(:checked)'[0m).prop([31m'checked'[0m, [31mtrue[0m).change();[29;16H [36m}[0m[30;12H [36m}[0m);[31;12H $([36mthis[0m.element).find([31m'li'[0m).removeClass([31m'exclude'[0m);[32;8H [36m}[0m,[34;8H [34m/**
         * Initialize plugin.
         *
         * @private[0m[38;126H351,9[9C29%[1;9H[34h[?25h[?25l[23m[24m[0m[H[J[1;1H[34m         *
         * @private
         */[0m[4;8H _createCheckbox: [36mfunction[0m () [36m{[0m[6;12H [36mvar[0m t = [36mthis[0m;[8;12H [34m// bind node uncheck event[0m[9;12H [36mthis[0m.element.on([31m'click'[0m, [31m'input:checkbox:not(:checked)'[0m, [36mfunction[0m () [36m{[0m[10;16H t.uncheck(t.options.core.parentNode($([36mthis[0m)));[11;12H [36m}[0m);[13;12H [34m// bind node check event[0m[14;12H [36mthis[0m.element.on([31m'click'[0m, [31m'input:checkbox:checked'[0m, [36mfunction[0m () [36m{[0m[15;16H t.check(t.options.core.parentNode($([36mthis[0m)));[16;12H [36m}[0m);[18;12H [34m// bind collapse on uncheck event[0m[19;12H [33mif[0m ([36mthis[0m.options.onUncheck.node == [31m'collapse'[0m) [36m{[0m[20;16H [36mthis[0m.element.on([31m"click"[0m, [31m'input:checkbox:not(:checked)'[0m, [36mfunction[0m () [36m{[0m[21;20H t.options.core.collapse(t.options.core.parentNode($([36mthis[0m)));[22;16H [36m}[0m);[23;12H [36m}[0m [33melse[0m[25;12H [34m// bind expand on uncheck event[0m[26;12H [33mif[0m ([36mthis[0m.options.onUncheck.node == [31m'expand'[0m) [36m{[0m[27;16H [36mthis[0m.element.on([31m"click"[0m, [31m'input:checkbox:not(:checked)'[0m, [36mfunction[0m () [36m{[0m[28;20H t.options.core.expand(t.options.core.parentNode($([36mthis[0m)));[29;16H [36m}[0m);[30;12H [36m}[0m[32;12H [34m// bind collapse on check event[0m[33;12H [33mif[0m ([36mthis[0m.options.onCheck.node == [31m'collapse'[0m) [36m{[0m[34;16H [36mthis[0m.element.on([31m"click"[0m, [31m'input:checkbox:checked'[0m, [36mfunction[0m () [36m{[0m[35;20H t.options.core.collapse(t.options.core.parentNode($([36mthis[0m)));[36;16H [36m}[0m);[37;12H [36m}[0m [33melse[0m[38;126H386,10[8C32%[1;10H[34h[?25h[?25l[23m[24m[0m[H[J[1;16H [36m}[0m);[2;12H [36m}[0m [33melse[0m[4;12H [34m// bind expand on check event[0m[5;12H [33mif[0m ([36mthis[0m.options.onCheck.node == [31m'expand'[0m) [36m{[0m[6;16H [36mthis[0m.element.on([31m"click"[0m, [31m'input:checkbox:checked'[0m, [36mfunction[0m () [36m{[0m[7;20H t.options.core.expand(t.options.core.parentNode($([36mthis[0m)));[8;16H [36m}[0m);[9;12H [36m}[0m[10;8H [36m}[0m,[12;8H [34m/**
         * Initialize passed node
         *
         * @private
         * @param li node to initialize
         */[0m[18;8H _initializeCheckboxNode: [36mfunction[0m (li) [36m{[0m[20;8H [36m}[0m,[22;8H [34m/**
         * Uncheck ancestors of passed node
         *
         * Don't use uncheck() method because we won't trigger onUncheck events
         *
         * @private
         * @param li node
         */[0m[30;8H _uncheckAncestors: [36mfunction[0m (li) [36m{[0m[31;12H li.parentsUntil([31m'daredevel-tree'[0m).filter([31m'li'[0m).find([31m'input:checkbox:first:checked'[0m).prop([31m'checked'[0m, [31mfalse[0m).change();[32;8H [36m}[0m,[34;8H [34m/**
         * Uncheck descendants of passed node
         *
         * Don't use uncheck() method because we won't trigger onUncheck events[0m[38;126H421,17[8C35%[1;17H[34h[?25h[?25l[23m[24m[0m[H[J[1;1H[34m         *
         * Don't use uncheck() method because we won't trigger onUncheck events
         *
         * @private
         * @param li node
         */[0m[7;8H _uncheckDescendants: [36mfunction[0m (li) [36m{[0m[8;12H li.find([31m'li input:checkbox:checked'[0m).prop([31m'checked'[0m, [31mfalse[0m).change();[9;8H [36m}[0m,[11;8H [34m/**
         * Uncheck nodes that are neither ancestors or descendants of passed node
         *
         * Don't use uncheck() method because we won't trigger onUncheck events
         *
         * @private
         * @param li node
         */[0m[19;8H _uncheckOthers: [36mfunction[0m (li) [36m{[0m[20;12H [36mvar[0m t = [36mthis[0m;[21;12H li.addClass([31m'exclude'[0m);[22;12H li.parents([31m'li'[0m).addClass([31m'exclude'[0m);[23;12H li.find([31m'li'[0m).addClass([31m'exclude'[0m);[24;12H $([36mthis[0m.element).find([31m'li'[0m).each([36mfunction[0m () [36m{[0m[25;16H [33mif[0m (!$([36mthis[0m).hasClass([31m'exclude'[0m)) [36m{[0m[26;20H $([36mthis[0m).find([31m'input:checkbox:first:checked'[0m).prop([31m'checked'[0m, [31mfalse[0m).change();[27;16H [36m}[0m[28;12H [36m}[0m);[29;12H $([36mthis[0m.element).find([31m'li'[0m).removeClass([31m'exclude'[0m);[30;8H [36m}[0m,[32;8H [34m/**
         * Check node
         *
         * @public
         * @param li node to check
         */[0m[38;126H456,10[8C38%[1;10H[34h[?25h[?25l[23m[24m[0m[H[J[1;1H[34m         * @param li node to check
         */[0m[3;8H check: [36mfunction[0m (li) [36m{[0m[5;12H li = $(li);[7;12H li.find([31m'input:checkbox:first:not(:checked)'[0m).prop([31m'checked'[0m, [31mtrue[0m).change();[9;12H [34m// handle others[0m[10;12H [33mif[0m ([36mthis[0m.options.onCheck.others == [31m'check'[0m) [36m{[0m[11;16H [36mthis[0m._checkOthers(li);[12;12H [36m}[0m [33melse[0m [33mif[0m ([36mthis[0m.options.onCheck.others == [31m'uncheck'[0m) [36m{[0m[13;16H [36mthis[0m._uncheckOthers(li);[14;12H [36m}[0m[16;12H [34m// handle descendants[0m[17;12H [33mif[0m ([36mthis[0m.options.onCheck.descendants == [31m'check'[0m) [36m{[0m[18;16H [36mthis[0m._checkDescendants(li);[19;12H [36m}[0m [33melse[0m [33mif[0m ([36mthis[0m.options.onCheck.descendants == [31m'uncheck'[0m) [36m{[0m[20;16H [36mthis[0m._uncheckDescendants(li);[21;12H [36m}[0m[23;12H [34m// handle ancestors[0m[24;12H [33mif[0m ([36mthis[0m.options.onCheck.ancestors == [31m'check'[0m) [36m{[0m[25;16H [36mthis[0m._checkAncestors(li);[26;12H [36m}[0m [33melse[0m [33mif[0m ([36mthis[0m.options.onCheck.ancestors == [31m'uncheck'[0m) [36m{[0m[27;16H [36mthis[0m._uncheckAncestors(li);[28;12H [36m}[0m [33melse[0m [33mif[0m ([36mthis[0m.options.onCheck.ancestors == [31m'checkIfFull'[0m) [36m{[0m[29;16H [36mvar[0m isRoot = [36mthis[0m.options.core.isRoot(li);[30;16H [36mvar[0m allDescendantChecked = [36mthis[0m._allDescendantChecked([36mthis[0m.options.core.parentNode(li));[31;16H [33mif[0m (!isRoot && allDescendantChecked) [36m{[0m[32;20H [36mthis[0m.check([36mthis[0m.options.core.parentNode(li));[33;16H [36m}[0m[34;12H [36m}[0m[35;8H [36m}[0m,[37;8H [34m/**[0m[38;126H491,10[8C41%[1;10H[34h[?25h[?25l[23m[24m[0m[H[J[2;8H [34m/**
         * Check all tree elements
         *
         * Don't use check() method so it won't trigger onCheck events
         *
         * @public
         */[0m[9;8H checkAll: [36mfunction[0m () [36m{[0m[10;12H $([36mthis[0m.element).find([31m'input:checkbox:not(:checked)'[0m).prop([31m'checked'[0m, [31mtrue[0m).change();[11;8H [36m}[0m,[13;8H [34m/**
         * Uncheck node
         *
         * @public
         * @param li node to uncheck
         */[0m[19;8H uncheck: [36mfunction[0m (li) [36m{[0m[21;12H li = $(li);[23;12H li.find([31m'input:checkbox:first:checked'[0m).prop([31m'checked'[0m, [31mfalse[0m).change();[25;12H [34m// handle others[0m[26;12H [33mif[0m ([36mthis[0m.options.onUncheck.others == [31m'check'[0m) [36m{[0m[27;16H [36mthis[0m._checkOthers(li);[28;12H [36m}[0m [33melse[0m [33mif[0m ([36mthis[0m.options.onUncheck.others == [31m'uncheck'[0m) [36m{[0m[29;16H [36mthis[0m._uncheckOthers(li);[30;12H [36m}[0m[32;12H [34m// handle descendants[0m[33;12H [33mif[0m ([36mthis[0m.options.onUncheck.descendants == [31m'check'[0m) [36m{[0m[34;16H [36mthis[0m._checkDescendants(li);[35;12H [36m}[0m [33melse[0m [33mif[0m ([36mthis[0m.options.onUncheck.descendants == [31m'uncheck'[0m) [36m{[0m[36;16H [36mthis[0m._uncheckDescendants(li);[37;12H [36m}[0m[38;126H526,0-1[7C44%[1;1H[34h[?25h[?25l[23m[24m[0m[H[J[1;16H [36mthis[0m._uncheckDescendants(li);[2;12H [36m}[0m[4;12H [34m// handle ancestors[0m[5;12H [33mif[0m ([36mthis[0m.options.onUncheck.ancestors == [31m'check'[0m) [36m{[0m[6;16H [36mthis[0m._checkAncestors(li);[7;12H [36m}[0m [33melse[0m [33mif[0m ([36mthis[0m.options.onUncheck.ancestors == [31m'uncheck'[0m) [36m{[0m[8;16H [36mthis[0m._uncheckAncestors(li);[9;12H [36m}[0m[11;8H [36m}[0m,[13;8H [34m/**
         * Uncheck all tree elements
         *
         * Don't use uncheck() method so it won't trigger onUncheck events
         *
         * @public
         */[0m[20;8H uncheckAll: [36mfunction[0m () [36m{[0m[21;12H $([36mthis[0m.element).find([31m'input:checkbox:checked'[0m).prop([31m'checked'[0m, [31mfalse[0m).change();[22;8H [36m}[0m,[24;8H [34m/**
         * Initialize plugin
         *
         * @private
         */[0m[29;8H _createCollapsible: [36mfunction[0m () [36m{[0m[31;12H [36mvar[0m t = [36mthis[0m[33;12H [34m// bind collapse/expand event[0m[34;12H [36mthis[0m.element.on([31m"click"[0m, [31m'li span.daredevel-tree-anchor'[0m, [36mfunction[0m () [36m{[0m[35;16H [36mvar[0m li = t.options.core.parentNode($([36mthis[0m));[37;16H [33mif[0m (li.hasClass([31m'collapsed'[0m)) [36m{[0m[38;126H561,17[8C47%[1;17H[34h[?25h[?25l[23m[24m[0m[H[J[2;8H [34m/**
         * Check all tree elements
         *
         * Don't use check() method so it won't trigger onCheck events
         *
         * @public
         */[0m[9;8H checkAll: [36mfunction[0m () [36m{[0m[10;12H $([36mthis[0m.element).find([31m'input:checkbox:not(:checked)'[0m).prop([31m'checked'[0m, [31mtrue[0m).change();[11;8H [36m}[0m,[13;8H [34m/**
         * Uncheck node
         *
         * @public
         * @param li node to uncheck
         */[0m[19;8H uncheck: [36mfunction[0m (li) [36m{[0m[21;12H li = $(li);[23;12H li.find([31m'input:checkbox:first:checked'[0m).prop([31m'checked'[0m, [31mfalse[0m).change();[25;12H [34m// handle others[0m[26;12H [33mif[0m ([36mthis[0m.options.onUncheck.others == [31m'check'[0m) [36m{[0m[27;16H [36mthis[0m._checkOthers(li);[28;12H [36m}[0m [33melse[0m [33mif[0m ([36mthis[0m.options.onUncheck.others == [31m'uncheck'[0m) [36m{[0m[29;16H [36mthis[0m._uncheckOthers(li);[30;12H [36m}[0m[32;12H [34m// handle descendants[0m[33;12H [33mif[0m ([36mthis[0m.options.onUncheck.descendants == [31m'check'[0m) [36m{[0m[34;16H [36mthis[0m._checkDescendants(li);[35;12H [36m}[0m [33melse[0m [33mif[0m ([36mthis[0m.options.onUncheck.descendants == [31m'uncheck'[0m) [36m[46m{[0m[36;16H [36mthis[0m._uncheckDescendants(li);[37;12H [36m[46m}[0m[38;126H562,13[8C44%[37;13H[34h[?25h[?25l[23m[24m[0m[H[J[1;1H[34m         * @param li node to check
         */[0m[3;8H check: [36mfunction[0m (li) [36m{[0m[5;12H li = $(li);[7;12H li.find([31m'input:checkbox:first:not(:checked)'[0m).prop([31m'checked'[0m, [31mtrue[0m).change();[9;12H [34m// handle others[0m[10;12H [33mif[0m ([36mthis[0m.options.onCheck.others == [31m'check'[0m) [36m{[0m[11;16H [36mthis[0m._checkOthers(li);[12;12H [36m}[0m [33melse[0m [33mif[0m ([36mthis[0m.options.onCheck.others == [31m'uncheck'[0m) [36m{[0m[13;16H [36mthis[0m._uncheckOthers(li);[14;12H [36m}[0m[16;12H [34m// handle descendants[0m[17;12H [33mif[0m ([36mthis[0m.options.onCheck.descendants == [31m'check'[0m) [36m{[0m[18;16H [36mthis[0m._checkDescendants(li);[19;12H [36m}[0m [33melse[0m [33mif[0m ([36mthis[0m.options.onCheck.descendants == [31m'uncheck'[0m) [36m{[0m[20;16H [36mthis[0m._uncheckDescendants(li);[21;12H [36m}[0m[23;12H [34m// handle ancestors[0m[24;12H [33mif[0m ([36mthis[0m.options.onCheck.ancestors == [31m'check'[0m) [36m{[0m[25;16H [36mthis[0m._checkAncestors(li);[26;12H [36m}[0m [33melse[0m [33mif[0m ([36mthis[0m.options.onCheck.ancestors == [31m'uncheck'[0m) [36m{[0m[27;16H [36mthis[0m._uncheckAncestors(li);[28;12H [36m}[0m [33melse[0m [33mif[0m ([36mthis[0m.options.onCheck.ancestors == [31m'checkIfFull'[0m) [36m{[0m[29;16H [36mvar[0m isRoot = [36mthis[0m.options.core.isRoot(li);[30;16H [36mvar[0m allDescendantChecked = [36mthis[0m._allDescendantChecked([36mthis[0m.options.core.parentNode(li));[31;16H [33mif[0m (!isRoot && allDescendantChecked) [36m{[0m[32;20H [36mthis[0m.check([36mthis[0m.options.core.parentNode(li));[33;16H [36m}[0m[34;12H [36m}[0m[35;8H [36m}[0m,[37;8H [34m/**[0m[38;126H527,9[9C41%[37;9H[34h[?25h[?25l[23m[24m[0m[H[J[1;1H[34m         *
         * Don't use uncheck() method because we won't trigger onUncheck events
         *
         * @private
         * @param li node
         */[0m[7;8H _uncheckDescendants: [36mfunction[0m (li) [36m{[0m[8;12H li.find([31m'li input:checkbox:checked'[0m).prop([31m'checked'[0m, [31mfalse[0m).change();[9;8H [36m}[0m,[11;8H [34m/**
         * Uncheck nodes that are neither ancestors or descendants of passed node
         *
         * Don't use uncheck() method because we won't trigger onUncheck events
         *
         * @private
         * @param li node
         */[0m[19;8H _uncheckOthers: [36mfunction[0m (li) [36m{[0m[20;12H [36mvar[0m t = [36mthis[0m;[21;12H li.addClass([31m'exclude'[0m);[22;12H li.parents([31m'li'[0m).addClass([31m'exclude'[0m);[23;12H li.find([31m'li'[0m).addClass([31m'exclude'[0m);[24;12H $([36mthis[0m.element).find([31m'li'[0m).each([36mfunction[0m () [36m{[0m[25;16H [33mif[0m (!$([36mthis[0m).hasClass([31m'exclude'[0m)) [36m{[0m[26;20H $([36mthis[0m).find([31m'input:checkbox:first:checked'[0m).prop([31m'checked'[0m, [31mfalse[0m).change();[27;16H [36m}[0m[28;12H [36m}[0m);[29;12H $([36mthis[0m.element).find([31m'li'[0m).removeClass([31m'exclude'[0m);[30;8H [36m}[0m,[32;8H [34m/**
         * Check node
         *
         * @public
         * @param li node to check
         */[0m[38;126H492,10[8C38%[37;10H[34h[?25h[?25l[23m[24m[0m[H[J[1;16H [36m}[0m);[2;12H [36m}[0m [33melse[0m[4;12H [34m// bind expand on check event[0m[5;12H [33mif[0m ([36mthis[0m.options.onCheck.node == [31m'expand'[0m) [36m{[0m[6;16H [36mthis[0m.element.on([31m"click"[0m, [31m'input:checkbox:checked'[0m, [36mfunction[0m () [36m{[0m[7;20H t.options.core.expand(t.options.core.parentNode($([36mthis[0m)));[8;16H [36m}[0m);[9;12H [36m}[0m[10;8H [36m}[0m,[12;8H [34m/**
         * Initialize passed node
         *
         * @private
         * @param li node to initialize
         */[0m[18;8H _initializeCheckboxNode: [36mfunction[0m (li) [36m{[0m[20;8H [36m}[0m,[22;8H [34m/**
         * Uncheck ancestors of passed node
         *
         * Don't use uncheck() method because we won't trigger onUncheck events
         *
         * @private
         * @param li node
         */[0m[30;8H _uncheckAncestors: [36mfunction[0m (li) [36m{[0m[31;12H li.parentsUntil([31m'daredevel-tree'[0m).filter([31m'li'[0m).find([31m'input:checkbox:first:checked'[0m).prop([31m'checked'[0m, [31mfalse[0m).change();[32;8H [36m}[0m,[34;8H [34m/**
         * Uncheck descendants of passed node
         *
         * Don't use uncheck() method because we won't trigger onUncheck events[0m[38;126H457,10[8C35%[37;10H[34h[?25h[?25l[23m[24m[0m[H[J[1;1H[34m         *
         * @private
         */[0m[4;8H _createCheckbox: [36mfunction[0m () [36m{[0m[6;12H [36mvar[0m t = [36mthis[0m;[8;12H [34m// bind node uncheck event[0m[9;12H [36mthis[0m.element.on([31m'click'[0m, [31m'input:checkbox:not(:checked)'[0m, [36mfunction[0m () [36m{[0m[10;16H t.uncheck(t.options.core.parentNode($([36mthis[0m)));[11;12H [36m}[0m);[13;12H [34m// bind node check event[0m[14;12H [36mthis[0m.element.on([31m'click'[0m, [31m'input:checkbox:checked'[0m, [36mfunction[0m () [36m{[0m[15;16H t.check(t.options.core.parentNode($([36mthis[0m)));[16;12H [36m}[0m);[18;12H [34m// bind collapse on uncheck event[0m[19;12H [33mif[0m ([36mthis[0m.options.onUncheck.node == [31m'collapse'[0m) [36m{[0m[20;16H [36mthis[0m.element.on([31m"click"[0m, [31m'input:checkbox:not(:checked)'[0m, [36mfunction[0m () [36m{[0m[21;20H t.options.core.collapse(t.options.core.parentNode($([36mthis[0m)));[22;16H [36m}[0m);[23;12H [36m}[0m [33melse[0m[25;12H [34m// bind expand on uncheck event[0m[26;12H [33mif[0m ([36mthis[0m.options.onUncheck.node == [31m'expand'[0m) [36m{[0m[27;16H [36mthis[0m.element.on([31m"click"[0m, [31m'input:checkbox:not(:checked)'[0m, [36mfunction[0m () [36m{[0m[28;20H t.options.core.expand(t.options.core.parentNode($([36mthis[0m)));[29;16H [36m}[0m);[30;12H [36m}[0m[32;12H [34m// bind collapse on check event[0m[33;12H [33mif[0m ([36mthis[0m.options.onCheck.node == [31m'collapse'[0m) [36m[46m{[0m[34;16H [36mthis[0m.element.on([31m"click"[0m, [31m'input:checkbox:checked'[0m, [36mfunction[0m () [36m{[0m[35;20H t.options.core.collapse(t.options.core.parentNode($([36mthis[0m)));[36;16H [36m}[0m);[37;12H [36m[46m}[0m [33melse[0m[38;126H422,13[8C32%[37;13H[34h[?25h[?25l[23m[24m[0m[H[J[1;8H [34m/**
         * Check descendants on passed node
         *
         * Don't use check() method because we won't trigger onCheck events
         *
         * @private
         * @param li node
         */[0m[9;8H _checkDescendants: [36mfunction[0m (li) [36m{[0m[10;12H li.find([31m'li input:checkbox:not(:checked)'[0m).prop([31m'checked'[0m, [31mtrue[0m).change();[11;8H [36m}[0m,[13;8H [34m/**
         * Check nodes that are neither ancestors or descendants of passed node
         *
         * Don't use check() method because we won't trigger onCheck events
         *
         * @private
         * @param li node
         */[0m[21;8H _checkOthers: [36mfunction[0m (li) [36m{[0m[22;12H [36mvar[0m t = [36mthis[0m;[23;12H li.addClass([31m'exclude'[0m);[24;12H li.parents([31m'li'[0m).addClass([31m'exclude'[0m);[25;12H li.find([31m'li'[0m).addClass([31m'exclude'[0m);[26;12H $([36mthis[0m.element).find([31m'li'[0m).each([36mfunction[0m () [36m{[0m[27;16H [33mif[0m (!$([36mthis[0m).hasClass([31m'exclude'[0m)) [36m{[0m[28;20H $([36mthis[0m).find([31m'input:checkbox:first:not(:checked)'[0m).prop([31m'checked'[0m, [31mtrue[0m).change();[29;16H [36m}[0m[30;12H [36m}[0m);[31;12H $([36mthis[0m.element).find([31m'li'[0m).removeClass([31m'exclude'[0m);[32;8H [36m}[0m,[34;8H [34m/**
         * Initialize plugin.
         *
         * @private[0m[38;126H387,10[8C29%[37;10H[34h[?25h[?25l[23m[24m[0m[H[J[1;1H[34m         * Remove a node from tree (node is not actually delete, but still in memory)
         *
         * @param li node to delete (can be jQuery object or selector)
         */[0m[5;8H removeNode: [36mfunction[0m (li) [36m{[0m[7;12H [36mthis[0m._detachNode($(li));[9;12H [36mthis[0m._trigger([31m'remove'[0m, [31mtrue[0m, $(li));[11;8H [36m}[0m,[13;8H [34m/**
         * Check if all descendant of passed node are checked
         *
         * @private
         * @param li node
         * @return true if all descendant checked
         */[0m[20;8H _allDescendantChecked: [36mfunction[0m (li) [36m{[0m[21;12H [33mreturn[0m (li.find([31m'li input:checkbox:not(:checked)'[0m).length == 0);[22;8H [36m}[0m,[24;8H [34m/**
         * Check ancestors on passed node
         *
         * Don't use check() method because we won't trigger onCheck events
         *
         * @private
         * @param li node
         */[0m[32;8H _checkAncestors: [36mfunction[0m (li) [36m{[0m[33;12H li.parentsUntil([31m'daredevel-tree'[0m).filter([31m'li'[0m).find([31m'input:checkbox:first:not(:checked)'[0m).prop([31m'checked'[0m, [31mtrue[0m).change();[34;8H [36m}[0m,[36;8H [34m/**
         * Check descendants on passed node[0m[38;126H352,10[8C26%[37;10H[34h[?25h[?25l[23m[24m[0m[H[J[1;8H [36m}[0m,[3;8H [34m/**
         * Move a node under new parent
         *
         * @param li node to move
         * @param parentLi node under which node will be moved
         * @param position position of the node between brothers (expressed as positive integer)
         */[0m[10;8H moveNode: [36mfunction[0m (li, parentLi, position) [36m{[0m[12;12H [36mthis[0m._detachNode($(li));[14;12H [33mif[0m (([33mundefined[0m == parentLi) || 0 == parentLi.length) [36m{[0m[15;16H [36mthis[0m._attachNode($(li), [33mundefined[0m, position);[16;12H [36m}[0m [33melse[0m [36m{[0m[17;16H [36mthis[0m._attachNode($(li), $(parentLi), position);[18;12H [36m}[0m[20;12H [36mthis[0m._trigger([31m'move'[0m, [31mtrue[0m, $(li));[21;8H [36m}[0m,[23;8H [34m/**
         * Return parent li of the passed li
         *
         * @public
         *
         * @param li node as jQuery object or selector
         * @return parent li
         */[0m[31;8H parentNode: [36mfunction[0m (li) [36m{[0m[32;12H [33mreturn[0m $(li).parents([31m'li:first'[0m);[33;8H [36m}[0m,[35;8H [34m/**
         * Remove a node from tree (node is not actually delete, but still in memory)
         *[0m[38;126H317,10[8C23%[37;10H[34h[?25h[?25l[23m[24m[0m[H[J[1;8H addNode: [36mfunction[0m (attributes, parentLi, position) [36m{[0m[3;12H [36mvar[0m t = [36mthis[0m;[5;12H [36mvar[0m li = [36mthis[0m._buildNode(attributes);[7;12H [33mif[0m (([33mundefined[0m == parentLi) || 0 == parentLi.length) [36m{[0m[8;16H [36mthis[0m._attachNode($(li), [33mundefined[0m, position);[9;12H [36m}[0m [33melse[0m [36m{[0m[10;16H [36mthis[0m._attachNode($(li), $(parentLi), position);[11;12H [36m}[0m[13;12H [33mif[0m ([33mundefined[0m != attributes.children) [36m{[0m[14;16H $.each(attributes.children, [36mfunction[0m (key, value) [36m{[0m[15;20H t.addNode(value, li);[16;16H [36m}[0m);[17;12H [36m}[0m[19;12H t._trigger([31m'add'[0m, [31mtrue[0m, li);[20;8H [36m}[0m,[22;8H [34m/**
         * Check if passed node is a root
         *
         * @public
         *
         * @param li node to check
         */[0m[29;8H isRoot: [36mfunction[0m (li) [36m{[0m[31;12H li = $(li);[33;12H [36mvar[0m parents = li.parentsUntil([31m'.daredevel-tree'[0m);[35;12H [33mreturn[0m 1 == parents.length;[36;8H [36m}[0m,[38;126H282,0-1[7C20%[37;1H[34h[?25h[?25l[23m[24m[0m[H[J[1;8H [36m}[0m,[3;8H [34m/**
         * Initialize passed node
         *
         * @private
         *
         * @param li node to initialize
         */[0m[10;8H _initializeNode: [36mfunction[0m (li) [36m{[0m[11;12H li.children([31m'span:last'[0m).addClass([31m'daredevel-tree-label'[0m);[13;12H [33mif[0m ([36mthis[0m.options.checkbox) [36m{[0m[14;16H [36mthis[0m._initializeCheckboxNode(li);[15;12H [36m}[0m[16;12H [33mif[0m ([36mthis[0m.options.collapsible) [36m{[0m[17;16H [36mthis[0m._initializeCollapsibleNode(li);[18;12H [36m}[0m[19;12H [33mif[0m ([36mthis[0m.options.dnd) [36m{[0m[20;16H [36mthis[0m._initializeDndNode(li);[21;12H [36m}[0m[22;12H [33mif[0m ([36mthis[0m.options.selectable) [36m{[0m[23;16H [36mthis[0m._initializeSelectableNode(li);[24;12H [36m}[0m[25;8H [36m}[0m,[27;8H [34m/**
         * Add a new node as children of passed one
         *
         * @public
         *
         * @param attributes new node attributes
         * @param parentLi node under which new node will be attached
         * @param position position of the node between brothers (expressed as positive integer)
         */[0m[36;8H addNode: [36mfunction[0m (attributes, parentLi, position) [36m{[0m[38;126H247,0-1[7C17%[37;1H[34h[?25h[?25l[23m[24m[0m[H[J[1;8H [34m/**
         * Detach a node (actually don't delete it)
         *
         * @private
         *
         * @param li node to detach
         */[0m[8;8H _detachNode: [36mfunction[0m (li) [36m{[0m[10;12H [36mvar[0m parentLi = [36mthis[0m.options.core.parentNode(li);[12;12H [36mvar[0m ul = parentLi.find([31m'ul:first'[0m);[14;12H [33mif[0m (ul.children().length == 1) [36m{[0m[15;16H ul.detach();[16;16H parentLi.removeClass([31m'collapsed expanded'[0m).addClass([31m'leaf'[0m) [34m//@todo find right way to do this[0m[17;12H [36m}[0m [33melse[0m [36m{[0m[18;16H li.detach();[19;12H [36m}[0m[21;12H [34m//initialize node from core to call all components initialize methods[0m[22;12H [36mthis[0m.options.core._initializeNode(parentLi);[23;8H [36m}[0m,[25;8H [34m/**
         * Initialize requested components
         *
         * @private
         */[0m[30;8H _initializeComponents: [36mfunction[0m () [36m{[0m[31;12H [33mfor[0m ([36mvar[0m i [33min[0m [36mthis[0m.options.components) [36m{[0m[32;16H [36mvar[0m initializeComponent = [31m'element.tree'[0m + [36mthis[0m.options.components[36m[[0mi[36m][0m + [31m'(options);'[0m;[33;16H run = [33mnew[0m [32mFunction[0m([31m"options"[0m, [31m"element"[0m, initializeComponent);[34;16H run([36mthis[0m.options, [36mthis[0m.element);[35;12H [36m}[0m[36;8H [36m}[0m,[38;126H212,0-1[7C14%[37;1H[34h[?25h[?25l[23m[24m[0m[H[J[1;12H [33mif[0m ([36mthis[0m.options.collapsible) [36m{[0m[2;16H [36mthis[0m._createCollapsible();[3;12H [36m}[0m[4;12H [33mif[0m ([36mthis[0m.options.dnd) [36m{[0m[5;16H [36mthis[0m._createDnd();[6;12H [36m}[0m[7;12H [33mif[0m ([36mthis[0m.options.selectable) [36m{[0m[8;16H [36mthis[0m._createSelectable();[9;12H [36m}[0m[11;12H [34m// initialize requested components[0m[12;12H [34m//this._initializeComponents();[0m[14;12H [36mthis[0m.element.find([31m'li'[0m).each([36mfunction[0m () [36m{[0m[15;16H t._initializeNode($([36mthis[0m));[16;12H [36m}[0m);[18;12H [33mif[0m ([36mthis[0m.options.nodes != [33mnull[0m) [36m{[0m[19;16H $.each([36mthis[0m.options.nodes, [36mfunction[0m (key, value) [36m{[0m[20;20H t.options.core.addNode(value);[21;16H [36m}[0m);[22;12H [36m}[0m[23;8H [36m}[0m,[25;8H [34m/**
         * Destroy plugin
         *
         * @private
         *
         * @todo complete destroy method
         */[0m[32;8H _destroy: [36mfunction[0m () [36m{[0m[33;12H $.Widget.prototype.destroy.call([36mthis[0m);[34;8H [36m}[0m,[36;8H [34m/**
         * Detach a node (actually don't delete it)[0m[38;126H177,10[8C11%[37;10H[34h[?25h[?25l[23m[24m[0m[H[J[2;8H [34m/**
         * Initialize plugin.
         *
         * @private
         *
         * @note Base tree structure must be something like this:
         *
         * <div id="tree">
         *   <ul>
         *     <li id="node1" class="expanded"><input type="checkbox"><label>Node 1</label><span>Node 1</span>
         *       <ul>
         *         <li><input type="checkbox"><label>Node 1.1</label>
         *         <li><input type="checkbox"><label>Node 1.2</label>
         *       </ul>
         *     </li>
         *   </ul>
         * </div>
         *
         * 1) input type="checkbox" tag and label tag are mandatory only to use checkbox component
         */[0m[22;8H _create: [36mfunction[0m () [36m{[0m[24;12H [36mvar[0m t = [36mthis[0m;[26;12H [34m// add core widget to options so components can add methods @todo remove core variable[0m[27;12H [36mthis[0m.options.core = [36mthis[0m;[29;12H [34m// add jQueryUI css widget classes[0m[30;12H [36mthis[0m.element.addClass([31m'ui-widget ui-widget-content daredevel-tree'[0m);[32;12H [34m// initialize requested features[0m[33;12H [33mif[0m ([36mthis[0m.options.checkbox) [36m{[0m[34;16H [36mthis[0m._createCheckbox();[35;12H [36m}[0m[36;12H [33mif[0m ([36mthis[0m.options.collapsible) [36m{[0m[37;16H [36mthis[0m._createCollapsible();[38;126H142,17[9C8%[37;17H[34h[?25h[?25l[23m[24m[0m[H[J[1;12H [36m}[0m[2;8H [36m}[0m,[4;8H [34m/**
         * Create a new node object
         *
         * Attributes must contains a list of attributes for html elements of the node.
         *
         * @private
         *
         * @param attributes object containing a list of new node's html elements attributes
         * @return a li element object
         */[0m[14;8H _buildNode: [36mfunction[0m (attributes) [36m{[0m[16;12H attributes = $.extend([31mtrue[0m, [36mthis[0m.options.defaultNodeAttributes, attributes);[18;12H [34m// create new node label[0m[19;12H [36mvar[0m span = $([31m'<span/>'[0m, attributes.span);[21;12H [34m// create node[0m[22;12H [36mvar[0m li = $([31m'<li/>'[0m, attributes.li);[24;12H [34m// if checkbox component is active, new node must contain checkbox input[0m[25;12H [33mif[0m ($.inArray([31m'checkbox'[0m, [36mthis[0m.options.components) > -1) [36m{[0m[26;16H [36mvar[0m input = $([31m'<input/>'[0m,[27;20H attributes.input[28;16H );[29;16H li.append(input);[30;12H [36m}[0m[32;12H li.append(span);[34;12H [33mreturn[0m li;[35;8H [36m}[0m,[37;8H [34m/**[0m[38;126H107,9[10C5%[37;9H[34h[?25h[?25l[23m[24m[0m[H[J[1;12H [36m}[0m[3;8H [36m}[0m,[5;8H [34m/**
         * Attach a node under passed parent (if no parent is passed, node is attached as root)
         *
         * @private
         *
         * @param li node to attach
         * @param parentLi node under which new node will be attached
         * @param position position of the node between brothers (expressed as positive integer)
         */[0m[14;8H _attachNode: [36mfunction[0m (li, parentLi, position) [36m[46m{[0m[16;12H [33mif[0m ([33mundefined[0m == parentLi) [36m{[0m[18;16H [36mvar[0m [33mparent[0m = [36mthis[0m.element;[20;16H [36mthis[0m._attachLi(li, [33mparent[0m, position);[22;16H [34m//initialize nodes from core to call all components initialize methods[0m[23;16H [36mthis[0m._initializeNode(li);[25;12H [36m}[0m [33melse[0m [36m{[0m[27;16H [36mvar[0m [33mparent[0m = parentLi;[29;16H [36mthis[0m._attachLi(li, [33mparent[0m, position);[31;16H [33mparent[0m.removeClass([31m'leaf collapsed'[0m).addClass([31m'expanded'[0m); [34m//@todo find right way to do this[0m[33;16H [34m//initialize nodes from core to call all components initialize methods[0m[34;16H [36mthis[0m._initializeNode(li);[35;16H [36mthis[0m._initializeNode([33mparent[0m);[36;12H [36m}[0m[37;8H [36m[46m}[0m,[38;126H72,9[11C2%[37;9H[34h[?25h[?25l[23m[24m[0m[H[J[1;1H[34m/*!
 * Tree - jQuery Tree Widget
 * @author Valerio Galano <v.galano@daredevel.com>
 * @license MIT
 * @see https://github.com/daredevel/jquery-tree
 * @version 0.1
 */[0m
([36mfunction[0m ($, [33mundefined[0m) [36m{[0m
    $.widget([31m"daredevel.tree"[0m, [36m{[0m[11;8H [34m/**
         * Attach node li code under passed parent element at passed position
         *
         * @private
         *
         * @param li node to attach
         * @param parent element to attach node to (can be another node or widget base element)
         * @param position position of the node between brothers (expressed as positive integer)
         */[0m[20;8H _attachLi: [36mfunction[0m (li, [33mparent[0m, position) [36m{[0m[22;12H [36mvar[0m ul = [33mparent[0m.find([31m'ul:first'[0m);[24;12H [33mif[0m (ul.length) [36m{[0m[25;16H [33mif[0m (([33mundefined[0m == position) || (ul.children([31m'li'[0m).length < position)) [36m{[0m[26;20H ul.append(li);[27;16H [36m}[0m [33melse[0m [36m{[0m[28;20H [33mif[0m (position == 0) [36m{[0m[29;24H position = position + 1;[30;20H [36m}[0m[31;20H ul.children([31m'li:nth-child('[0m + position + [31m')'[0m).before(li);[32;16H [36m}[0m[33;12H [36m}[0m [33melse[0m [36m{[0m[34;16H ul = $([31m'<ul/>'[0m);[35;16H [33mparent[0m.append(ul.append(li));[36;12H [36m}[0m[38;126H37,0-1[8CTop[37;1H[34h[?25h[?25l[34h[?25h[?25l[34h[?25h[?25l[34h[?25h[?25l[34h[?25h[?25l[34h[?25h[?25l[34h[?25h[?25l[34h[?25h[?25l[34h[?25h[?25l[34h[?25h[?25l[38;126H[K[38;1H:[34h[?25hq[?25l[34h[?25h![?25l[34h[?25h[?25l[38;1H[K[38;1H[?1l>[34h[?25h[?1049lsriram@ubuntu:/space/hashincludetest/mocking-bird/plugins/jquery-tree-master/src/js$ ls
jquery.treeajax.js  jquery.treecheckbox.js  jquery.treecollapse.js  jquery.treednd.js  [0m[01;32mjquery.tree.js[0m
sriram@ubuntu:/space/hashincludetest/mocking-bird/plugins/jquery-tree-master/src/js$ vi ja[Kquery.treeajax.js 
[?1049h[?1h=[1;38r[34l[34h[?25h[23m[24m[0m[H[J[?25l[38;1H"jquery.treeajax.js" [noeol] 181L, 4299C[1;1H[34m/*!
 * Tree - jQuery Tree Widget - ajax component
 * @author Valerio Galano <v.galano@daredevel.com>
 */[0m
$.widget([31m"daredevel.treeajax"[0m, [36m{[0m[7;4H [34m/**
     * Initialize plugin
     *
     * @private
     */[0m
    _create:[36mfunction[0m () [36m{[0m[14;8H [36mvar[0m t = [36mthis[0m;[16;8H [34m// initialize ajax nodes[0m[17;8H [33mif[0m ([36mthis[0m.options.dataSourceUrl) [36m{[0m[18;12H t._lazyInit();[19;8H [36m}[0m[21;8H [34m// bind lazy loading on expand event[0m[22;8H [33mif[0m ([36mthis[0m.options.dataSourceUrl) [36m{[0m[23;12H [36mthis[0m.element.bind([31m"treeexpand"[0m, [36mfunction[0m ([33mevent[0m, element) [36m{[0m[24;16H [33mif[0m ($(element).find([31m'ul'[0m).length) [36m{[0m[25;20H [33mreturn[0m;[26;16H [36m}[0m[27;16H t._lazyLoad($(element));[28;12H [36m}[0m);[29;8H [36m}[0m[31;8H [34m// bind edit on drop event[0m[32;8H [33mif[0m ([36mthis[0m.options.dataEditUrl) [36m{[0m[33;12H [36mthis[0m.element.bind([31m"treemove"[0m, [36mfunction[0m ([33mevent[0m, element) [36m{[0m[34;16H [34m/** @todo: test if parent is not changed */[0m[35;16H t._notifyMove($(element));[36;12H [36m}[0m);[37;8H [36m}[0m[38;126H1,1[11CTop[1;1H[34h[?25h[?25l[38;1H[K[38;1H:[34h[?25hq[?25l[34h[?25h![?25l[34h[?25h[?25l[38;1H[K[38;1H[?1l>[34h[?25h[?1049lsriram@ubuntu:/space/hashincludetest/mocking-bird/plugins/jquery-tree-master/src/js$ ls
jquery.treeajax.js  jquery.treecheckbox.js  jquery.treecollapse.js  jquery.treednd.js  [0m[01;32mjquery.tree.js[0m
sriram@ubuntu:/space/hashincludetest/mocking-bird/plugins/jquery-tree-master/src/js$ lsvi jquery.treeajax.js [K[K[K[K[K[K[K[Kcheckbox.js jquery.tree[K
[?1049h[?1h=[1;38r[34l[34h[?25h[23m[24m[0m[H[J[?25l[38;1H"jquery.treecheckbox.js" [noeol] 367L, 10109C[1;1H[34m/*!
 * Tree - jQuery Tree Widget - checkbox component
 * @author Valerio Galano <v.galano@daredevel.com>
 */[0m
$.widget([31m"daredevel.treecheckbox"[0m, [36m{[0m[7;4H [34m/**
     * Check if all descendant of passed node are checked
     *
     * @private
     * @param li node
     * @return true if all descendant checked
     */[0m
    _allDescendantChecked:[36mfunction[0m (li) [36m{[0m[15;8H [33mreturn[0m (li.find([31m'li input:checkbox:not(:checked)'[0m).length == 0);
    [36m}[0m,[18;4H [34m/**
     * Check ancestors on passed node
     *
     * Don't use check() method because we won't trigger onCheck events
     *
     * @private
     * @param li node
     */[0m
    _checkAncestors:[36mfunction[0m (li) [36m{[0m[27;8H li.parentsUntil([36mthis[0m.options.core.widgetBaseClass).filter([31m'li'[0m).find([31m'input:checkbox:first:not(:checked)'[0m).prop([31m'checked'[0m, [31mtrue[0m).changee[28;1H();
    [36m}[0m,[31;4H [34m/**
     * Check descendants on passed node
     *
     * Don't use check() method because we won't trigger onCheck events
     *
     * @private
     * @param li node[0m[38;126H1,1[11CTop[1;1H[34h[?25h[?25l[23m[24m[0m[H[J[1;1H[34m     * @private
     * @param li node
     */[0m
    _checkDescendants:[36mfunction[0m (li) [36m{[0m[5;8H li.find([31m'li input:checkbox:not(:checked)'[0m).prop([31m'checked'[0m, [31mtrue[0m).change();
    [36m}[0m,[8;4H [34m/**
     * Check nodes that are neither ancestors or descendants of passed node
     *
     * Don't use check() method because we won't trigger onCheck events
     *
     * @private
     * @param li node
     */[0m
    _checkOthers:[36mfunction[0m (li) [36m{[0m[17;8H [36mvar[0m t = [36mthis[0m;[18;8H li.addClass([31m'exclude'[0m);[19;8H li.parents([31m'li'[0m).addClass([31m'exclude'[0m);[20;8H li.find([31m'li'[0m).addClass([31m'exclude'[0m);[21;8H $([36mthis[0m.element).find([31m'li'[0m).each([36mfunction[0m () [36m{[0m[22;12H [33mif[0m (!$([36mthis[0m).hasClass([31m'exclude'[0m)) [36m{[0m[23;16H $([36mthis[0m).find([31m'input:checkbox:first:not(:checked)'[0m).prop([31m'checked'[0m, [31mtrue[0m).change();[24;12H [36m}[0m[25;8H [36m}[0m);[26;8H $([36mthis[0m.element).find([31m'li'[0m).removeClass([31m'exclude'[0m);
    [36m}[0m,[29;4H [34m/**
     * Initialize plugin.
     *
     * @private
     */[0m
    _createCheckbox:[36mfunction[0m () [36m{[0m[36;8H [36mvar[0m t = [36mthis[0m;[38;126H35,6[10C10%[1;6H[34h[?25h[?25l[23m[24m[0m[H[J[1;8H [36mvar[0m t = [36mthis[0m;[3;8H [34m// bind node uncheck event[0m[4;8H [36mthis[0m.element.find([31m'input:checkbox:not(:checked)'[0m).live([31m'click'[0m, [36mfunction[0m () [36m{[0m[5;12H t.uncheck(t.options.core.parentNode($([36mthis[0m)));[6;8H [36m}[0m);[8;8H [34m// bind node check event[0m[9;8H [36mthis[0m.element.find([31m'input:checkbox:checked'[0m).live([31m'click'[0m, [36mfunction[0m () [36m{[0m[10;12H t.check(t.options.core.parentNode($([36mthis[0m)));[11;8H [36m}[0m);[13;8H [34m// bind collapse on uncheck event[0m[14;8H [33mif[0m ([36mthis[0m.options.onUncheck.node == [31m'collapse'[0m) [36m{[0m[15;12H [36mthis[0m.element.find([31m'input:checkbox:not(:checked)'[0m).live([31m"click"[0m, [36mfunction[0m () [36m{[0m[16;16H t.options.core.collapse(t.options.core.parentNode($([36mthis[0m)));[17;12H [36m}[0m);[18;8H [36m}[0m [33melse[0m[20;8H [34m// bind expand on uncheck event[0m[21;8H [33mif[0m ([36mthis[0m.options.onUncheck.node == [31m'expand'[0m) [36m{[0m[22;12H [36mthis[0m.element.find([31m'input:checkbox:not(:checked)'[0m).live([31m"click"[0m, [36mfunction[0m () [36m{[0m[23;16H t.options.core.expand(t.options.core.parentNode($([36mthis[0m)));[24;12H [36m}[0m);[25;8H [36m}[0m[27;8H [34m// bind collapse on check event[0m[28;8H [33mif[0m ([36mthis[0m.options.onCheck.node == [31m'collapse'[0m) [36m{[0m[29;12H [36mthis[0m.element.find([31m'input:checkbox:checked'[0m).live([31m"click"[0m, [36mfunction[0m () [36m{[0m[30;16H t.options.core.collapse(t.options.core.parentNode($([36mthis[0m)));[31;12H [36m}[0m);[32;8H [36m}[0m [33melse[0m[34;8H [34m// bind expand on check event[0m[35;8H [33mif[0m ([36mthis[0m.options.onCheck.node == [31m'expand'[0m) [36m{[0m[36;12H [36mthis[0m.element.find([31m'input:checkbox:checked'[0m).live([31m"click"[0m, [36mfunction[0m () [36m{[0m[37;16H t.options.core.expand(t.options.core.parentNode($([36mthis[0m)));[38;126H70,9[10C20%[1;9H[34h[?25h[?25l[23m[24m[0m[H[J[1;12H [36mthis[0m.element.find([31m'input:checkbox:checked'[0m).live([31m"click"[0m, [36mfunction[0m () [36m{[0m[2;16H t.options.core.expand(t.options.core.parentNode($([36mthis[0m)));[3;12H [36m}[0m);[4;8H [36m}[0m[6;8H [34m// add public methods to core component[0m[7;8H [36mthis[0m.options.core.check = [36mfunction[0m (li) [36m{[0m[8;12H t.check(li);[9;8H [36m}[0m;[10;8H [36mthis[0m.options.core.checkAll = [36mfunction[0m () [36m{[0m[11;12H t.checkAll();[12;8H [36m}[0m;[13;8H [36mthis[0m.options.core.uncheck = [36mfunction[0m (li) [36m{[0m[14;12H t.uncheck(li);[15;8H [36m}[0m;[16;8H [36mthis[0m.options.core.uncheckAll = [36mfunction[0m () [36m{[0m[17;12H t.uncheckAll();[18;8H [36m}[0m;[20;8H [34m// add private methods to core component[0m[21;8H [36mthis[0m.options.core._treecheckboxInitializeNode = [36mfunction[0m (li) [36m{[0m[22;12H t._initializeNode(li);[23;8H [36m}[0m;
    [36m}[0m,[26;4H [34m/**
     * Initialize passed node
     *
     * @private
     * @param li node to initialize
     */[0m
    _initializeCheckboxNode:[36mfunction[0m (li) [36m{[0m[34;4H [36m}[0m,[36;4H [34m/**
     * Uncheck ancestors of passed node[0m[38;126H105,13[8C31%[1;13H[34h[?25h[?25l[23m[24m[0m[H[J[1;4H [34m/**
     * Uncheck ancestors of passed node
     *
     * Don't use uncheck() method because we won't trigger onUncheck events
     *
     * @private
     * @param li node
     */[0m
    _uncheckAncestors:[36mfunction[0m (li) [36m{[0m[10;8H li.parentsUntil([36mthis[0m.options.core.widgetBaseClass).filter([31m'li'[0m).find([31m'input:checkbox:first:checked'[0m).prop([31m'checked'[0m, [31mfalse[0m).change();
    [36m}[0m,[13;4H [34m/**
     * Uncheck descendants of passed node
     *
     * Don't use uncheck() method because we won't trigger onUncheck events
     *
     * @private
     * @param li node
     */[0m
    _uncheckDescendants:[36mfunction[0m (li) [36m{[0m[22;8H li.find([31m'li input:checkbox:checked'[0m).prop([31m'checked'[0m, [31mfalse[0m).change();
    [36m}[0m,[25;4H [34m/**
     * Uncheck nodes that are neither ancestors or descendants of passed node
     *
     * Don't use uncheck() method because we won't trigger onUncheck events
     *
     * @private
     * @param li node
     */[0m
    _uncheckOthers:[36mfunction[0m (li) [36m{[0m[34;8H [36mvar[0m t = [36mthis[0m;[35;8H li.addClass([31m'exclude'[0m);[36;8H li.parents([31m'li'[0m).addClass([31m'exclude'[0m);[37;8H li.find([31m'li'[0m).addClass([31m'exclude'[0m);[38;126H140,5[9C42%[1;5H[34h[?25h[?25l[23m[24m[0m[H[J[1;12H [36mthis[0m.element.find([31m'input:checkbox:checked'[0m).live([31m"click"[0m, [36mfunction[0m () [36m{[0m[2;16H t.options.core.expand(t.options.core.parentNode($([36mthis[0m)));[3;12H [36m}[0m);[4;8H [36m}[0m[6;8H [34m// add public methods to core component[0m[7;8H [36mthis[0m.options.core.check = [36mfunction[0m (li) [36m{[0m[8;12H t.check(li);[9;8H [36m}[0m;[10;8H [36mthis[0m.options.core.checkAll = [36mfunction[0m () [36m{[0m[11;12H t.checkAll();[12;8H [36m}[0m;[13;8H [36mthis[0m.options.core.uncheck = [36mfunction[0m (li) [36m{[0m[14;12H t.uncheck(li);[15;8H [36m}[0m;[16;8H [36mthis[0m.options.core.uncheckAll = [36mfunction[0m () [36m{[0m[17;12H t.uncheckAll();[18;8H [36m}[0m;[20;8H [34m// add private methods to core component[0m[21;8H [36mthis[0m.options.core._treecheckboxInitializeNode = [36mfunction[0m (li) [36m{[0m[22;12H t._initializeNode(li);[23;8H [36m}[0m;
    [36m}[0m,[26;4H [34m/**
     * Initialize passed node
     *
     * @private
     * @param li node to initialize
     */[0m
    _initializeCheckboxNode:[36mfunction[0m (li) [36m{[0m[34;4H [36m}[0m,[36;4H [34m/**
     * Uncheck ancestors of passed node[0m[38;126H141,6[9C31%[37;6H[34h[?25h[?25l[23m[24m[0m[H[J[1;8H [36mvar[0m t = [36mthis[0m;[3;8H [34m// bind node uncheck event[0m[4;8H [36mthis[0m.element.find([31m'input:checkbox:not(:checked)'[0m).live([31m'click'[0m, [36mfunction[0m () [36m{[0m[5;12H t.uncheck(t.options.core.parentNode($([36mthis[0m)));[6;8H [36m}[0m);[8;8H [34m// bind node check event[0m[9;8H [36mthis[0m.element.find([31m'input:checkbox:checked'[0m).live([31m'click'[0m, [36mfunction[0m () [36m{[0m[10;12H t.check(t.options.core.parentNode($([36mthis[0m)));[11;8H [36m}[0m);[13;8H [34m// bind collapse on uncheck event[0m[14;8H [33mif[0m ([36mthis[0m.options.onUncheck.node == [31m'collapse'[0m) [36m{[0m[15;12H [36mthis[0m.element.find([31m'input:checkbox:not(:checked)'[0m).live([31m"click"[0m, [36mfunction[0m () [36m{[0m[16;16H t.options.core.collapse(t.options.core.parentNode($([36mthis[0m)));[17;12H [36m}[0m);[18;8H [36m}[0m [33melse[0m[20;8H [34m// bind expand on uncheck event[0m[21;8H [33mif[0m ([36mthis[0m.options.onUncheck.node == [31m'expand'[0m) [36m{[0m[22;12H [36mthis[0m.element.find([31m'input:checkbox:not(:checked)'[0m).live([31m"click"[0m, [36mfunction[0m () [36m{[0m[23;16H t.options.core.expand(t.options.core.parentNode($([36mthis[0m)));[24;12H [36m}[0m);[25;8H [36m}[0m[27;8H [34m// bind collapse on check event[0m[28;8H [33mif[0m ([36mthis[0m.options.onCheck.node == [31m'collapse'[0m) [36m{[0m[29;12H [36mthis[0m.element.find([31m'input:checkbox:checked'[0m).live([31m"click"[0m, [36mfunction[0m () [36m{[0m[30;16H t.options.core.collapse(t.options.core.parentNode($([36mthis[0m)));[31;12H [36m}[0m);[32;8H [36m}[0m [33melse[0m[34;8H [34m// bind expand on check event[0m[35;8H [33mif[0m ([36mthis[0m.options.onCheck.node == [31m'expand'[0m) [36m{[0m[36;12H [36mthis[0m.element.find([31m'input:checkbox:checked'[0m).live([31m"click"[0m, [36mfunction[0m () [36m{[0m[37;16H t.options.core.expand(t.options.core.parentNode($([36mthis[0m)));[38;126H106,17[8C20%[37;17H[34h[?25h[?25l[23m[24m[0m[H[J[1;1H[34m     * @private
     * @param li node
     */[0m
    _checkDescendants:[36mfunction[0m (li) [36m{[0m[5;8H li.find([31m'li input:checkbox:not(:checked)'[0m).prop([31m'checked'[0m, [31mtrue[0m).change();
    [36m}[0m,[8;4H [34m/**
     * Check nodes that are neither ancestors or descendants of passed node
     *
     * Don't use check() method because we won't trigger onCheck events
     *
     * @private
     * @param li node
     */[0m
    _checkOthers:[36mfunction[0m (li) [36m{[0m[17;8H [36mvar[0m t = [36mthis[0m;[18;8H li.addClass([31m'exclude'[0m);[19;8H li.parents([31m'li'[0m).addClass([31m'exclude'[0m);[20;8H li.find([31m'li'[0m).addClass([31m'exclude'[0m);[21;8H $([36mthis[0m.element).find([31m'li'[0m).each([36mfunction[0m () [36m{[0m[22;12H [33mif[0m (!$([36mthis[0m).hasClass([31m'exclude'[0m)) [36m{[0m[23;16H $([36mthis[0m).find([31m'input:checkbox:first:not(:checked)'[0m).prop([31m'checked'[0m, [31mtrue[0m).change();[24;12H [36m}[0m[25;8H [36m}[0m);[26;8H $([36mthis[0m.element).find([31m'li'[0m).removeClass([31m'exclude'[0m);
    [36m}[0m,[29;4H [34m/**
     * Initialize plugin.
     *
     * @private
     */[0m
    _createCheckbox:[36mfunction[0m () [36m{[0m[36;8H [36mvar[0m t = [36mthis[0m;[38;126H71,0-1[8C10%[37;1H[34h[?25h[?25l[23m[24m[0m[H[J[1;1H[34m/*!
 * Tree - jQuery Tree Widget - checkbox component
 * @author Valerio Galano <v.galano@daredevel.com>
 */[0m
$.widget([31m"daredevel.treecheckbox"[0m, [36m{[0m[7;4H [34m/**
     * Check if all descendant of passed node are checked
     *
     * @private
     * @param li node
     * @return true if all descendant checked
     */[0m
    _allDescendantChecked:[36mfunction[0m (li) [36m{[0m[15;8H [33mreturn[0m (li.find([31m'li input:checkbox:not(:checked)'[0m).length == 0);
    [36m}[0m,[18;4H [34m/**
     * Check ancestors on passed node
     *
     * Don't use check() method because we won't trigger onCheck events
     *
     * @private
     * @param li node
     */[0m
    _checkAncestors:[36mfunction[0m (li) [36m{[0m[27;8H li.parentsUntil([36mthis[0m.options.core.widgetBaseClass).filter([31m'li'[0m).find([31m'input:checkbox:first:not(:checked)'[0m).prop([31m'checked'[0m, [31mtrue[0m).changee[28;1H();
    [36m}[0m,[31;4H [34m/**
     * Check descendants on passed node
     *
     * Don't use check() method because we won't trigger onCheck events
     *
     * @private
     * @param li node[0m[38;126H36,6[10CTop[37;6H[34h[?25h[?25l[34h[?25h[?25l[34h[?25h[?25l[34h[?25h[?25l[34h[?25h[?25l[34h[?25h[?25l[34h[?25h[?25l[34h[?25h[?25l[38;126H[K[38;1H:[34h[?25hq[?25l[34h[?25h![?25l[34h[?25h[?25l[38;1H[K[38;1H[?1l>[34h[?25h[?1049lsriram@ubuntu:/space/hashincludetest/mocking-bird/plugins/jquery-tree-master/src/js$ 
sriram@ubuntu:/space/hashincludetest/mocking-bird/plugins/jquery-tree-master/src/js$ 
sriram@ubuntu:/space/hashincludetest/mocking-bird/plugins/jquery-tree-master/src/js$ 
sriram@ubuntu:/space/hashincludetest/mocking-bird/plugins/jquery-tree-master/src/js$ cd ,,
bash: cd: ,,: No such file or directory
sriram@ubuntu:/space/hashincludetest/mocking-bird/plugins/jquery-tree-master/src/js$ cd ,,[K[K..
sriram@ubuntu:/space/hashincludetest/mocking-bird/plugins/jquery-tree-master/src$ 
sriram@ubuntu:/space/hashincludetest/mocking-bird/plugins/jquery-tree-master/src$ 
sriram@ubuntu:/space/hashincludetest/mocking-bird/plugins/jquery-tree-master/src$ cd ..
sriram@ubuntu:/space/hashincludetest/mocking-bird/plugins/jquery-tree-master$ ls
[0m[01;34mdemo[0m  [01;32mindex.html[0m  [01;34mminified[0m  [01;32mminify.sh[0m  README.md  [01;34msrc[0m
sriram@ubuntu:/space/hashincludetest/mocking-bird/plugins/jquery-tree-master$ cd minified/
sriram@ubuntu:/space/hashincludetest/mocking-bird/plugins/jquery-tree-master/minified$ ls
[0m[01;34mimages[0m  jquery.tree.min.css  jquery.tree.min.js
sriram@ubuntu:/space/hashincludetest/mocking-bird/plugins/jquery-tree-master/minified$ vi jquery.tree.min.js 
[?1049h[?1h=[1;38r[34l[34h[?25h[23m[24m[0m[H[J[?25l[38;1H"jquery.tree.min.js" [noeol] 8L, 12523C[1;1H[34m/*
 * Tree - jQuery Tree Widget
 * @author Valerio Galano <v.galano@daredevel.com>
 * @license MIT
 * @see https://github.com/daredevel/jquery-tree
 * @version 0.1
 */[0m
([36mfunction[0m(a,b)[36m{[0ma.widget([31m"daredevel.tree"[0m,[36m{[0m_attachLi:[36mfunction[0m(d,f,c)[36m{var[0m e=f.find([31m"ul:first"[0m);[33mif[0m(e.length)[36m{[0m[33mif[0m((b==c)||(e.children([31m"li"[0m).length<cc[9;1H))[36m{[0me.append(d)[36m}[0m[33melse[0m[36m{[0m[33mif[0m(c==0)[36m{[0mc=c+1[36m}[0me.children([31m"li:nth-child("[0m+c+[31m")"[0m).before(d)[36m}}[0m[33melse[0m[36m{[0me=a([31m"<ul/>"[0m);f.append(e.append(d))[36m}}[0m,_attachNode:[36mfunction[0m(([10;1He,d,c)[36m{[0m[33mif[0m(b==d)[36m{var[0m f=[36mthis[0m.element;[36mthis[0m._attachLi(e,f,c);[36mthis[0m._initializeNode(e)[36m}[0m[33melse[0m[36m{var[0m f=d;[36mthis[0m._attachLi(e,f,c);f.removeClass([31m"leaf collapss[11;1Hed"[0m).addClass([31m"expanded"[0m);[36mthis[0m._initializeNode(e);[36mthis[0m._initializeNode(f)[36m}}[0m,_buildNode:[36mfunction[0m(e)[36m{[0me=a.extend([31mtrue[0m,[36mthis[0m.options.defaultNodeAttrr[12;1Hibutes,e);[36mvar[0m f=a([31m"<span/>"[0m,e.span);[36mvar[0m c=a([31m"<li/>"[0m,e.li);[33mif[0m(a.inArray([31m"checkbox"[0m,[36mthis[0m.options.components)>-1)[36m{var[0m d=a([31m"<input/>"[0m,e.input);c.app[13;1Hpend(d)[36m}[0mc.append(f);[33mreturn[0m c[36m}[0m,_create:[36mfunction[0m()[36m{var[0m c=[36mthis[0m;[36mthis[0m.options.core=[36mthis[0m;[36mthis[0m.element.addClass([31m"ui-widget ui-widget-content daredevell[14;1H-tree"[0m);[33mif[0m([36mthis[0m.options.checkbox)[36m{this[0m._createCheckbox()[36m}[0m[33mif[0m([36mthis[0m.options.collapsible)[36m{this[0m._createCollapsible()[36m}[0m[33mif[0m([36mthis[0m.options.dnd)[36m{this[0m._creaa[15;1HteDnd()[36m}[0m[33mif[0m([36mthis[0m.options.selectable)[36m{this[0m._createSelectable()[36m}this[0m.element.find([31m"li"[0m).each([36mfunction[0m()[36m{[0mc._initializeNode(a([36mthis[0m))[36m}[0m);[33mif[0m([36mthis[0m.optioo[16;1Hns.nodes!=[33mnull[0m)[36m{[0ma.each([36mthis[0m.options.nodes,[36mfunction[0m(d,e)[36m{[0mc.options.core.addNode(e)[36m}[0m)[36m}}[0m,_destroy:[36mfunction[0m()[36m{[0ma.Widget.prototype.destroy.call([36mthis[0m))[17;1H[36m}[0m,_detachNode:[36mfunction[0m(d)[36m{var[0m c=[36mthis[0m.options.core.parentNode(d);[36mvar[0m e=c.find([31m"ul:first"[0m);[33mif[0m(e.children().length==1)[36m{[0me.detach();c.removeClass([31m"cc[18;1Hollapsed expanded"[0m).addClass([31m"leaf"[0m)[36m}[0m[33melse[0m[36m{[0md.detach()[36m}this[0m.options.core._initializeNode(c)[36m}[0m,_initializeComponents:[36mfunction[0m()[36m{[0m[33mfor[0m([36mvar[0m d [33min[0m [36mthis[0m.oo[19;1Hptions.components)[36m{var[0m c=[31m"element.tree"[0m+[36mthis[0m.options.components[36m[[0md[36m][0m+[31m"(options);"[0m;run=[33mnew[0m [32mFunction[0m([31m"options"[0m,[31m"element"[0m,c);run([36mthis[0m.options,[36mthis[0m.ee[20;1Hlement)[36m}}[0m,_initializeNode:[36mfunction[0m(c)[36m{[0mc.children([31m"span:last"[0m).addClass([31m"daredevel-tree-label"[0m);[33mif[0m([36mthis[0m.options.checkbox)[36m{this[0m._initializeCheckbb[21;1HoxNode(c)[36m}[0m[33mif[0m([36mthis[0m.options.collapsible)[36m{this[0m._initializeCollapsibleNode(c)[36m}[0m[33mif[0m([36mthis[0m.options.dnd)[36m{this[0m._initializeDndNode(c)[36m}[0m[33mif[0m([36mthis[0m.options.selecc[22;1Htable)[36m{this[0m._initializeSelectableNode(c)[36m}}[0m,addNode:[36mfunction[0m(f,e,d)[36m{var[0m g=[36mthis[0m;[36mvar[0m c=[36mthis[0m._buildNode(f);[33mif[0m((b==e)||0==e.length)[36m{this[0m._attachNodee[23;1H(a(c),b,d)[36m}[0m[33melse[0m[36m{this[0m._attachNode(a(c),a(e),d)[36m}[0m[33mif[0m(b!=f.children)[36m{[0ma.each(f.children,[36mfunction[0m(i,h)[36m{[0mg.addNode(i,c)[36m}[0m)[36m}[0mg._trigger([31m"add"[0m,[31mtrue[0m,c)[36m}[0m,isRoo[24;1Hot:[36mfunction[0m(c)[36m{[0mc=a(c);[36mvar[0m d=c.parentsUntil([31m".daredevel-tree"[0m);[33mreturn[0m 1==d.length[36m}[0m,moveNode:[36mfunction[0m(e,d,c)[36m{this[0m._detachNode(a(e));[33mif[0m((b==d)||0==[25;1H=d.length)[36m{this[0m._attachNode(a(e),b,c)[36m}[0m[33melse[0m[36m{this[0m._attachNode(a(e),a(d),c)[36m}this[0m._trigger([31m"move"[0m,[31mtrue[0m,a(e))[36m}[0m,parentNode:[36mfunction[0m(c)[36m{[0m[33mreturn[0m a(c).paa[26;1Hrents([31m"li:first"[0m)[36m}[0m,removeNode:[36mfunction[0m(c)[36m{this[0m._detachNode(a(c));[36mthis[0m._trigger([31m"remove"[0m,[31mtrue[0m,a(c))[36m}[0m,_allDescendantChecked:[36mfunction[0m(c)[36m{[0m[33mreturn[0m(c..[27;1Hfind([31m"li input:checkbox:not(:checked)"[0m).length==0)[36m}[0m,_checkAncestors:[36mfunction[0m(c)[36m{[0mc.parentsUntil([31m"daredevel-tree"[0m).filter([31m"li"[0m).find([31m"input:checkk[28;1Hbox:first:not(:checked)"[0m).prop([31m"checked"[0m,[31mtrue[0m).change()[36m}[0m,_checkDescendants:[36mfunction[0m(c)[36m{[0mc.find([31m"li input:checkbox:not(:checked)"[0m).prop([31m"check[0med""[29;1H,true).change()},_checkOthers:function(c){var d=this;c.addClass("exclude");c.parents("li").addClass("exclude");c.find("li").addClass("exclude"))[30;1H;a(this.element).find("li").each(function(){if(!a(this).hasClass("exclude")){a(this).find("input:checkbox:first:not(:checked)").prop("checked",,[31;1Htrue).change()}});a(this.element).find("li").removeClass("exclude")},_createCheckbox:function(){var c=this;this.element.on("click","input:checkk[32;1Hbox:not(:checked)",function(){c.uncheck(c.options.core.parentNode(a(this)))});this.element.on("click","input:checkbox:checked",function(){c.chee[33;1Hck(c.options.core.parentNode(a(this)))});if(this.options.onUncheck.node=="collapse"){this.element.on("click","input:checkbox:not(:checked)",funn[34;1Hction(){c.options.core.collapse(c.options.core.parentNode(a(this)))})}else{if(this.options.onUncheck.node=="expand"){this.element.on("click","ii[35;1Hnput:checkbox:not(:checked)",function(){c.options.core.expand(c.options.core.parentNode(a(this)))})}}if(this.options.onCheck.node=="collapse"){{[36;1Hthis.element.on("click","input:checkbox:checked",function(){c.options.core.collapse(c.options.core.parentNode(a(this)))})}else{if(this.options..[37;1HonCheck.node=="expand"){this.element.on("click","input:checkbox:checked",function(){c.options.core.expand(c.options.core.parentNode(a(this)))})[8;1H[1m[34m@                                                                                                                                              [9;1H@                                                                                                                                              [10;1H@                                                                                                                                              [11;1H@                                                                                                                                              [12;1H@                                                                                                                                              [13;1H@                                                                                                                                              [14;1H@                                                                                                                                              [15;1H@                                                                                                                                              [16;1H@                                                                                                                                              [17;1H@                                                                                                                                              [18;1H@                                                                                                                                              [19;1H@                                                                                                                                              [20;1H@                                                                                                                                              [21;1H@                                                                                                                                              [22;1H@                                                                                                                                              [23;1H@                                                                                                                                              [24;1H@                                                                                                                                              [25;1H@                                                                                                                                              [26;1H@                                                                                                                                              [27;1H@                                                                                                                                              [28;1H@                                                                                                                                              [29;1H@                                                                                                                                              [30;1H@                                                                                                                                              [31;1H@                                                                                                                                              [32;1H@                                                                                                                                              [33;1H@                                                                                                                                              [34;1H@                                                                                                                                              [35;1H@                                                                                                                                              [36;1H@                                                                                                                                              [37;1H@                                                                                                                                              [0m[38;126H1,1[11CTop[1;1H[34h[?25h[?25l[1;37r[1;1H[7M[1;38r[1;1H([36mfunction[0m(a,b)[36m{[0ma.widget([31m"daredevel.tree"[0m,[36m{[0m_attachLi:[36mfunction[0m(d,f,c)[36m{var[0m e=f.find([31m"ul:first"[0m);[33mif[0m(e.length)[36m{[0m[33mif[0m((b==c)||(e.children([31m"li"[0m).length<cc[2;1H))[36m{[0me.append(d)[36m}[0m[33melse[0m[36m{[0m[33mif[0m(c==0)[36m{[0mc=c+1[36m}[0me.children([31m"li:nth-child("[0m+c+[31m")"[0m).before(d)[36m}}[0m[33melse[0m[36m{[0me=a([31m"<ul/>"[0m);f.append(e.append(d))[36m}}[0m,_attachNode:[36mfunction[0m(([3;1He,d,c)[36m{[0m[33mif[0m(b==d)[36m{var[0m f=[36mthis[0m.element;[36mthis[0m._attachLi(e,f,c);[36mthis[0m._initializeNode(e)[36m}[0m[33melse[0m[36m{var[0m f=d;[36mthis[0m._attachLi(e,f,c);f.removeClass([31m"leaf collapss[4;1Hed"[0m).addClass([31m"expanded"[0m);[36mthis[0m._initializeNode(e);[36mthis[0m._initializeNode(f)[36m}}[0m,_buildNode:[36mfunction[0m(e)[36m{[0me=a.extend([31mtrue[0m,[36mthis[0m.options.defaultNodeAttrr[5;1Hibutes,e);[36mvar[0m f=a([31m"<span/>"[0m,e.span);[36mvar[0m c=a([31m"<li/>"[0m,e.li);[33mif[0m(a.inArray([31m"checkbox"[0m,[36mthis[0m.options.components)>-1)[36m{var[0m d=a([31m"<input/>"[0m,e.input);c.app[6;1Hpend(d)[36m}[0mc.append(f);[33mreturn[0m c[36m}[0m,_create:[36mfunction[0m()[36m{var[0m c=[36mthis[0m;[36mthis[0m.options.core=[36mthis[0m;[36mthis[0m.element.addClass([31m"ui-widget ui-widget-content daredevell[7;1H-tree"[0m);[33mif[0m([36mthis[0m.options.checkbox)[36m{this[0m._createCheckbox()[36m}[0m[33mif[0m([36mthis[0m.options.collapsible)[36m{this[0m._createCollapsible()[36m}[0m[33mif[0m([36mthis[0m.options.dnd)[36m{this[0m._creaa[8;1HteDnd()[36m}[0m[33mif[0m([36mthis[0m.options.selectable)[36m{this[0m._createSelectable()[36m}this[0m.element.find([31m"li"[0m).each([36mfunction[0m()[36m{[0mc._initializeNode(a([36mthis[0m))[36m}[0m);[33mif[0m([36mthis[0m.optioo[9;1Hns.nodes!=[33mnull[0m)[36m{[0ma.each([36mthis[0m.options.nodes,[36mfunction[0m(d,e)[36m{[0mc.options.core.addNode(e)[36m}[0m)[36m}}[0m,_destroy:[36mfunction[0m()[36m{[0ma.Widget.prototype.destroy.call([36mthis[0m))[10;1H[36m}[0m,_detachNode:[36mfunction[0m(d)[36m{var[0m c=[36mthis[0m.options.core.parentNode(d);[36mvar[0m e=c.find([31m"ul:first"[0m);[33mif[0m(e.children().length==1)[36m{[0me.detach();c.removeClass([31m"cc[11;1Hollapsed expanded"[0m).addClass([31m"leaf"[0m)[36m}[0m[33melse[0m[36m{[0md.detach()[36m}this[0m.options.core._initializeNode(c)[36m}[0m,_initializeComponents:[36mfunction[0m()[36m{[0m[33mfor[0m([36mvar[0m d [33min[0m [36mthis[0m.oo[12;1Hptions.components)[36m{var[0m c=[31m"element.tree"[0m+[36mthis[0m.options.components[36m[[0md[36m][0m+[31m"(options);"[0m;run=[33mnew[0m [32mFunction[0m([31m"options"[0m,[31m"element"[0m,c);run([36mthis[0m.options,[36mthis[0m.ee[13;1Hlement)[36m}}[0m,_initializeNode:[36mfunction[0m(c)[36m{[0mc.children([31m"span:last"[0m).addClass([31m"daredevel-tree-label"[0m);[33mif[0m([36mthis[0m.options.checkbox)[36m{this[0m._initializeCheckbb[14;1HoxNode(c)[36m}[0m[33mif[0m([36mthis[0m.options.collapsible)[36m{this[0m._initializeCollapsibleNode(c)[36m}[0m[33mif[0m([36mthis[0m.options.dnd)[36m{this[0m._initializeDndNode(c)[36m}[0m[33mif[0m([36mthis[0m.options.selecc[15;1Htable)[36m{this[0m._initializeSelectableNode(c)[36m}}[0m,addNode:[36mfunction[0m(f,e,d)[36m{var[0m g=[36mthis[0m;[36mvar[0m c=[36mthis[0m._buildNode(f);[33mif[0m((b==e)||0==e.length)[36m{this[0m._attachNodee[16;1H(a(c),b,d)[36m}[0m[33melse[0m[36m{this[0m._attachNode(a(c),a(e),d)[36m}[0m[33mif[0m(b!=f.children)[36m{[0ma.each(f.children,[36mfunction[0m(i,h)[36m{[0mg.addNode(i,c)[36m}[0m)[36m}[0mg._trigger([31m"add"[0m,[31mtrue[0m,c)[36m}[0m,isRoo[17;1Hot:[36mfunction[0m(c)[36m{[0mc=a(c);[36mvar[0m d=c.parentsUntil([31m".daredevel-tree"[0m);[33mreturn[0m 1==d.length[36m}[0m,moveNode:[36mfunction[0m(e,d,c)[36m{this[0m._detachNode(a(e));[33mif[0m((b==d)||0==[18;1H=d.length)[36m{this[0m._attachNode(a(e),b,c)[36m}[0m[33melse[0m[36m{this[0m._attachNode(a(e),a(d),c)[36m}this[0m._trigger([31m"move"[0m,[31mtrue[0m,a(e))[36m}[0m,parentNode:[36mfunction[0m(c)[36m{[0m[33mreturn[0m a(c).paa[19;1Hrents([31m"li:first"[0m)[36m}[0m,removeNode:[36mfunction[0m(c)[36m{this[0m._detachNode(a(c));[36mthis[0m._trigger([31m"remove"[0m,[31mtrue[0m,a(c))[36m}[0m,_allDescendantChecked:[36mfunction[0m(c)[36m{[0m[33mreturn[0m(c..[20;1Hfind([31m"li input:checkbox:not(:checked)"[0m).length==0)[36m}[0m,_checkAncestors:[36mfunction[0m(c)[36m{[0mc.parentsUntil([31m"daredevel-tree"[0m).filter([31m"li"[0m).find([31m"input:checkk[21;1Hbox:first:not(:checked)"[0m).prop([31m"checked"[0m,[31mtrue[0m).change()[36m}[0m,_checkDescendants:[36mfunction[0m(c)[36m{[0mc.find([31m"li input:checkbox:not(:checked)"[0m).prop([31m"check[0med""[22;1H,true).change()},_checkOthers:function(c){var d=this;c.addClass("exclude");c.parents("li").addClass("exclude");c.find("li").addClass("exclude"))[23;1H;a(this.element).find("li").each(function(){if(!a(this).hasClass("exclude")){a(this).find("input:checkbox:first:not(:checked)").prop("checked",,[24;1Htrue).change()}});a(this.element).find("li").removeClass("exclude")},_createCheckbox:function(){var c=this;this.element.on("click","input:checkk[25;1Hbox:not(:checked)",function(){c.uncheck(c.options.core.parentNode(a(this)))});this.element.on("click","input:checkbox:checked",function(){c.chee[26;1Hck(c.options.core.parentNode(a(this)))});if(this.options.onUncheck.node=="collapse"){this.element.on("click","input:checkbox:not(:checked)",funn[27;1Hction(){c.options.core.collapse(c.options.core.parentNode(a(this)))})}else{if(this.options.onUncheck.node=="expand"){this.element.on("click","ii[28;1Hnput:checkbox:not(:checked)",function(){c.options.core.expand(c.options.core.parentNode(a(this)))})}}if(this.options.onCheck.node=="collapse"){{[29;1Hthis.element.on("click","input:checkbox:checked",function(){c.options.core.collapse(c.options.core.parentNode(a(this)))})}else{if(this.options..[30;1HonCheck.node=="expand"){this.element.on("click","input:checkbox:checked",function(){c.options.core.expand(c.options.core.parentNode(a(this)))}))[31;1H}}},_initializeCheckboxNode:function(c){},_uncheckAncestors:function(c){c.parentsUntil("daredevel-tree").filter("li").find("input:checkbox:firss[32;1Ht:checked").prop("checked",false).change()},_uncheckDescendants:function(c){c.find("li input:checkbox:checked").prop("checked",false).change()}}[33;1H,_uncheckOthers:function(c){var d=this;c.addClass("exclude");c.parents("li").addClass("exclude");c.find("li").addClass("exclude");a(this.elemenn[34;1Ht).find("li").each(function(){if(!a(this).hasClass("exclude")){a(this).find("input:checkbox:first:checked").prop("checked",false).change()}});aa[35;1H(this.element).find("li").removeClass("exclude")},check:function(c){c=a(c);c.find("input:checkbox:first:not(:checked)").prop("checked",true).chh[36;1Hange();if(this.options.onCheck.others=="check"){this._checkOthers(c)}else{if(this.options.onCheck.others=="uncheck"){this._uncheckOthers(c)}}iff[37;1H(this.options.onCheck.descendants=="check"){this._checkDescendants(c)}else{if(this.options.onCheck.descendants=="uncheck"){this._uncheckDescend[38;1H[K[38;126H8,1[11CBot[1;1H[34h[?25h[?25l[38;126H[K[38;1H/[34h[?25ha[?25l[1;11H[7ma[0m[131Ccc[2;1H)[141C(([3;1He[141C[31mss[4;1He[0m[141Crr[5;1Hi[141Cpp[6;1Hp[141C[31mll[7;1H-[0m[141Caa[8;1Ht[141Coo[9;1Hn[141C))[10;1H[36m}[0m[141C[31mcc[11;1Ho[0m[141Coo[12;1Hp[141Cee[13;1Hl[141Cbb[14;1Ho[141Ccc[15;1Ht[141Cee[16;1H([141Coo[17;1Ho[141C==[18;1H=[141Caa[19;1Hr[141C..[20;1Hf[141C[31mkk[21;1Hb[0m[141C""[22;1H,[141C))[23;1H;[141C,,[24;1Ht[141Ckk[25;1Hb[141Cee[26;1Hc[141Cnn[27;1Hc[141Cii[28;1Hn[141C{{[29;1Ht[141C..[30;1Ho[141C))[31;1H}[141Css[32;1Ht[141C}}[33;1H,[141Cnn[34;1Ht[141Caa[35;1H([141Chh[36;1Ha[141Cff[37;1H([38;126H8,11[10CBot[38;126H[K[38;3H[34h[?25hj[?25l[1;11Ha[131Ccc[2;1H)[141C(([3;1He[141C[31mss[4;1He[0m[141Crr[5;1Hi[141Cpp[6;1Hp[141C[31mll[7;1H-[0m[141Caa[8;1Ht[141Coo[9;1Hn[141C))[10;1H[36m}[0m[141C[31mcc[11;1Ho[0m[141Coo[12;1Hp[141Cee[13;1Hl[141Cbb[14;1Ho[141Ccc[15;1Ht[141Cee[16;1H([141Coo[17;1Ho[141C==[18;1H=[141Caa[19;1Hr[141C..[20;1Hf[141C[31mkk[21;1Hb[0m[141C""[22;1H,[141C))[23;1H;[141C,,[24;1Ht[141Ckk[25;1Hb[141Cee[26;1Hc[141Cnn[27;1Hc[141Cii[28;1Hn[141C{{[29;1Ht[141C..[30;1Ho[141C))[31;1H}[141Css[32;1Ht[141C}}[33;1H,[141Cnn[34;1Ht[141Caa[35;1H([141Chh[36;1Ha[141Cff[37;1H([38;126H8,1[11CBot[38;126H[K[38;4H[34h[?25ha[?25l[121C8,1[11CBot[38;126H[K[38;5H[34h[?25hx[?25l[120C8,1[11CBot[38;126H[K[38;6H[34h[?25h[?25l[31msearch hit BOTTOM, continuing at TOP[0m[1m[37m[41mE486: Pattern not found: ajax[0m[38;30H[K[38;126H8,1[11CBot[1;1H[34h[?25h[?25l[38;128H2[1;2H[34h[?25h[?25l[38;128H3[1;3H[34h[?25h[?25l[38;128H4[1;4H[34h[?25h[?25l[38;128H5[1;5H[34h[?25h[?25l[38;128H6[1;6H[34h[?25h[?25l[38;128H7[1;7H[34h[?25h[?25l[38;128H8[1;8H[34h[?25h[?25l[38;128H9[1;9H[34h[?25h[?25l[1C[46m([0ma,b[46m)[0m[128Ccc[2;1H)[141C(([3;1He[141C[31mss[4;1He[0m[141Crr[5;1Hi[141Cpp[6;1Hp[141C[31mll[7;1H-[0m[141Caa[8;1Ht[141Coo[9;1Hn[141C))[10;1H[36m}[0m[141C[31mcc[11;1Ho[0m[141Coo[12;1Hp[141Cee[13;1Hl[141Cbb[14;1Ho[141Ccc[15;1Ht[141Cee[16;1H([141Coo[17;1Ho[141C==[18;1H=[141Caa[19;1Hr[141C..[20;1Hf[141C[31mkk[21;1Hb[0m[141C""[22;1H,[141C))[23;1H;[141C,,[24;1Ht[141Ckk[25;1Hb[141Cee[26;1Hc[141Cnn[27;1Hc[141Cii[28;1Hn[141C{{[29;1Ht[141C..[30;1Ho[141C))[31;1H}[141Css[32;1Ht[141C}}[33;1H,[141Cnn[34;1Ht[141Caa[35;1H([141Chh[36;1Ha[141Cff[37;1H([38;128H10[1;10H[34h[?25h[?25l(a,b)[128Ccc[2;1H)[141C(([3;1He[141C[31mss[4;1He[0m[141Crr[5;1Hi[141Cpp[6;1Hp[141C[31mll[7;1H-[0m[141Caa[8;1Ht[141Coo[9;1Hn[141C))[10;1H[36m}[0m[141C[31mcc[11;1Ho[0m[141Coo[12;1Hp[141Cee[13;1Hl[141Cbb[14;1Ho[141Ccc[15;1Ht[141Cee[16;1H([141Coo[17;1Ho[141C==[18;1H=[141Caa[19;1Hr[141C..[20;1Hf[141C[31mkk[21;1Hb[0m[141C""[22;1H,[141C))[23;1H;[141C,,[24;1Ht[141Ckk[25;1Hb[141Cee[26;1Hc[141Cnn[27;1Hc[141Cii[28;1Hn[141C{{[29;1Ht[141C..[30;1Ho[141C))[31;1H}[141Css[32;1Ht[141C}}[33;1H,[141Cnn[34;1Ht[141Caa[35;1H([141Chh[36;1Ha[141Cff[37;1H([38;129H1[1;11H[34h[?25h[?25l[38;129H2[1;12H[34h[?25h[?25l[38;129H3[1;13H[34h[?25h[?25l[46m([0ma,b[46m)[0m[128Ccc[2;1H)[141C(([3;1He[141C[31mss[4;1He[0m[141Crr[5;1Hi[141Cpp[6;1Hp[141C[31mll[7;1H-[0m[141Caa[8;1Ht[141Coo[9;1Hn[141C))[10;1H[36m}[0m[141C[31mcc[11;1Ho[0m[141Coo[12;1Hp[141Cee[13;1Hl[141Cbb[14;1Ho[141Ccc[15;1Ht[141Cee[16;1H([141Coo[17;1Ho[141C==[18;1H=[141Caa[19;1Hr[141C..[20;1Hf[141C[31mkk[21;1Hb[0m[141C""[22;1H,[141C))[23;1H;[141C,,[24;1Ht[141Ckk[25;1Hb[141Cee[26;1Hc[141Cnn[27;1Hc[141Cii[28;1Hn[141C{{[29;1Ht[141C..[30;1Ho[141C))[31;1H}[141Css[32;1Ht[141C}}[33;1H,[141Cnn[34;1Ht[141Caa[35;1H([141Chh[36;1Ha[141Cff[37;1H([38;129H4[1;14H[34h[?25h[?25l(a,b)[128Ccc[2;1H)[141C(([3;1He[141C[31mss[4;1He[0m[141Crr[5;1Hi[141Cpp[6;1Hp[141C[31mll[7;1H-[0m[141Caa[8;1Ht[141Coo[9;1Hn[141C))[10;1H[36m}[0m[141C[31mcc[11;1Ho[0m[141Coo[12;1Hp[141Cee[13;1Hl[141Cbb[14;1Ho[141Ccc[15;1Ht[141Cee[16;1H([141Coo[17;1Ho[141C==[18;1H=[141Caa[19;1Hr[141C..[20;1Hf[141C[31mkk[21;1Hb[0m[141C""[22;1H,[141C))[23;1H;[141C,,[24;1Ht[141Ckk[25;1Hb[141Cee[26;1Hc[141Cnn[27;1Hc[141Cii[28;1Hn[141C{{[29;1Ht[141C..[30;1Ho[141C))[31;1H}[141Css[32;1Ht[141C}}[33;1H,[141Cnn[34;1Ht[141Caa[35;1H([141Chh[36;1Ha[141Cff[37;1H([38;129H5[1;15H[34h[?25h[?25l[38;129H6[1;16H[34h[?25h[?25l[38;129H7[1;17H[34h[?25h[?25l[38;129H8[1;18H[34h[?25h[?25l[38;129H9[1;19H[34h[?25h[?25l[38;128H20[1;20H[34h[?25h[?25l[38;129H1[1;21H[34h[?25h[?25l[38;129H2[1;22H[34h[?25h[?25l[38;129H3[1;23H[34h[?25h[?25l[38;129H4[1;24H[34h[?25h[?25l[38;129H5[1;25H[34h[?25h[?25l[38;129H6[1;26H[34h[?25h[?25l[38;129H7[1;27H[34h[?25h[?25l[38;129H8[1;28H[34h[?25h[?25l[38;129H9[1;29H[34h[?25h[?25l[38;128H30[1;30H[34h[?25h[?25l[38;129H1[1;31H[34h[?25h[?25l[38;129H2[1;32H[34h[?25h[?25l[38;129H3[1;33H[34h[?25h[?25l[38;129H4[1;34H[34h[?25h[?25l[38;129H5[1;35H[34h[?25h[?25l[38;129H6[1;36H[34h[?25h[?25l[38;129H7[1;37H[34h[?25h[?25l[38;129H8[1;38H[34h[?25h[?25l[38;129H9[1;39H[34h[?25h[?25l[38;128H40[1;40H[34h[?25h[?25l[38;129H1[1;41H[34h[?25h[?25l[38;129H2[1;42H[34h[?25h[?25l[38;129H3[1;43H[34h[?25h[?25l[38;129H4[1;44H[34h[?25h[?25l[38;129H5[1;45H[34h[?25h[?25l[38;129H6[1;46H[34h[?25h[?25l[38;129H7[1;47H[34h[?25h[?25l[38;129H8[1;48H[34h[?25h[?25l[38;129H9[1;49H[34h[?25h[?25l[38;128H50[1;50H[34h[?25h[?25l[38;129H1[1;51H[34h[?25h[?25l[38;129H2[1;52H[34h[?25h[?25l[38;129H3[1;53H[34h[?25h[?25l[38;129H4[1;54H[34h[?25h[?25l[38;129H5[1;55H[34h[?25h[?25l[38;129H6[1;56H[34h[?25h[?25l[38;129H7[1;57H[34h[?25h[?25l[38;129H8[1;58H[34h[?25h[?25l[38;129H9[1;59H[34h[?25h[?25l[38;128H60[1;60H[34h[?25h[?25l[1C[46m([0md,f,c[46m)[0m[75Ccc[2;1H)[141C(([3;1He[141C[31mss[4;1He[0m[141Crr[5;1Hi[141Cpp[6;1Hp[141C[31mll[7;1H-[0m[141Caa[8;1Ht[141Coo[9;1Hn[141C))[10;1H[36m}[0m[141C[31mcc[11;1Ho[0m[141Coo[12;1Hp[141Cee[13;1Hl[141Cbb[14;1Ho[141Ccc[15;1Ht[141Cee[16;1H([141Coo[17;1Ho[141C==[18;1H=[141Caa[19;1Hr[141C..[20;1Hf[141C[31mkk[21;1Hb[0m[141C""[22;1H,[141C))[23;1H;[141C,,[24;1Ht[141Ckk[25;1Hb[141Cee[26;1Hc[141Cnn[27;1Hc[141Cii[28;1Hn[141C{{[29;1Ht[141C..[30;1Ho[141C))[31;1H}[141Css[32;1Ht[141C}}[33;1H,[141Cnn[34;1Ht[141Caa[35;1H([141Chh[36;1Ha[141Cff[37;1H([38;129H1[1;61H[34h[?25h[?25l(d,f,c)[75Ccc[2;1H)[141C(([3;1He[141C[31mss[4;1He[0m[141Crr[5;1Hi[141Cpp[6;1Hp[141C[31mll[7;1H-[0m[141Caa[8;1Ht[141Coo[9;1Hn[141C))[10;1H[36m}[0m[141C[31mcc[11;1Ho[0m[141Coo[12;1Hp[141Cee[13;1Hl[141Cbb[14;1Ho[141Ccc[15;1Ht[141Cee[16;1H([141Coo[17;1Ho[141C==[18;1H=[141Caa[19;1Hr[141C..[20;1Hf[141C[31mkk[21;1Hb[0m[141C""[22;1H,[141C))[23;1H;[141C,,[24;1Ht[141Ckk[25;1Hb[141Cee[26;1Hc[141Cnn[27;1Hc[141Cii[28;1Hn[141C{{[29;1Ht[141C..[30;1Ho[141C))[31;1H}[141Css[32;1Ht[141C}}[33;1H,[141Cnn[34;1Ht[141Caa[35;1H([141Chh[36;1Ha[141Cff[37;1H([38;129H2[1;62H[34h[?25h[?25l[38;129H3[1;63H[34h[?25h[?25l[38;129H4[1;64H[34h[?25h[?25l[38;129H5[1;65H[34h[?25h[?25l[38;129H6[1;66H[34h[?25h[?25l[46m([0md,f,c[46m)[0m[75Ccc[2;1H)[141C(([3;1He[141C[31mss[4;1He[0m[141Crr[5;1Hi[141Cpp[6;1Hp[141C[31mll[7;1H-[0m[141Caa[8;1Ht[141Coo[9;1Hn[141C))[10;1H[36m}[0m[141C[31mcc[11;1Ho[0m[141Coo[12;1Hp[141Cee[13;1Hl[141Cbb[14;1Ho[141Ccc[15;1Ht[141Cee[16;1H([141Coo[17;1Ho[141C==[18;1H=[141Caa[19;1Hr[141C..[20;1Hf[141C[31mkk[21;1Hb[0m[141C""[22;1H,[141C))[23;1H;[141C,,[24;1Ht[141Ckk[25;1Hb[141Cee[26;1Hc[141Cnn[27;1Hc[141Cii[28;1Hn[141C{{[29;1Ht[141C..[30;1Ho[141C))[31;1H}[141Css[32;1Ht[141C}}[33;1H,[141Cnn[34;1Ht[141Caa[35;1H([141Chh[36;1Ha[141Cff[37;1H([38;129H7[1;67H[34h[?25h[?25l(d,f,c)[36m[46m{[0m[74Ccc[2;1H)[119C[36m[46m}[0m[21C(([3;1He[141C[31mss[4;1He[0m[141Crr[5;1Hi[141Cpp[6;1Hp[141C[31mll[7;1H-[0m[141Caa[8;1Ht[141Coo[9;1Hn[141C))[10;1H[36m}[0m[141C[31mcc[11;1Ho[0m[141Coo[12;1Hp[141Cee[13;1Hl[141Cbb[14;1Ho[141Ccc[15;1Ht[141Cee[16;1H([141Coo[17;1Ho[141C==[18;1H=[141Caa[19;1Hr[141C..[20;1Hf[141C[31mkk[21;1Hb[0m[141C""[22;1H,[141C))[23;1H;[141C,,[24;1Ht[141Ckk[25;1Hb[141Cee[26;1Hc[141Cnn[27;1Hc[141Cii[28;1Hn[141C{{[29;1Ht[141C..[30;1Ho[141C))[31;1H}[141Css[32;1Ht[141C}}[33;1H,[141Cnn[34;1Ht[141Caa[35;1H([141Chh[36;1Ha[141Cff[37;1H([38;129H8[1;68H[34h[?25h[?25l[36m{[0m[74Ccc[2;1H)[119C[36m}[0m[21C(([3;1He[141C[31mss[4;1He[0m[141Crr[5;1Hi[141Cpp[6;1Hp[141C[31mll[7;1H-[0m[141Caa[8;1Ht[141Coo[9;1Hn[141C))[10;1H[36m}[0m[141C[31mcc[11;1Ho[0m[141Coo[12;1Hp[141Cee[13;1Hl[141Cbb[14;1Ho[141Ccc[15;1Ht[141Cee[16;1H([141Coo[17;1Ho[141C==[18;1H=[141Caa[19;1Hr[141C..[20;1Hf[141C[31mkk[21;1Hb[0m[141C""[22;1H,[141C))[23;1H;[141C,,[24;1Ht[141Ckk[25;1Hb[141Cee[26;1Hc[141Cnn[27;1Hc[141Cii[28;1Hn[141C{{[29;1Ht[141C..[30;1Ho[141C))[31;1H}[141Css[32;1Ht[141C}}[33;1H,[141Cnn[34;1Ht[141Caa[35;1H([141Chh[36;1Ha[141Cff[37;1H([38;129H9[1;69H[34h[?25h[?25l[38;128H70[1;70H[34h[?25h[?25l[38;129H1[1;71H[34h[?25h[?25l[38;129H2[1;72H[34h[?25h[?25l[38;129H3[1;73H[34h[?25h[?25l[38;129H4[1;74H[34h[?25h[?25l[38;129H5[1;75H[34h[?25h[?25l[38;129H6[1;76H[34h[?25h[?25l[38;129H7[1;77H[34h[?25h[?25l[38;129H8[1;78H[34h[?25h[?25l[38;129H9[1;79H[34h[?25h[?25l[38;128H80[1;80H[34h[?25h[?25ld[46m([10C)[0m[50Ccc[2;1H)[141C(([3;1He[141C[31mss[4;1He[0m[141Crr[5;1Hi[141Cpp[6;1Hp[141C[31mll[7;1H-[0m[141Caa[8;1Ht[141Coo[9;1Hn[141C))[10;1H[36m}[0m[141C[31mcc[11;1Ho[0m[141Coo[12;1Hp[141Cee[13;1Hl[141Cbb[14;1Ho[141Ccc[15;1Ht[141Cee[16;1H([141Coo[17;1Ho[141C==[18;1H=[141Caa[19;1Hr[141C..[20;1Hf[141C[31mkk[21;1Hb[0m[141C""[22;1H,[141C))[23;1H;[141C,,[24;1Ht[141Ckk[25;1Hb[141Cee[26;1Hc[141Cnn[27;1Hc[141Cii[28;1Hn[141C{{[29;1Ht[141C..[30;1Ho[141C))[31;1H}[141Css[32;1Ht[141C}}[33;1H,[141Cnn[34;1Ht[141Caa[35;1H([141Chh[36;1Ha[141Cff[37;1H([38;129H1[1;81H[34h[?25h[?25l([10C)[50Ccc[2;1H)[141C(([3;1He[141C[31mss[4;1He[0m[141Crr[5;1Hi[141Cpp[6;1Hp[141C[31mll[7;1H-[0m[141Caa[8;1Ht[141Coo[9;1Hn[141C))[10;1H[36m}[0m[141C[31mcc[11;1Ho[0m[141Coo[12;1Hp[141Cee[13;1Hl[141Cbb[14;1Ho[141Ccc[15;1Ht[141Cee[16;1H([141Coo[17;1Ho[141C==[18;1H=[141Caa[19;1Hr[141C..[20;1Hf[141C[31mkk[21;1Hb[0m[141C""[22;1H,[141C))[23;1H;[141C,,[24;1Ht[141Ckk[25;1Hb[141Cee[26;1Hc[141Cnn[27;1Hc[141Cii[28;1Hn[141C{{[29;1Ht[141C..[30;1Ho[141C))[31;1H}[141Css[32;1Ht[141C}}[33;1H,[141Cnn[34;1Ht[141Caa[35;1H([141Chh[36;1Ha[141Cff[37;1H([38;129H2[1;82H[34h[?25h[?25l[38;129H3[1;83H[34h[?25h[?25l[38;129H4[1;84H[34h[?25h[?25l[38;129H5[1;85H[34h[?25h[?25l[38;129H6[1;86H[34h[?25h[?25l[38;129H7[1;87H[34h[?25h[?25l[38;129H8[1;88H[34h[?25h[?25l[38;129H9[1;89H[34h[?25h[?25l[38;128H90[1;90H[34h[?25h[?25l[38;129H1[1;91H[34h[?25h[?25l[1;81H[46m([10C)[0m[50Ccc[2;1H)[141C(([3;1He[141C[31mss[4;1He[0m[141Crr[5;1Hi[141Cpp[6;1Hp[141C[31mll[7;1H-[0m[141Caa[8;1Ht[141Coo[9;1Hn[141C))[10;1H[36m}[0m[141C[31mcc[11;1Ho[0m[141Coo[12;1Hp[141Cee[13;1Hl[141Cbb[14;1Ho[141Ccc[15;1Ht[141Cee[16;1H([141Coo[17;1Ho[141C==[18;1H=[141Caa[19;1Hr[141C..[20;1Hf[141C[31mkk[21;1Hb[0m[141C""[22;1H,[141C))[23;1H;[141C,,[24;1Ht[141Ckk[25;1Hb[141Cee[26;1Hc[141Cnn[27;1Hc[141Cii[28;1Hn[141C{{[29;1Ht[141C..[30;1Ho[141C))[31;1H}[141Css[32;1Ht[141C}}[33;1H,[141Cnn[34;1Ht[141Caa[35;1H([141Chh[36;1Ha[141Cff[37;1H([38;129H2[1;92H[34h[?25h[?25l[1;81H([10C)[50Ccc[2;1H)[141C(([3;1He[141C[31mss[4;1He[0m[141Crr[5;1Hi[141Cpp[6;1Hp[141C[31mll[7;1H-[0m[141Caa[8;1Ht[141Coo[9;1Hn[141C))[10;1H[36m}[0m[141C[31mcc[11;1Ho[0m[141Coo[12;1Hp[141Cee[13;1Hl[141Cbb[14;1Ho[141Ccc[15;1Ht[141Cee[16;1H([141Coo[17;1Ho[141C==[18;1H=[141Caa[19;1Hr[141C..[20;1Hf[141C[31mkk[21;1Hb[0m[141C""[22;1H,[141C))[23;1H;[141C,,[24;1Ht[141Ckk[25;1Hb[141Cee[26;1Hc[141Cnn[27;1Hc[141Cii[28;1Hn[141C{{[29;1Ht[141C..[30;1Ho[141C))[31;1H}[141Css[32;1Ht[141C}}[33;1H,[141Cnn[34;1Ht[141Caa[35;1H([141Chh[36;1Ha[141Cff[37;1H([38;129H3[1;93H[34h[?25h[?25l[38;129H4[1;94H[34h[?25h[?25l[38;129H5[1;95H[34h[?25h[?25l[1C[46m([8C)[0m[37Ccc[2;1H)[141C(([3;1He[141C[31mss[4;1He[0m[141Crr[5;1Hi[141Cpp[6;1Hp[141C[31mll[7;1H-[0m[141Caa[8;1Ht[141Coo[9;1Hn[141C))[10;1H[36m}[0m[141C[31mcc[11;1Ho[0m[141Coo[12;1Hp[141Cee[13;1Hl[141Cbb[14;1Ho[141Ccc[15;1Ht[141Cee[16;1H([141Coo[17;1Ho[141C==[18;1H=[141Caa[19;1Hr[141C..[20;1Hf[141C[31mkk[21;1Hb[0m[141C""[22;1H,[141C))[23;1H;[141C,,[24;1Ht[141Ckk[25;1Hb[141Cee[26;1Hc[141Cnn[27;1Hc[141Cii[28;1Hn[141C{{[29;1Ht[141C..[30;1Ho[141C))[31;1H}[141Css[32;1Ht[141C}}[33;1H,[141Cnn[34;1Ht[141Caa[35;1H([141Chh[36;1Ha[141Cff[37;1H([38;129H6[1;96H[34h[?25h[?25l([8C)[37Ccc[2;1H)[141C(([3;1He[141C[31mss[4;1He[0m[141Crr[5;1Hi[141Cpp[6;1Hp[141C[31mll[7;1H-[0m[141Caa[8;1Ht[141Coo[9;1Hn[141C))[10;1H[36m}[0m[141C[31mcc[11;1Ho[0m[141Coo[12;1Hp[141Cee[13;1Hl[141Cbb[14;1Ho[141Ccc[15;1Ht[141Cee[16;1H([141Coo[17;1Ho[141C==[18;1H=[141Caa[19;1Hr[141C..[20;1Hf[141C[31mkk[21;1Hb[0m[141C""[22;1H,[141C))[23;1H;[141C,,[24;1Ht[141Ckk[25;1Hb[141Cee[26;1Hc[141Cnn[27;1Hc[141Cii[28;1Hn[141C{{[29;1Ht[141C..[30;1Ho[141C))[31;1H}[141Css[32;1Ht[141C}}[33;1H,[141Cnn[34;1Ht[141Caa[35;1H([141Chh[36;1Ha[141Cff[37;1H([38;129H7[1;97H[34h[?25h[?25l[38;129H8[1;98H[34h[?25h[?25l[38;129H9[1;99H[34h[?25h[?25l[38;128H100[1;100H[34h[?25h[?25l[38;130H1[1;101H[34h[?25h[?25l[38;130H2[1;102H[34h[?25h[?25l[38;130H3[1;103H[34h[?25h[?25l[38;130H4[1;104H[34h[?25h[?25l[1;96H[46m([8C)[0m[37Ccc[2;1H)[141C(([3;1He[141C[31mss[4;1He[0m[141Crr[5;1Hi[141Cpp[6;1Hp[141C[31mll[7;1H-[0m[141Caa[8;1Ht[141Coo[9;1Hn[141C))[10;1H[36m}[0m[141C[31mcc[11;1Ho[0m[141Coo[12;1Hp[141Cee[13;1Hl[141Cbb[14;1Ho[141Ccc[15;1Ht[141Cee[16;1H([141Coo[17;1Ho[141C==[18;1H=[141Caa[19;1Hr[141C..[20;1Hf[141C[31mkk[21;1Hb[0m[141C""[22;1H,[141C))[23;1H;[141C,,[24;1Ht[141Ckk[25;1Hb[141Cee[26;1Hc[141Cnn[27;1Hc[141Cii[28;1Hn[141C{{[29;1Ht[141C..[30;1Ho[141C))[31;1H}[141Css[32;1Ht[141C}}[33;1H,[141Cnn[34;1Ht[141Caa[35;1H([141Chh[36;1Ha[141Cff[37;1H([38;130H5[1;105H[34h[?25h[?25l[1;96H([8C)[36m[46m{[0m[36Ccc[2;1H)[78C[36m[46m}[0m[62C(([3;1He[141C[31mss[4;1He[0m[141Crr[5;1Hi[141Cpp[6;1Hp[141C[31mll[7;1H-[0m[141Caa[8;1Ht[141Coo[9;1Hn[141C))[10;1H[36m}[0m[141C[31mcc[11;1Ho[0m[141Coo[12;1Hp[141Cee[13;1Hl[141Cbb[14;1Ho[141Ccc[15;1Ht[141Cee[16;1H([141Coo[17;1Ho[141C==[18;1H=[141Caa[19;1Hr[141C..[20;1Hf[141C[31mkk[21;1Hb[0m[141C""[22;1H,[141C))[23;1H;[141C,,[24;1Ht[141Ckk[25;1Hb[141Cee[26;1Hc[141Cnn[27;1Hc[141Cii[28;1Hn[141C{{[29;1Ht[141C..[30;1Ho[141C))[31;1H}[141Css[32;1Ht[141C}}[33;1H,[141Cnn[34;1Ht[141Caa[35;1H([141Chh[36;1Ha[141Cff[37;1H([38;130H6[1;106H[34h[?25h[?25l[36m{[0m[36Ccc[2;1H)[78C[36m}[0m[62C(([3;1He[141C[31mss[4;1He[0m[141Crr[5;1Hi[141Cpp[6;1Hp[141C[31mll[7;1H-[0m[141Caa[8;1Ht[141Coo[9;1Hn[141C))[10;1H[36m}[0m[141C[31mcc[11;1Ho[0m[141Coo[12;1Hp[141Cee[13;1Hl[141Cbb[14;1Ho[141Ccc[15;1Ht[141Cee[16;1H([141Coo[17;1Ho[141C==[18;1H=[141Caa[19;1Hr[141C..[20;1Hf[141C[31mkk[21;1Hb[0m[141C""[22;1H,[141C))[23;1H;[141C,,[24;1Ht[141Ckk[25;1Hb[141Cee[26;1Hc[141Cnn[27;1Hc[141Cii[28;1Hn[141C{{[29;1Ht[141C..[30;1Ho[141C))[31;1H}[141Css[32;1Ht[141C}}[33;1H,[141Cnn[34;1Ht[141Caa[35;1H([141Chh[36;1Ha[141Cff[37;1H([38;130H7[1;107H[34h[?25h[?25l[38;130H8[1;108H[34h[?25h[?25l[1C[46m([0m[33Ccc[2;1H)[46m)[0m[140C(([3;1He[141C[31mss[4;1He[0m[141Crr[5;1Hi[141Cpp[6;1Hp[141C[31mll[7;1H-[0m[141Caa[8;1Ht[141Coo[9;1Hn[141C))[10;1H[36m}[0m[141C[31mcc[11;1Ho[0m[141Coo[12;1Hp[141Cee[13;1Hl[141Cbb[14;1Ho[141Ccc[15;1Ht[141Cee[16;1H([141Coo[17;1Ho[141C==[18;1H=[141Caa[19;1Hr[141C..[20;1Hf[141C[31mkk[21;1Hb[0m[141C""[22;1H,[141C))[23;1H;[141C,,[24;1Ht[141Ckk[25;1Hb[141Cee[26;1Hc[141Cnn[27;1Hc[141Cii[28;1Hn[141C{{[29;1Ht[141C..[30;1Ho[141C))[31;1H}[141Css[32;1Ht[141C}}[33;1H,[141Cnn[34;1Ht[141Caa[35;1H([141Chh[36;1Ha[141Cff[37;1H([38;130H9[1;109H[34h[?25h[?25l([46m([0mb==c[46m)[0m[27Ccc[2;1H))[140C(([3;1He[141C[31mss[4;1He[0m[141Crr[5;1Hi[141Cpp[6;1Hp[141C[31mll[7;1H-[0m[141Caa[8;1Ht[141Coo[9;1Hn[141C))[10;1H[36m}[0m[141C[31mcc[11;1Ho[0m[141Coo[12;1Hp[141Cee[13;1Hl[141Cbb[14;1Ho[141Ccc[15;1Ht[141Cee[16;1H([141Coo[17;1Ho[141C==[18;1H=[141Caa[19;1Hr[141C..[20;1Hf[141C[31mkk[21;1Hb[0m[141C""[22;1H,[141C))[23;1H;[141C,,[24;1Ht[141Ckk[25;1Hb[141Cee[26;1Hc[141Cnn[27;1Hc[141Cii[28;1Hn[141C{{[29;1Ht[141C..[30;1Ho[141C))[31;1H}[141Css[32;1Ht[141C}}[33;1H,[141Cnn[34;1Ht[141Caa[35;1H([141Chh[36;1Ha[141Cff[37;1H([38;129H10[1;110H[34h[?25h[?25l(b==c)[27Ccc[2;1H)[141C(([3;1He[141C[31mss[4;1He[0m[141Crr[5;1Hi[141Cpp[6;1Hp[141C[31mll[7;1H-[0m[141Caa[8;1Ht[141Coo[9;1Hn[141C))[10;1H[36m}[0m[141C[31mcc[11;1Ho[0m[141Coo[12;1Hp[141Cee[13;1Hl[141Cbb[14;1Ho[141Ccc[15;1Ht[141Cee[16;1H([141Coo[17;1Ho[141C==[18;1H=[141Caa[19;1Hr[141C..[20;1Hf[141C[31mkk[21;1Hb[0m[141C""[22;1H,[141C))[23;1H;[141C,,[24;1Ht[141Ckk[25;1Hb[141Cee[26;1Hc[141Cnn[27;1Hc[141Cii[28;1Hn[141C{{[29;1Ht[141C..[30;1Ho[141C))[31;1H}[141Css[32;1Ht[141C}}[33;1H,[141Cnn[34;1Ht[141Caa[35;1H([141Chh[36;1Ha[141Cff[37;1H([38;130H1[1;111H[34h[?25h[?25l[38;130H2[1;112H[34h[?25h[?25l[38;130H3[1;113H[34h[?25h[?25l[38;130H4[1;114H[34h[?25h[?25l[46m([0mb==c[46m)[0m[27Ccc[2;1H)[141C(([3;1He[141C[31mss[4;1He[0m[141Crr[5;1Hi[141Cpp[6;1Hp[141C[31mll[7;1H-[0m[141Caa[8;1Ht[141Coo[9;1Hn[141C))[10;1H[36m}[0m[141C[31mcc[11;1Ho[0m[141Coo[12;1Hp[141Cee[13;1Hl[141Cbb[14;1Ho[141Ccc[15;1Ht[141Cee[16;1H([141Coo[17;1Ho[141C==[18;1H=[141Caa[19;1Hr[141C..[20;1Hf[141C[31mkk[21;1Hb[0m[141C""[22;1H,[141C))[23;1H;[141C,,[24;1Ht[141Ckk[25;1Hb[141Cee[26;1Hc[141Cnn[27;1Hc[141Cii[28;1Hn[141C{{[29;1Ht[141C..[30;1Ho[141C))[31;1H}[141Css[32;1Ht[141C}}[33;1H,[141Cnn[34;1Ht[141Caa[35;1H([141Chh[36;1Ha[141Cff[37;1H([38;130H5[1;115H[34h[?25h[?25l(b==c)[27Ccc[2;1H)[141C(([3;1He[141C[31mss[4;1He[0m[141Crr[5;1Hi[141Cpp[6;1Hp[141C[31mll[7;1H-[0m[141Caa[8;1Ht[141Coo[9;1Hn[141C))[10;1H[36m}[0m[141C[31mcc[11;1Ho[0m[141Coo[12;1Hp[141Cee[13;1Hl[141Cbb[14;1Ho[141Ccc[15;1Ht[141Cee[16;1H([141Coo[17;1Ho[141C==[18;1H=[141Caa[19;1Hr[141C..[20;1Hf[141C[31mkk[21;1Hb[0m[141C""[22;1H,[141C))[23;1H;[141C,,[24;1Ht[141Ckk[25;1Hb[141Cee[26;1Hc[141Cnn[27;1Hc[141Cii[28;1Hn[141C{{[29;1Ht[141C..[30;1Ho[141C))[31;1H}[141Css[32;1Ht[141C}}[33;1H,[141Cnn[34;1Ht[141Caa[35;1H([141Chh[36;1Ha[141Cff[37;1H([38;130H6[1;116H[34h[?25h[?25l[38;130H7[1;117H[34h[?25h[?25l|[46m([0m[24Ccc[2;1H[46m)[0m[141C(([3;1He[141C[31mss[4;1He[0m[141Crr[5;1Hi[141Cpp[6;1Hp[141C[31mll[7;1H-[0m[141Caa[8;1Ht[141Coo[9;1Hn[141C))[10;1H[36m}[0m[141C[31mcc[11;1Ho[0m[141Coo[12;1Hp[141Cee[13;1Hl[141Cbb[14;1Ho[141Ccc[15;1Ht[141Cee[16;1H([141Coo[17;1Ho[141C==[18;1H=[141Caa[19;1Hr[141C..[20;1Hf[141C[31mkk[21;1Hb[0m[141C""[22;1H,[141C))[23;1H;[141C,,[24;1Ht[141Ckk[25;1Hb[141Cee[26;1Hc[141Cnn[27;1Hc[141Cii[28;1Hn[141C{{[29;1Ht[141C..[30;1Ho[141C))[31;1H}[141Css[32;1Ht[141C}}[33;1H,[141Cnn[34;1Ht[141Caa[35;1H([141Chh[36;1Ha[141Cff[37;1H([38;130H8[1;118H[34h[?25h[?25l([24Ccc[2;1H)[141C(([3;1He[141C[31mss[4;1He[0m[141Crr[5;1Hi[141Cpp[6;1Hp[141C[31mll[7;1H-[0m[141Caa[8;1Ht[141Coo[9;1Hn[141C))[10;1H[36m}[0m[141C[31mcc[11;1Ho[0m[141Coo[12;1Hp[141Cee[13;1Hl[141Cbb[14;1Ho[141Ccc[15;1Ht[141Cee[16;1H([141Coo[17;1Ho[141C==[18;1H=[141Caa[19;1Hr[141C..[20;1Hf[141C[31mkk[21;1Hb[0m[141C""[22;1H,[141C))[23;1H;[141C,,[24;1Ht[141Ckk[25;1Hb[141Cee[26;1Hc[141Cnn[27;1Hc[141Cii[28;1Hn[141C{{[29;1Ht[141C..[30;1Ho[141C))[31;1H}[141Css[32;1Ht[141C}}[33;1H,[141Cnn[34;1Ht[141Caa[35;1H([141Chh[36;1Ha[141Cff[37;1H([38;130H9[1;119H[34h[?25h[?25l[38;129H20[1;120H[34h[?25h[?25l[38;130H1[1;121H[34h[?25h[?25l[38;130H2[1;122H[34h[?25h[?25l[38;130H3[1;123H[34h[?25h[?25l[38;130H4[1;124H[34h[?25h[?25l[38;130H5[1;125H[34h[?25h[?25l[38;130H6[1;126H[34h[?25h[?25l[38;130H7[1;127H[34h[?25h[?25l[38;130H8[1;128H[34h[?25h[?25ln[46m([4C)[0m[8Ccc[2;1H)[141C(([3;1He[141C[31mss[4;1He[0m[141Crr[5;1Hi[141Cpp[6;1Hp[141C[31mll[7;1H-[0m[141Caa[8;1Ht[141Coo[9;1Hn[141C))[10;1H[36m}[0m[141C[31mcc[11;1Ho[0m[141Coo[12;1Hp[141Cee[13;1Hl[141Cbb[14;1Ho[141Ccc[15;1Ht[141Cee[16;1H([141Coo[17;1Ho[141C==[18;1H=[141Caa[19;1Hr[141C..[20;1Hf[141C[31mkk[21;1Hb[0m[141C""[22;1H,[141C))[23;1H;[141C,,[24;1Ht[141Ckk[25;1Hb[141Cee[26;1Hc[141Cnn[27;1Hc[141Cii[28;1Hn[141C{{[29;1Ht[141C..[30;1Ho[141C))[31;1H}[141Css[32;1Ht[141C}}[33;1H,[141Cnn[34;1Ht[141Caa[35;1H([141Chh[36;1Ha[141Cff[37;1H([38;130H9[1;129H[34h[?25h[?25l([4C)[8Ccc[2;1H)[141C(([3;1He[141C[31mss[4;1He[0m[141Crr[5;1Hi[141Cpp[6;1Hp[141C[31mll[7;1H-[0m[141Caa[8;1Ht[141Coo[9;1Hn[141C))[10;1H[36m}[0m[141C[31mcc[11;1Ho[0m[141Coo[12;1Hp[141Cee[13;1Hl[141Cbb[14;1Ho[141Ccc[15;1Ht[141Cee[16;1H([141Coo[17;1Ho[141C==[18;1H=[141Caa[19;1Hr[141C..[20;1Hf[141C[31mkk[21;1Hb[0m[141C""[22;1H,[141C))[23;1H;[141C,,[24;1Ht[141Ckk[25;1Hb[141Cee[26;1Hc[141Cnn[27;1Hc[141Cii[28;1Hn[141C{{[29;1Ht[141C..[30;1Ho[141C))[31;1H}[141Css[32;1Ht[141C}}[33;1H,[141Cnn[34;1Ht[141Caa[35;1H([141Chh[36;1Ha[141Cff[37;1H([38;129H30[1;130H[34h[?25h[?25l[38;130H1[1;131H[34h[?25h[?25l[38;130H2[1;132H[34h[?25h[?25l[38;130H3[1;133H[34h[?25h[?25l[46m([4C)[0m[8Ccc[2;1H)[141C(([3;1He[141C[31mss[4;1He[0m[141Crr[5;1Hi[141Cpp[6;1Hp[141C[31mll[7;1H-[0m[141Caa[8;1Ht[141Coo[9;1Hn[141C))[10;1H[36m}[0m[141C[31mcc[11;1Ho[0m[141Coo[12;1Hp[141Cee[13;1Hl[141Cbb[14;1Ho[141Ccc[15;1Ht[141Cee[16;1H([141Coo[17;1Ho[141C==[18;1H=[141Caa[19;1Hr[141C..[20;1Hf[141C[31mkk[21;1Hb[0m[141C""[22;1H,[141C))[23;1H;[141C,,[24;1Ht[141Ckk[25;1Hb[141Cee[26;1Hc[141Cnn[27;1Hc[141Cii[28;1Hn[141C{{[29;1Ht[141C..[30;1Ho[141C))[31;1H}[141Css[32;1Ht[141C}}[33;1H,[141Cnn[34;1Ht[141Caa[35;1H([141Chh[36;1Ha[141Cff[37;1H([38;130H4[1;134H[34h[?25h[?25l([4C)[8Ccc[2;1H)[141C(([3;1He[141C[31mss[4;1He[0m[141Crr[5;1Hi[141Cpp[6;1Hp[141C[31mll[7;1H-[0m[141Caa[8;1Ht[141Coo[9;1Hn[141C))[10;1H[36m}[0m[141C[31mcc[11;1Ho[0m[141Coo[12;1Hp[141Cee[13;1Hl[141Cbb[14;1Ho[141Ccc[15;1Ht[141Cee[16;1H([141Coo[17;1Ho[141C==[18;1H=[141Caa[19;1Hr[141C..[20;1Hf[141C[31mkk[21;1Hb[0m[141C""[22;1H,[141C))[23;1H;[141C,,[24;1Ht[141Ckk[25;1Hb[141Cee[26;1Hc[141Cnn[27;1Hc[141Cii[28;1Hn[141C{{[29;1Ht[141C..[30;1Ho[141C))[31;1H}[141Css[32;1Ht[141C}}[33;1H,[141Cnn[34;1Ht[141Caa[35;1H([141Chh[36;1Ha[141Cff[37;1H([38;130H5[1;135H[34h[?25h[?25l[38;130H6[1;136H[34h[?25h[?25l[38;130H7[1;137H[34h[?25h[?25l[38;130H8[1;138H[34h[?25h[?25l[38;130H9[1;139H[34h[?25h[?25l[38;129H40[1;140H[34h[?25h[?25l[38;130H1[1;141H[34h[?25h[?25l[38;130H2[1;142H[34h[?25h[?25l[38;130H3[1;143H[34h[?25h[?25l[1;118H[46m([0m[24Ccc[2;1H[46m)[0m[141C(([3;1He[141C[31mss[4;1He[0m[141Crr[5;1Hi[141Cpp[6;1Hp[141C[31mll[7;1H-[0m[141Caa[8;1Ht[141Coo[9;1Hn[141C))[10;1H[36m}[0m[141C[31mcc[11;1Ho[0m[141Coo[12;1Hp[141Cee[13;1Hl[141Cbb[14;1Ho[141Ccc[15;1Ht[141Cee[16;1H([141Coo[17;1Ho[141C==[18;1H=[141Caa[19;1Hr[141C..[20;1Hf[141C[31mkk[21;1Hb[0m[141C""[22;1H,[141C))[23;1H;[141C,,[24;1Ht[141Ckk[25;1Hb[141Cee[26;1Hc[141Cnn[27;1Hc[141Cii[28;1Hn[141C{{[29;1Ht[141C..[30;1Ho[141C))[31;1H}[141Css[32;1Ht[141C}}[33;1H,[141Cnn[34;1Ht[141Caa[35;1H([141Chh[36;1Ha[141Cff[37;1H([38;130H4[2;1H[34h[?25h[?25l[1;109H[46m([0m[8C([24Ccc[2;1H)[46m)[0m[140C(([3;1He[141C[31mss[4;1He[0m[141Crr[5;1Hi[141Cpp[6;1Hp[141C[31mll[7;1H-[0m[141Caa[8;1Ht[141Coo[9;1Hn[141C))[10;1H[36m}[0m[141C[31mcc[11;1Ho[0m[141Coo[12;1Hp[141Cee[13;1Hl[141Cbb[14;1Ho[141Ccc[15;1Ht[141Cee[16;1H([141Coo[17;1Ho[141C==[18;1H=[141Caa[19;1Hr[141C..[20;1Hf[141C[31mkk[21;1Hb[0m[141C""[22;1H,[141C))[23;1H;[141C,,[24;1Ht[141Ckk[25;1Hb[141Cee[26;1Hc[141Cnn[27;1Hc[141Cii[28;1Hn[141C{{[29;1Ht[141C..[30;1Ho[141C))[31;1H}[141Css[32;1Ht[141C}}[33;1H,[141Cnn[34;1Ht[141Caa[35;1H([141Chh[36;1Ha[141Cff[37;1H([38;130H5[2;2H[34h[?25h[?25l[1;109H([33Ccc[2;1H))[36m[46m{[11C}[0m[127C(([3;1He[141C[31mss[4;1He[0m[141Crr[5;1Hi[141Cpp[6;1Hp[141C[31mll[7;1H-[0m[141Caa[8;1Ht[141Coo[9;1Hn[141C))[10;1H[36m}[0m[141C[31mcc[11;1Ho[0m[141Coo[12;1Hp[141Cee[13;1Hl[141Cbb[14;1Ho[141Ccc[15;1Ht[141Cee[16;1H([141Coo[17;1Ho[141C==[18;1H=[141Caa[19;1Hr[141C..[20;1Hf[141C[31mkk[21;1Hb[0m[141C""[22;1H,[141C))[23;1H;[141C,,[24;1Ht[141Ckk[25;1Hb[141Cee[26;1Hc[141Cnn[27;1Hc[141Cii[28;1Hn[141C{{[29;1Ht[141C..[30;1Ho[141C))[31;1H}[141Css[32;1Ht[141C}}[33;1H,[141Cnn[34;1Ht[141Caa[35;1H([141Chh[36;1Ha[141Cff[37;1H([38;130H6[2;3H[34h[?25h[?25l[36m{[11C}[0m[127C(([3;1He[141C[31mss[4;1He[0m[141Crr[5;1Hi[141Cpp[6;1Hp[141C[31mll[7;1H-[0m[141Caa[8;1Ht[141Coo[9;1Hn[141C))[10;1H[36m}[0m[141C[31mcc[11;1Ho[0m[141Coo[12;1Hp[141Cee[13;1Hl[141Cbb[14;1Ho[141Ccc[15;1Ht[141Cee[16;1H([141Coo[17;1Ho[141C==[18;1H=[141Caa[19;1Hr[141C..[20;1Hf[141C[31mkk[21;1Hb[0m[141C""[22;1H,[141C))[23;1H;[141C,,[24;1Ht[141Ckk[25;1Hb[141Cee[26;1Hc[141Cnn[27;1Hc[141Cii[28;1Hn[141C{{[29;1Ht[141C..[30;1Ho[141C))[31;1H}[141Css[32;1Ht[141C}}[33;1H,[141Cnn[34;1Ht[141Caa[35;1H([141Chh[36;1Ha[141Cff[37;1H([38;130H7[2;4H[34h[?25h[?25l[38;130H8[2;5H[34h[?25h[?25l[38;130H9[2;6H[34h[?25h[?25l[38;129H50[2;7H[34h[?25h[?25l[38;130H1[2;8H[34h[?25h[?25l[38;130H2[2;9H[34h[?25h[?25l[38;130H3[2;10H[34h[?25h[?25l[38;130H4[2;11H[34h[?25h[?25ld[46m([0md[46m)[0m[128C(([3;1He[141C[31mss[4;1He[0m[141Crr[5;1Hi[141Cpp[6;1Hp[141C[31mll[7;1H-[0m[141Caa[8;1Ht[141Coo[9;1Hn[141C))[10;1H[36m}[0m[141C[31mcc[11;1Ho[0m[141Coo[12;1Hp[141Cee[13;1Hl[141Cbb[14;1Ho[141Ccc[15;1Ht[141Cee[16;1H([141Coo[17;1Ho[141C==[18;1H=[141Caa[19;1Hr[141C..[20;1Hf[141C[31mkk[21;1Hb[0m[141C""[22;1H,[141C))[23;1H;[141C,,[24;1Ht[141Ckk[25;1Hb[141Cee[26;1Hc[141Cnn[27;1Hc[141Cii[28;1Hn[141C{{[29;1Ht[141C..[30;1Ho[141C))[31;1H}[141Css[32;1Ht[141C}}[33;1H,[141Cnn[34;1Ht[141Caa[35;1H([141Chh[36;1Ha[141Cff[37;1H([38;130H5[2;12H[34h[?25h[?25l(d)[128C(([3;1He[141C[31mss[4;1He[0m[141Crr[5;1Hi[141Cpp[6;1Hp[141C[31mll[7;1H-[0m[141Caa[8;1Ht[141Coo[9;1Hn[141C))[10;1H[36m}[0m[141C[31mcc[11;1Ho[0m[141Coo[12;1Hp[141Cee[13;1Hl[141Cbb[14;1Ho[141Ccc[15;1Ht[141Cee[16;1H([141Coo[17;1Ho[141C==[18;1H=[141Caa[19;1Hr[141C..[20;1Hf[141C[31mkk[21;1Hb[0m[141C""[22;1H,[141C))[23;1H;[141C,,[24;1Ht[141Ckk[25;1Hb[141Cee[26;1Hc[141Cnn[27;1Hc[141Cii[28;1Hn[141C{{[29;1Ht[141C..[30;1Ho[141C))[31;1H}[141Css[32;1Ht[141C}}[33;1H,[141Cnn[34;1Ht[141Caa[35;1H([141Chh[36;1Ha[141Cff[37;1H([38;130H6[2;13H[34h[?25h[?25l[46m([0md[46m)[0m[128C(([3;1He[141C[31mss[4;1He[0m[141Crr[5;1Hi[141Cpp[6;1Hp[141C[31mll[7;1H-[0m[141Caa[8;1Ht[141Coo[9;1Hn[141C))[10;1H[36m}[0m[141C[31mcc[11;1Ho[0m[141Coo[12;1Hp[141Cee[13;1Hl[141Cbb[14;1Ho[141Ccc[15;1Ht[141Cee[16;1H([141Coo[17;1Ho[141C==[18;1H=[141Caa[19;1Hr[141C..[20;1Hf[141C[31mkk[21;1Hb[0m[141C""[22;1H,[141C))[23;1H;[141C,,[24;1Ht[141Ckk[25;1Hb[141Cee[26;1Hc[141Cnn[27;1Hc[141Cii[28;1Hn[141C{{[29;1Ht[141C..[30;1Ho[141C))[31;1H}[141Css[32;1Ht[141C}}[33;1H,[141Cnn[34;1Ht[141Caa[35;1H([141Chh[36;1Ha[141Cff[37;1H([38;130H7[2;14H[34h[?25h[?25l))[36m[46m{[0m[8C(d)[36m[46m}[0m[127C(([3;1He[141C[31mss[4;1He[0m[141Crr[5;1Hi[141Cpp[6;1Hp[141C[31mll[7;1H-[0m[141Caa[8;1Ht[141Coo[9;1Hn[141C))[10;1H[36m}[0m[141C[31mcc[11;1Ho[0m[141Coo[12;1Hp[141Cee[13;1Hl[141Cbb[14;1Ho[141Ccc[15;1Ht[141Cee[16;1H([141Coo[17;1Ho[141C==[18;1H=[141Caa[19;1Hr[141C..[20;1Hf[141C[31mkk[21;1Hb[0m[141C""[22;1H,[141C))[23;1H;[141C,,[24;1Ht[141Ckk[25;1Hb[141Cee[26;1Hc[141Cnn[27;1Hc[141Cii[28;1Hn[141C{{[29;1Ht[141C..[30;1Ho[141C))[31;1H}[141Css[32;1Ht[141C}}[33;1H,[141Cnn[34;1Ht[141Caa[35;1H([141Chh[36;1Ha[141Cff[37;1H([38;130H8[2;15H[34h[?25h[?25l))[36m{[11C}[0m[127C(([3;1He[141C[31mss[4;1He[0m[141Crr[5;1Hi[141Cpp[6;1Hp[141C[31mll[7;1H-[0m[141Caa[8;1Ht[141Coo[9;1Hn[141C))[10;1H[36m}[0m[141C[31mcc[11;1Ho[0m[141Coo[12;1Hp[141Cee[13;1Hl[141Cbb[14;1Ho[141Ccc[15;1Ht[141Cee[16;1H([141Coo[17;1Ho[141C==[18;1H=[141Caa[19;1Hr[141C..[20;1Hf[141C[31mkk[21;1Hb[0m[141C""[22;1H,[141C))[23;1H;[141C,,[24;1Ht[141Ckk[25;1Hb[141Cee[26;1Hc[141Cnn[27;1Hc[141Cii[28;1Hn[141C{{[29;1Ht[141C..[30;1Ho[141C))[31;1H}[141Css[32;1Ht[141C}}[33;1H,[141Cnn[34;1Ht[141Caa[35;1H([141Chh[36;1Ha[141Cff[37;1H([38;130H9[2;16H[34h[?25h[?25l[38;129H60[2;17H[34h[?25h[?25l[38;130H1[2;18H[34h[?25h[?25l[38;1H[K[38;1H:[34h[?25hq[?25l[34h[?25h![?25l[34h[?25h[?25l[38;1H[K[38;1H[?1l>[34h[?25h[?1049lsriram@ubuntu:/space/hashincludetest/mocking-bird/plugins/jquery-tree-master/minified$ 
sriram@ubuntu:/space/hashincludetest/mocking-bird/plugins/jquery-tree-master/minified$ 
sriram@ubuntu:/space/hashincludetest/mocking-bird/plugins/jquery-tree-master/minified$ 
sriram@ubuntu:/space/hashincludetest/mocking-bird/plugins/jquery-tree-master/minified$ ls
[0m[01;34mimages[0m  jquery.tree.min.css  jquery.tree.min.js
sriram@ubuntu:/space/hashincludetest/mocking-bird/plugins/jquery-tree-master/minified$ 
sriram@ubuntu:/space/hashincludetest/mocking-bird/plugins/jquery-tree-master/minified$ 
sriram@ubuntu:/space/hashincludetest/mocking-bird/plugins/jquery-tree-master/minified$ 
sriram@ubuntu:/space/hashincludetest/mocking-bird/plugins/jquery-tree-master/minified$ lsvi jquery.tree.min.js ls[Kcd minified/ls[Kcd ..,,vi jquery.treecheckbox.js ls[Kvi jquery.treeajax.js ls[Kvi jquery.tree.jsls[Kvi jquery.tree.jsajax.js ls[Kvi jquery.tree.jsls[Kcd js/[4Plscd ..[3Plscd ..[Kp * /space/hashincludetest/mocking-bird/mockingsite/stattic/mocktest/images/icons/M[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cls[K
[KM[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Ccd images/ls[Kcp * /space/hashincludetest/mocking-bird/mockingsite/stattic/mocktest/images/icons/M[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C /space/hashincludetest/mocking-bird/mockingsite/stati[1Pc/mocktest/images/icons/M[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cj /space/hashincludetest/mocking-bird/mockingsite/static/mocktest/images/icons/M[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cq /space/hashincludetest/mocking-bird/mockingsite/static/mocktest/images/icons/M[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cuery.tree.min. /space/hashincludetest/mocking-bird/mockingsite/static/mocktest/images/icons/M[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cj /space/hashincludetest/mocking-bird/mockingsite/static/mocktest/images/icons/M[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cs /space/hashincludetest/mocking-bird/mockingsite/static/mocktest/images/icons/M[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C
[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[K[K[K[K[K[K[K[K[K[K[K[K[Kscripts 
images               jquery.tree.min.css  jquery.tree.min.js   
sriram@ubuntu:/space/hashincludetest/mocking-bird/plugins/jquery-tree-master/minified$ cp jquery.tree.min.js /space/hashincludetest/mocking-birdd/mockingsite/static/mocktest/scripts [K/
/space/hashincludetest/mocking-bird/mockingsite/static/mocktest/scripts/jquery.cookie.js
/space/hashincludetest/mocking-bird/mockingsite/static/mocktest/scripts/jquery.countdown.js
/space/hashincludetest/mocking-bird/mockingsite/static/mocktest/scripts/jquery.flipcountdown.js
/space/hashincludetest/mocking-bird/mockingsite/static/mocktest/scripts/jquery.plugin.min.js
/space/hashincludetest/mocking-bird/mockingsite/static/mocktest/scripts/jsutils.js
/space/hashincludetest/mocking-bird/mockingsite/static/mocktest/scripts/main.js
/space/hashincludetest/mocking-bird/mockingsite/static/mocktest/scripts/main.min.js
/space/hashincludetest/mocking-bird/mockingsite/static/mocktest/scripts/scripts
/space/hashincludetest/mocking-bird/mockingsite/static/mocktest/scripts/testmain.js
/space/hashincludetest/mocking-bird/mockingsite/static/mocktest/scripts/testmain.min.js
sriram@ubuntu:/space/hashincludetest/mocking-bird/plugins/jquery-tree-master/minified$ cp jquery.tree.min.js /space/hashincludetest/mocking-birdd/mockingsite/static/mocktest/scripts/
sriram@ubuntu:/space/hashincludetest/mocking-bird/plugins/jquery-tree-master/minified$ 
sriram@ubuntu:/space/hashincludetest/mocking-bird/plugins/jquery-tree-master/minified$ 
sriram@ubuntu:/space/hashincludetest/mocking-bird/plugins/jquery-tree-master/minified$ 
sriram@ubuntu:/space/hashincludetest/mocking-bird/plugins/jquery-tree-master/minified$ 
sriram@ubuntu:/space/hashincludetest/mocking-bird/plugins/jquery-tree-master/minified$ cp jquery.tree.min.js /space/hashincludetest/mocking-birdd/mockingsite/static/mocktest/scripts/M[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cls[K
[KM[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cvi jquery.tree.min.js 
[?1049h[?1h=[1;38r[34l[34h[?25h[23m[24m[0m[H[J[?25l[38;1H"jquery.tree.min.js" [noeol] 8L, 12523C[1;1H([36mfunction[0m(a,b)[36m{[0ma.widget([31m"daredevel.tree"[0m,[36m{[0m_attachLi:[36mfunction[0m(d,f,c)[36m{var[0m e=f.find([31m"ul:first"[0m);[33mif[0m(e.length)[36m{[0m[33mif[0m((b==c)||(e.children([31m"li"[0m).length<cc[2;1H))[36m{[0me.append(d)[36m}[0m[33melse[0m[36m{[0m[33mif[0m(c==0)[36m{[0mc=c+1[36m}[0me.children([31m"li:nth-child("[0m+c+[31m")"[0m).before(d)[36m}}[0m[33melse[0m[36m{[0me=a([31m"<ul/>"[0m);f.append(e.append(d))[36m}}[0m,_attachNode:[36mfunction[0m(([3;1He,d,c)[36m{[0m[33mif[0m(b==d)[36m{var[0m f=[36mthis[0m.element;[36mthis[0m._attachLi(e,f,c);[36mthis[0m._initializeNode(e)[36m}[0m[33melse[0m[36m{var[0m f=d;[36mthis[0m._attachLi(e,f,c);f.removeClass([31m"leaf collapss[4;1Hed"[0m).addClass([31m"expanded"[0m);[36mthis[0m._initializeNode(e);[36mthis[0m._initializeNode(f)[36m}}[0m,_buildNode:[36mfunction[0m(e)[36m{[0me=a.extend([31mtrue[0m,[36mthis[0m.options.defaultNodeAttrr[5;1Hibutes,e);[36mvar[0m f=a([31m"<span/>"[0m,e.span);[36mvar[0m c=a([31m"<li/>"[0m,e.li);[33mif[0m(a.inArray([31m"checkbox"[0m,[36mthis[0m.options.components)>-1)[36m{var[0m d=a([31m"<input/>"[0m,e.input);c.app[6;1Hpend(d)[36m}[0mc.append(f);[33mreturn[0m c[36m}[0m,_create:[36mfunction[0m()[36m{var[0m c=[36mthis[0m;[36mthis[0m.options.core=[36mthis[0m;[36mthis[0m.element.addClass([31m"ui-widget ui-widget-content daredevell[7;1H-tree"[0m);[33mif[0m([36mthis[0m.options.checkbox)[36m{this[0m._createCheckbox()[36m}[0m[33mif[0m([36mthis[0m.options.collapsible)[36m{this[0m._createCollapsible()[36m}[0m[33mif[0m([36mthis[0m.options.dnd)[36m{this[0m._creaa[8;1HteDnd()[36m}[0m[33mif[0m([36mthis[0m.options.selectable)[36m{this[0m._createSelectable()[36m}this[0m.element.find([31m"li"[0m).each([36mfunction[0m()[36m{[0mc._initializeNode(a([36mthis[0m))[36m}[0m);[33mif[0m([36mthis[0m.optioo[9;1Hns.nodes!=[33mnull[0m)[36m{[0ma.each([36mthis[0m.options.nodes,[36mfunction[0m(d,e)[36m{[0mc.options.core.addNode(e)[36m}[0m)[36m}}[0m,_destroy:[36mfunction[0m()[36m{[0ma.Widget.prototype.destroy.call([36mthis[0m))[10;1H[36m}[0m,_detachNode:[36mfunction[0m(d)[36m{var[0m c=[36mthis[0m.options.core.parentNode(d);[36mvar[0m e=c.find([31m"ul:first"[0m);[33mif[0m(e.children().length==1)[36m{[0me.detach();c.removeClass([31m"cc[11;1Hollapsed expanded"[0m).addClass([31m"leaf"[0m)[36m}[0m[33melse[0m[36m{[0md.detach()[36m}this[0m.options.core._initializeNode(c)[36m}[0m,_initializeComponents:[36mfunction[0m()[36m{[0m[33mfor[0m([36mvar[0m d [33min[0m [36mthis[0m.oo[12;1Hptions.components)[36m{var[0m c=[31m"element.tree"[0m+[36mthis[0m.options.components[36m[[0md[36m][0m+[31m"(options);"[0m;run=[33mnew[0m [32mFunction[0m([31m"options"[0m,[31m"element"[0m,c);run([36mthis[0m.options,[36mthis[0m.ee[13;1Hlement)[36m}}[0m,_initializeNode:[36mfunction[0m(c)[36m{[0mc.children([31m"span:last"[0m).addClass([31m"daredevel-tree-label"[0m);[33mif[0m([36mthis[0m.options.checkbox)[36m{this[0m._initializeCheckbb[14;1HoxNode(c)[36m}[0m[33mif[0m([36mthis[0m.options.collapsible)[36m{this[0m._initializeCollapsibleNode(c)[36m}[0m[33mif[0m([36mthis[0m.options.dnd)[36m{this[0m._initializeDndNode(c)[36m}[0m[33mif[0m([36mthis[0m.options.selecc[15;1Htable)[36m{this[0m._initializeSelectableNode(c)[36m}}[0m,addNode:[36mfunction[0m(f,e,d)[36m{var[0m g=[36mthis[0m;[36mvar[0m c=[36mthis[0m._buildNode(f);[33mif[0m((b==e)||0==e.length)[36m{this[0m._attachNodee[16;1H(a(c),b,d)[36m}[0m[33melse[0m[36m{this[0m._attachNode(a(c),a(e),d)[36m}[0m[33mif[0m(b!=f.children)[36m{[0ma.each(f.children,[36mfunction[0m(i,h)[36m{[0mg.addNode(i,c)[36m}[0m)[36m}[0mg._trigger([31m"add"[0m,[31mtrue[0m,c)[36m}[0m,isRoo[17;1Hot:[36mfunction[0m(c)[36m{[0mc=a(c);[36mvar[0m d=c.parentsUntil([31m".daredevel-tree"[0m);[33mreturn[0m 1==d.length[36m}[0m,moveNode:[36mfunction[0m(e,d,c)[36m{this[0m._detachNode(a(e));[33mif[0m((b==d)||0==[18;1H=d.length)[36m{this[0m._attachNode(a(e),b,c)[36m}[0m[33melse[0m[36m{this[0m._attachNode(a(e),a(d),c)[36m}this[0m._trigger([31m"move"[0m,[31mtrue[0m,a(e))[36m}[0m,parentNode:[36mfunction[0m(c)[36m{[0m[33mreturn[0m a(c).paa[19;1Hrents([31m"li:first"[0m)[36m}[0m,removeNode:[36mfunction[0m(c)[36m{this[0m._detachNode(a(c));[36mthis[0m._trigger([31m"remove"[0m,[31mtrue[0m,a(c))[36m}[0m,_allDescendantChecked:[36mfunction[0m(c)[36m{[0m[33mreturn[0m(c..[20;1Hfind([31m"li input:checkbox:not(:checked)"[0m).length==0)[36m}[0m,_checkAncestors:[36mfunction[0m(c)[36m{[0mc.parentsUntil([31m"daredevel-tree"[0m).filter([31m"li"[0m).find([31m"input:checkk[21;1Hbox:first:not(:checked)"[0m).prop([31m"checked"[0m,[31mtrue[0m).change()[36m}[0m,_checkDescendants:[36mfunction[0m(c)[36m{[0mc.find([31m"li input:checkbox:not(:checked)"[0m).prop([31m"check[0med""[22;1H,true).change()},_checkOthers:function(c){var d=this;c.addClass("exclude");c.parents("li").addClass("exclude");c.find("li").addClass("exclude"))[23;1H;a(this.element).find("li").each(function(){if(!a(this).hasClass("exclude")){a(this).find("input:checkbox:first:not(:checked)").prop("checked",,[24;1Htrue).change()}});a(this.element).find("li").removeClass("exclude")},_createCheckbox:function(){var c=this;this.element.on("click","input:checkk[25;1Hbox:not(:checked)",function(){c.uncheck(c.options.core.parentNode(a(this)))});this.element.on("click","input:checkbox:checked",function(){c.chee[26;1Hck(c.options.core.parentNode(a(this)))});if(this.options.onUncheck.node=="collapse"){this.element.on("click","input:checkbox:not(:checked)",funn[27;1Hction(){c.options.core.collapse(c.options.core.parentNode(a(this)))})}else{if(this.options.onUncheck.node=="expand"){this.element.on("click","ii[28;1Hnput:checkbox:not(:checked)",function(){c.options.core.expand(c.options.core.parentNode(a(this)))})}}if(this.options.onCheck.node=="collapse"){{[29;1Hthis.element.on("click","input:checkbox:checked",function(){c.options.core.collapse(c.options.core.parentNode(a(this)))})}else{if(this.options..[30;1HonCheck.node=="expand"){this.element.on("click","input:checkbox:checked",function(){c.options.core.expand(c.options.core.parentNode(a(this)))}))[31;1H}}},_initializeCheckboxNode:function(c){},_uncheckAncestors:function(c){c.parentsUntil("daredevel-tree").filter("li").find("input:checkbox:firss[32;1Ht:checked").prop("checked",false).change()},_uncheckDescendants:function(c){c.find("li input:checkbox:checked").prop("checked",false).change()}}[33;1H,_uncheckOthers:function(c){var d=this;c.addClass("exclude");c.parents("li").addClass("exclude");c.find("li").addClass("exclude");a(this.elemenn[34;1Ht).find("li").each(function(){if(!a(this).hasClass("exclude")){a(this).find("input:checkbox:first:checked").prop("checked",false).change()}});aa[35;1H(this.element).find("li").removeClass("exclude")},check:function(c){c=a(c);c.find("input:checkbox:first:not(:checked)").prop("checked",true).chh[36;1Hange();if(this.options.onCheck.others=="check"){this._checkOthers(c)}else{if(this.options.onCheck.others=="uncheck"){this._uncheckOthers(c)}}iff[37;1H(this.options.onCheck.descendants=="check"){this._checkDescendants(c)}else{if(this.options.onCheck.descendants=="uncheck"){this._uncheckDescend[38;126H8,161[9CBot[2;18H[34h[?25h[?25l[38;1H[K[38;1H:[34h[?25hq[?25l[34h[?25h![?25l[34h[?25h[?25l[38;1H[K[38;1H[?1l>[34h[?25h[?1049lsriram@ubuntu:/space/hashincludetest/mocking-bird/plugins/jquery-tree-master/minified$ 
sriram@ubuntu:/space/hashincludetest/mocking-bird/plugins/jquery-tree-master/minified$ 
sriram@ubuntu:/space/hashincludetest/mocking-bird/plugins/jquery-tree-master/minified$ 
sriram@ubuntu:/space/hashincludetest/mocking-bird/plugins/jquery-tree-master/minified$ clear
[H[Jsriram@ubuntu:/space/hashincludetest/mocking-bird/plugins/jquery-tree-master/minified$ 
sriram@ubuntu:/space/hashincludetest/mocking-bird/plugins/jquery-tree-master/minified$ 
sriram@ubuntu:/space/hashincludetest/mocking-bird/plugins/jquery-tree-master/minified$ 
sriram@ubuntu:/space/hashincludetest/mocking-bird/plugins/jquery-tree-master/minified$ 
sriram@ubuntu:/space/hashincludetest/mocking-bird/plugins/jquery-tree-master/minified$ cd ..
sriram@ubuntu:/space/hashincludetest/mocking-bird/plugins/jquery-tree-master$ cd src/js/
sriram@ubuntu:/space/hashincludetest/mocking-bird/plugins/jquery-tree-master/src/js$ 
sriram@ubuntu:/space/hashincludetest/mocking-bird/plugins/jquery-tree-master/src/js$ 
sriram@ubuntu:/space/hashincludetest/mocking-bird/plugins/jquery-tree-master/src/js$ (reverse-i-search)`': [Kc': cd src/js/p': cp jquery.tree.min.js /space/hashincludetest/mocking-bird/mockingsite/static/mocktest/scripts/[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[1@ [C[C[Csriram@ubuntu:/space/hashincludetest/mocking-bird/plugins/jquery-tree-master/src/js$ cp jquery.tree.min.js /space/hashincludetest/mocking-bird/mmockingsite/static/mocktest/scripts/M[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C#cp jquery.tree.min.js /space/hashincludetest/mocking-bird/mockingsite/static/mocktest/scripts/M[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C

sriram@ubuntu:/space/hashincludetest/mocking-bird/plugins/jquery-tree-master/src/js$ ls
jquery.treeajax.js  jquery.treecheckbox.js  jquery.treecollapse.js  jquery.treednd.js  [0m[01;32mjquery.tree.js[0m
sriram@ubuntu:/space/hashincludetest/mocking-bird/plugins/jquery-tree-master/src/js$ ls#cp jquery.tree.min.js /space/hashincludetest/mocking-bird//mockingsite/static/mocktest/scripts/M[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Ccd src/js/[K
[KM[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C#cp jquery.tree.min.js /space/hashincludetest/mocking-bird//mockingsite/static/mocktest/scripts/M[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cin.js /space/hashincludetest/mocking-bird/m[1Pockingsite/static/mocktest/scripts/M[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cn.js /space/hashincludetest/mocking-bird/mo[1Pckingsite/static/mocktest/scripts/M[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C.js /space/hashincludetest/mocking-bird/moc[1Pkingsite/static/mocktest/scripts/M[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cjs /space/hashincludetest/mocking-bird/mock[1Pingsite/static/mocktest/scripts/M[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C
[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[CM[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Ccp jquery.tree.js /space/hashincludetest/mocking-bird/mocki[1Pngsite/static/mocktest/scripts/M[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C

sriram@ubuntu:/space/hashincludetest/mocking-bird/plugins/jquery-tree-master/src/js$ 
sriram@ubuntu:/space/hashincludetest/mocking-bird/plugins/jquery-tree-master/src/js$ 
sriram@ubuntu:/space/hashincludetest/mocking-bird/plugins/jquery-tree-master/src/js$ 
sriram@ubuntu:/space/hashincludetest/mocking-bird/plugins/jquery-tree-master/src/js$ ls
jquery.treeajax.js  jquery.treecheckbox.js  jquery.treecollapse.js  jquery.treednd.js  [0m[01;32mjquery.tree.js[0m
sriram@ubuntu:/space/hashincludetest/mocking-bird/plugins/jquery-tree-master/src/js$ vi jtr[K[Kquery.tree.js 
[?1049h[?1h=[1;38r[34l[34h[?25h[23m[24m[0m[H[J[?25l[38;1H"jquery.tree.js" 1212L, 35888C[1;1H[34m/*!
 * Tree - jQuery Tree Widget
 * @author Valerio Galano <v.galano@daredevel.com>
 * @license MIT
 * @see https://github.com/daredevel/jquery-tree
 * @version 0.1
 */[0m
([36mfunction[0m ($, [33mundefined[0m) [36m{[0m
    $.widget([31m"daredevel.tree"[0m, [36m{[0m[11;8H [34m/**
         * Attach node li code under passed parent element at passed position
         *
         * @private
         *
         * @param li node to attach
         * @param parent element to attach node to (can be another node or widget base element)
         * @param position position of the node between brothers (expressed as positive integer)
         */[0m[20;8H _attachLi: [36mfunction[0m (li, [33mparent[0m, position) [36m{[0m[22;12H [36mvar[0m ul = [33mparent[0m.find([31m'ul:first'[0m);[24;12H [33mif[0m (ul.length) [36m{[0m[25;16H [33mif[0m (([33mundefined[0m == position) || (ul.children([31m'li'[0m).length < position)) [36m{[0m[26;20H ul.append(li);[27;16H [36m}[0m [33melse[0m [36m{[0m[28;20H [33mif[0m (position == 0) [36m{[0m[29;24H position = position + 1;[30;20H [36m}[0m[31;20H ul.children([31m'li:nth-child('[0m + position + [31m')'[0m).before(li);[32;16H [36m}[0m[33;12H [36m}[0m [33melse[0m [36m{[0m[34;16H ul = $([31m'<ul/>'[0m);[35;16H [33mparent[0m.append(ul.append(li));[36;12H [36m}[0m[38;126H37,0-1[8CTop[37;1H[34h[?25h[?25l[38;1H[K[38;1H/[34h[?25h_[?25l[1;37r[1;1H[12M[1;38r[26;8H [36m}[0m,[28;8H [34m/**
         * Attach a node under passed parent (if no parent is passed, node is attached as root)
         *
         * @private
         *
         * @param li node to attach
         * @param parentLi node under which new node will be attached
         * @param position position of the node between brothers (expressed as positive integer)
         */[0m[37;8H [7m_[0mattachNode: [36mfunction[0m (li, parentLi, position) [36m{[0m[38;1H[K[38;126H49,9[11C1%/_[38;126H[K[38;3H[34h[?25hc[?25l[23m[24m[0m[H[J[1;1H[34m         *
         * @private
         *
         * @note Base tree structure must be something like this:
         *
         * <div id="tree">
         *   <ul>
         *     <li id="node1" class="expanded"><input type="checkbox"><label>Node 1</label><span>Node 1</span>
         *       <ul>
         *         <li><input type="checkbox"><label>Node 1.1</label>
         *         <li><input type="checkbox"><label>Node 1.2</label>
         *       </ul>
         *     </li>
         *   </ul>
         * </div>
         *
         * 1) input type="checkbox" tag and label tag are mandatory only to use checkbox component
         */[0m[19;8H [7m_c[0mreate: [36mfunction[0m () [36m{[0m[21;12H [36mvar[0m t = [36mthis[0m;[23;12H [34m// add core widget to options so components can add methods @todo remove core variable[0m[24;12H [36mthis[0m.options.core = [36mthis[0m;[26;12H [34m// add jQueryUI css widget classes[0m[27;12H [36mthis[0m.element.addClass([31m'ui-widget ui-widget-content daredevel-tree'[0m);[29;12H [34m// initialize requested features[0m[30;12H [33mif[0m ([36mthis[0m.options.checkbox) [36m{[0m[31;16H [36mthis[0m._createCheckbox();[32;12H [36m}[0m[33;12H [33mif[0m ([36mthis[0m.options.collapsible) [36m{[0m[34;16H [36mthis[0m._createCollapsible();[35;12H [36m}[0m[36;12H [33mif[0m ([36mthis[0m.options.dnd) [36m{[0m[37;16H [36mthis[0m._createDnd();[38;126H127,9[10C9%/_c[38;126H[K[38;4H[34h[?25hr[?25l[19;11H[7mr[0m[38;126H127,9[10C9%[38;126H[K[38;5H[34h[?25he[?25l[19;12H[7me[0m[38;126H127,9[10C9%[38;126H[K[38;6H[34h[?25ha[?25l[19;13H[7ma[0m[38;126H127,9[10C9%[38;126H[K[38;7H[34h[?25hr[?25l[23m[24m[0m[H[J[1;1H[34m/*!
 * Tree - jQuery Tree Widget
 * @author Valerio Galano <v.galano@daredevel.com>
 * @license MIT
 * @see https://github.com/daredevel/jquery-tree
 * @version 0.1
 */[0m
([36mfunction[0m ($, [33mundefined[0m) [36m{[0m
    $.widget([31m"daredevel.tree"[0m, [36m{[0m[11;8H [34m/**
         * Attach node li code under passed parent element at passed position
         *
         * @private
         *
         * @param li node to attach
         * @param parent element to attach node to (can be another node or widget base element)
         * @param position position of the node between brothers (expressed as positive integer)
         */[0m[20;8H _attachLi: [36mfunction[0m (li, [33mparent[0m, position) [36m{[0m[22;12H [36mvar[0m ul = [33mparent[0m.find([31m'ul:first'[0m);[24;12H [33mif[0m (ul.length) [36m{[0m[25;16H [33mif[0m (([33mundefined[0m == position) || (ul.children([31m'li'[0m).length < position)) [36m{[0m[26;20H ul.append(li);[27;16H [36m}[0m [33melse[0m [36m{[0m[28;20H [33mif[0m (position == 0) [36m{[0m[29;24H position = position + 1;[30;20H [36m}[0m[31;20H ul.children([31m'li:nth-child('[0m + position + [31m')'[0m).before(li);[32;16H [36m}[0m[33;12H [36m}[0m [33melse[0m [36m{[0m[34;16H ul = $([31m'<ul/>'[0m);[35;16H [33mparent[0m.append(ul.append(li));[36;12H [36m}[0m[38;126H37,0-1[8CTop/_crear[38;126H[K[38;8H[34h[?25h[?25l[38;7H[K[23m[24m[0m[H[J[1;1H[34m         *
         * @private
         *
         * @note Base tree structure must be something like this:
         *
         * <div id="tree">
         *   <ul>
         *     <li id="node1" class="expanded"><input type="checkbox"><label>Node 1</label><span>Node 1</span>
         *       <ul>
         *         <li><input type="checkbox"><label>Node 1.1</label>
         *         <li><input type="checkbox"><label>Node 1.2</label>
         *       </ul>
         *     </li>
         *   </ul>
         * </div>
         *
         * 1) input type="checkbox" tag and label tag are mandatory only to use checkbox component
         */[0m[19;8H [7m_crea[0mte: [36mfunction[0m () [36m{[0m[21;12H [36mvar[0m t = [36mthis[0m;[23;12H [34m// add core widget to options so components can add methods @todo remove core variable[0m[24;12H [36mthis[0m.options.core = [36mthis[0m;[26;12H [34m// add jQueryUI css widget classes[0m[27;12H [36mthis[0m.element.addClass([31m'ui-widget ui-widget-content daredevel-tree'[0m);[29;12H [34m// initialize requested features[0m[30;12H [33mif[0m ([36mthis[0m.options.checkbox) [36m{[0m[31;16H [36mthis[0m._createCheckbox();[32;12H [36m}[0m[33;12H [33mif[0m ([36mthis[0m.options.collapsible) [36m{[0m[34;16H [36mthis[0m._createCollapsible();[35;12H [36m}[0m[36;12H [33mif[0m ([36mthis[0m.options.dnd) [36m{[0m[37;16H [36mthis[0m._createDnd();[38;126H127,9[10C9%/_crea[38;126H[K[38;7H[34h[?25ht[?25l[19;14H[7mt[0m[38;126H127,9[10C9%[38;126H[K[38;8H[34h[?25he[?25l[19;15H[7me[0m[38;126H127,9[10C9%[38;126H[K[38;9H[34h[?25hs[?25l[1;37r[1;1H[21M[1;38r[17;12H [36m}[0m[18;12H [33mif[0m ([36mthis[0m.options.selectable) [36m{[0m[19;16H [36mthis[0m.[7m_createS[0melectable();[20;12H [36m}[0m[22;12H [34m// initialize requested components[0m[23;12H [34m//this._initializeComponents();[0m[25;12H [36mthis[0m.element.find([31m'li'[0m).each([36mfunction[0m () [36m{[0m[26;16H t._initializeNode($([36mthis[0m));[27;12H [36m}[0m);[29;12H [33mif[0m ([36mthis[0m.options.nodes != [33mnull[0m) [36m{[0m[30;16H $.each([36mthis[0m.options.nodes, [36mfunction[0m (key, value) [36m{[0m[31;20H t.options.core.addNode(value);[32;16H [36m}[0m);[33;12H [36m}[0m[34;8H [36m}[0m,[36;8H [34m/**
         * Destroy plugin[0m[38;1H[K[38;126H148,22[8C10%/_creates[38;126H[K[38;10H[34h[?25h[?25l[19;22H_createS[38;126H148,22[8C10%[19;22H[34h[?25h[?25l[38;131H3[19;23H[34h[?25h[?25l[38;2H\<_createSelectable\>[38;126H[K[38;1H[23m[24m[0m[H[J[1;20H [36m}[0m,[2;20H over: [36mfunction[0m ([33mevent[0m, ui) [36m{[0m[3;24H $([36mthis[0m).[33mparent[0m([31m'li'[0m).find([31m'.daredevel-tree-label:first'[0m).addClass([31m'ui-state-hover'[0m);[4;20H [36m}[0m,[5;20H out: [36mfunction[0m ([33mevent[0m, ui) [36m{[0m[6;24H $([36mthis[0m).[33mparent[0m([31m'li'[0m).find([31m'.daredevel-tree-label:first'[0m).removeClass([31m'ui-state-hover'[0m);[7;20H [36m}[0m[8;16H [36m}[0m);[10;12H $(li).find([31m'.daredevel-tree-label:first'[0m).after(span);[12;8H [36m}[0m,[14;8H [34m/**
         * Initialize plugin
         * //@todo find right name or merge with _create
         * @private
         */[0m[19;8H _createSelectable: [36mfunction[0m () [36m{[0m[20;12H [36mvar[0m t = [36mthis[0m;[22;12H [36mthis[0m.element.on([31m"click"[0m, [31m'.daredevel-tree-label'[0m, [36mfunction[0m () [36m{[0m[23;16H [36mvar[0m li = $([36mthis[0m);[24;16H [33mif[0m (li.hasClass(t.options.selectUiClass)) [36m{[0m[25;20H t.deselect($([36mthis[0m).[33mparent[0m(li));[26;16H [36m}[0m [33melse[0m [36m{[0m[27;20H t.select($([36mthis[0m).[33mparent[0m([31m'li'[0m));[28;16H [36m}[0m[29;12H [36m}[0m);[30;8H [36m}[0m,[32;8H [34m/**
         * Deselect a node
         *
         * @private
         *
         * @param li node[0m[38;126H915,9[9C76%[19;9H[34h[?25h[?25l[38;128H6[20;9H[34h[?25h[?25l[38;128H7,0-1[21;1H[34h[?25h[?25l[38;128H8,9  [22;9H[34h[?25h[?25l[38;128H9[23;9H[34h[?25h[?25l[38;127H20[24;9H[34h[?25h[?25l[38;128H1[25;9H[34h[?25h[?25l[38;128H2[26;9H[34h[?25h[?25l[38;128H3[27;9H[34h[?25h[?25l[38;128H4[28;9H[34h[?25h[?25l[38;128H5[29;9H[34h[?25h[?25l[19;40H[36m[46m{[30;9H}[0m[38;128H6[30;9H[34h[?25h[?25l[19;40H[36m{[30;9H}[0m[38;128H7,0-1[31;1H[34h[?25h[?25l[38;128H8,9  [32;9H[34h[?25h[?25l[38;128H9[33;9H[34h[?25h[?25l[38;127H30[34;9H[34h[?25h[?25l[38;128H1[35;9H[34h[?25h[?25l[38;128H2[36;9H[34h[?25h[?25l[38;128H3[37;9H[34h[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[34m         */[0m[38;126H[K[38;126H934,9[9C76%[37;9H[34h[?25h[?25l[1;37r[37;1H
[1;38r[37;8H _deselect: [36mfunction[0m (li) [36m{[0m[38;126H[K[38;126H935,9[9C76%[37;9H[34h[?25h[?25l[1;37r[37;1H
[1;38r[37;12H li.find([31m'span.daredevel-tree-label:first'[0m).removeClass([36mthis[0m.options.selectUiClass);[38;126H[K[38;126H936,9[9C76%[37;9H[34h[?25h[?25l[1;37r[37;1H
[1;38r[37;12H [36mthis[0m._trigger([31m'deselect'[0m, [31mtrue[0m, li);[38;126H[K[38;126H937,9[9C76%[37;9H[34h[?25h[?25l[1;37r[37;1H
[1;38r[34;34H[36m[46m{[0m[37;8H [36m[46m}[0m,[38;126H[K[38;126H938,9[9C76%[37;9H[34h[?25h[?25l[1;37r[37;1H
[1;38r[33;34H[36m{[36;9H}[0m[38;126H[K[38;126H939,0-1[7C76%[37;1H[34h[?25h[?25l[1;37r[37;1H
[1;38r[37;8H [34m/**[0m[38;126H[K[38;126H940,9[9C76%[37;9H[34h[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[34m         * Deselect all selected nodes[0m[38;126H[K[38;126H941,9[9C76%[37;9H[34h[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[34m         *[0m[38;126H[K[38;126H942,9[9C77%[37;9H[34h[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[34m         * @private[0m[38;126H[K[38;126H943,9[9C77%[37;9H[34h[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[34m         */[0m[38;126H[K[38;126H944,9[9C77%[37;9H[34h[?25h[?25l[1;37r[37;1H
[1;38r[37;8H _deselectAll: [36mfunction[0m () [36m{[0m[38;126H[K[38;126H945,9[9C77%[37;9H[34h[?25h[?25l[1;37r[37;1H
[1;38r[37;12H [36mvar[0m t = [36mthis[0m;[38;126H[K[38;126H946,9[9C77%[37;9H[34h[?25h[?25l[1;37r[37;1H
[1;38r[37;12H [36mthis[0m.element.find([31m'.daredevel-tree-label.'[0m + [36mthis[0m.options.selectUiClass).each([36mfunction[0m () [36m{[0m[38;126H[K[38;126H947,9[9C77%[37;9H[34h[?25h[?25l[1;37r[37;1H
[1;38r[37;16H t._deselect($([36mthis[0m).[33mparent[0m([31m'li'[0m));[38;126H[K[38;126H948,9[9C77%[37;9H[34h[?25h[?25l[1;37r[37;1H
[1;38r[37;12H [36m}[0m);[38;126H[K[38;126H949,9[9C77%[37;9H[34h[?25h[?25l[1;37r[37;1H
[1;38r[32;35H[36m[46m{[0m[37;8H [36m[46m}[0m,[38;126H[K[38;126H950,9[9C77%[37;9H[34h[?25h[?25l[1;37r[37;1H
[1;38r[31;35H[36m{[36;9H}[0m[38;126H[K[38;126H951,0-1[7C77%[37;1H[34h[?25h[?25l[1;37r[37;1H
[1;38r[37;8H [34m/**[0m[38;126H[K[38;126H952,9[9C77%[37;9H[34h[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[34m         *[0m[38;126H[K[38;126H953,9[9C77%[37;9H[34h[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[34m         */[0m[38;126H[K[38;126H954,9[9C78%[37;9H[34h[?25h[?25l[1;37r[37;1H
[1;38r[37;8H _destroySelectable: [36mfunction[0m () [36m{[0m[38;126H[K[38;126H955,9[9C78%[37;9H[34h[?25h[?25l[1;37r[37;1H
[1;38r[37;12H [34m//@todo complete treeselect _destory method[0m[38;126H[K[38;126H956,9[9C78%[37;9H[34h[?25h[?25l[1;37r[37;1H
[1;38r[35;41H[36m[46m{[0m[37;8H [36m[46m}[0m,[38;126H[K[38;126H957,9[9C78%[37;9H[34h[?25h[?25l[1;37r[37;1H
[1;38r[34;41H[36m{[36;9H}[0m[38;126H[K[38;126H958,0-1[7C78%[37;1H[34h[?25h[?25l[1;37r[37;1H
[1;38r[37;8H [34m/**[0m[38;126H[K[38;126H959,9[9C78%[37;9H[34h[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[34m         * Initialize passed node[0m[38;126H[K[38;126H960,9[9C78%[37;9H[34h[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[34m         *[0m[38;126H[K[38;126H961,9[9C78%[37;9H[34h[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[34m         * @private[0m[38;126H[K[38;126H962,9[9C78%[37;9H[34h[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[34m         *[0m[38;126H[K[38;126H963,9[9C78%[37;9H[34h[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[34m         * @param li node to initialize[0m[38;126H[K[38;126H964,9[9C78%[37;9H[34h[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[34m         */[0m[38;126H[K[38;126H965,9[9C78%[37;9H[34h[?25h[?25l[1;37r[37;1H
[1;38r[37;8H _initializeSelectableNode: [36mfunction[0m (li) [36m{[0m[38;126H[K[38;126H966,9[9C79%[37;9H[34h[?25h[?25l[1;37r[37;1H
[1;38r[38;126H[K[38;126H967,0-1[7C79%[37;1H[34h[?25h[?25l[1;37r[37;1H
[1;38r[35;50H[36m[46m{[0m[37;8H [36m[46m}[0m,[38;126H[K[38;126H968,9[9C79%[37;9H[34h[?25h[?25l[1;37r[37;1H
[1;38r[34;50H[36m{[36;9H}[0m[38;126H[K[38;126H969,0-1[7C79%[37;1H[34h[?25h[?25l[1;37r[37;1H
[1;38r[37;8H [34m/**[0m[38;126H[K[38;126H970,9[9C79%[37;9H[34h[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[34m         * Select a node[0m[38;126H[K[38;126H971,9[9C79%[37;9H[34h[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[34m         *[0m[38;126H[K[38;126H972,9[9C79%[37;9H[34h[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[34m         * @private[0m[38;126H[K[38;126H973,9[9C79%[37;9H[34h[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[34m         *[0m[38;126H[K[38;126H974,9[9C79%[37;9H[34h[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[34m         * @param li node[0m[38;126H[K[38;126H975,9[9C79%[37;9H[34h[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[34m         */[0m[38;126H[K[38;126H976,9[9C79%[37;9H[34h[?25h[?25l[1;37r[37;1H
[1;38r[37;8H _select: [36mfunction[0m (li) [36m{[0m[38;126H[K[38;126H977,9[9C80%[37;9H[34h[?25h[?25l[1;37r[37;1H
[1;38r[37;12H li.find([31m'span.daredevel-tree-label:first'[0m).addClass([36mthis[0m.options.selectUiClass);[38;126H[K[38;126H978,9[9C80%[37;9H[34h[?25h[?25l[1;37r[37;1H
[1;38r[37;12H [36mthis[0m._trigger([31m'select'[0m, [31mtrue[0m, li);[38;126H[K[38;126H979,9[9C80%[37;9H[34h[?25h[?25l[1;37r[37;1H
[1;38r[34;32H[36m[46m{[0m[37;8H [36m[46m}[0m,[38;126H[K[38;126H980,9[9C80%[37;9H[34h[?25h[?25l[1;37r[37;1H
[1;38r[33;32H[36m{[36;9H}[0m[38;126H[K[38;126H981,0-1[7C80%[37;1H[34h[?25h[?25l[1;37r[37;1H
[1;38r[37;8H [34m/**[0m[38;126H[K[38;126H982,9[9C80%[37;9H[34h[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[34m         * Deselect node[0m[38;126H[K[38;126H983,9[9C80%[37;9H[34h[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[34m         *[0m[38;126H[K[38;126H984,9[9C80%[37;9H[34h[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[34m         * @public[0m[38;126H[K[38;126H985,9[9C80%[37;9H[34h[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[34m         */[0m[38;126H[K[38;126H986,9[9C80%[37;9H[34h[?25h[?25l[1;37r[37;1H
[1;38r[37;8H deselect: [36mfunction[0m (li) [36m{[0m[38;126H[K[38;126H987,9[9C80%[37;9H[34h[?25h[?25l[1;37r[37;1H
[1;38r[37;12H li = $(li);[38;126H[K[38;126H988,9[9C80%[37;9H[34h[?25h[?25l[1;37r[37;1H
[1;38r[37;12H [36mthis[0m._deselect(li);[38;126H[K[38;126H989,9[9C81%[37;9H[34h[?25h[?25l[1;37r[37;1H
[1;38r[34;33H[36m[46m{[0m[37;8H [36m[46m}[0m,[38;126H[K[38;126H990,9[9C81%[37;9H[34h[?25h[?25l[1;37r[37;1H
[1;38r[33;33H[36m{[36;9H}[0m[38;126H[K[38;126H991,0-1[7C81%[37;1H[34h[?25h[?25l[1;37r[37;1H
[1;38r[37;8H [34m/**[0m[38;126H[K[38;126H992,9[9C81%[37;9H[34h[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[34m         * Select a node[0m[38;126H[K[38;126H993,9[9C81%[37;9H[34h[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[34m         *[0m[38;126H[K[38;126H994,9[9C81%[37;9H[34h[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[34m         * @public[0m[38;126H[K[38;126H995,9[9C81%[37;9H[34h[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[34m         *[0m[38;126H[K[38;126H996,9[9C81%[37;9H[34h[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[34m         * @param li node[0m[38;126H[K[38;126H997,9[9C81%[37;9H[34h[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[34m         */[0m[38;126H[K[38;126H998,9[9C81%[37;9H[34h[?25h[?25l[1;37r[37;1H
[1;38r[37;8H select: [36mfunction[0m (li) [36m{[0m[38;126H[K[38;126H999,9[9C81%[37;9H[34h[?25h[?25l[1;37r[37;1H
[1;38r[37;12H li = $(li);[38;126H[K[38;126H1000,9[8C81%[37;9H[34h[?25h[?25l[1;37r[37;1H
[1;38r[38;126H[K[38;126H1001,0-1      82%[37;1H[34h[?25h[?25l[1;37r[37;1H
[1;38r[37;12H [33mif[0m ([36mthis[0m.options.selectUnique) [36m{[0m[38;126H[K[38;126H1002,9[8C82%[37;9H[34h[?25h[?25l[1;37r[37;1H
[1;38r[37;16H [36mthis[0m._deselectAll();[38;126H[K[38;126H1003,9[8C82%[37;9H[34h[?25h[?25l[1;37r[37;1H
[1;38r[37;12H [36m}[0m[38;126H[K[38;126H1004,9[8C82%[37;9H[34h[?25h[?25l[1;37r[37;1H
[1;38r[38;126H[K[38;126H1005,0-1      82%[37;1H[34h[?25h[?25l[1;37r[37;1H
[1;38r[37;12H [36mthis[0m._select(li);[38;126H[K[38;126H1006,9[8C82%[37;9H[34h[?25h[?25l[1;37r[37;1H
[1;38r[29;31H[36m[46m{[0m[37;8H [36m[46m}[0m,[38;126H[K[38;126H1007,9[8C82%[37;9H[34h[?25h[?25l[1;37r[37;1H
[1;38r[28;31H[36m{[36;9H}[0m[38;126H[K[38;126H1008,0-1      82%[37;1H[34h[?25h[?25l[1;37r[37;1H
[1;38r[37;8H [34m/**[0m[38;126H[K[38;126H1009,9[8C82%[37;9H[34h[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[34m         * Return selected node[0m[38;126H[K[38;126H1010,9[8C82%[37;9H[34h[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[34m         *[0m[38;126H[K[38;126H1011,9[8C82%[37;9H[34h[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[34m         * @public[0m[38;126H[K[38;126H1012,9[8C82%[37;9H[34h[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[34m         *[0m[38;126H[K[38;126H1013,9[8C83%[37;9H[34h[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[34m         * @return li[0m[38;126H[K[38;126H1014,9[8C83%[37;9H[34h[?25h[?25l[38;129H3[36;9H[34h[?25h[?25l[38;129H2[35;9H[34h[?25h[?25l[38;129H1[34;9H[34h[?25h[?25l[38;129H0[33;9H[34h[?25h[?25l[38;128H09[32;9H[34h[?25h[?25l[38;129H8,0-1[31;1H[34h[?25h[?25l[22;31H[36m[46m{[30;9H}[0m[38;129H7,9  [30;9H[34h[?25h[?25l[22;31H[36m{[30;9H}[0m[38;129H6[29;9H[34h[?25h[?25l[38;129H5,0-1[28;1H[34h[?25h[?25l[38;129H4,9  [27;9H[34h[?25h[?25l[38;129H3[26;9H[34h[?25h[?25l[38;129H2[25;9H[34h[?25h[?25l[38;129H1,0-1[24;1H[34h[?25h[?25l[38;129H0,9  [23;9H[34h[?25h[?25l[38;126H999,9 [22;9H[34h[?25h[?25l[38;128H8[21;9H[34h[?25h[?25l[38;128H7[20;9H[34h[?25h[?25l[38;128H6[19;9H[34h[?25h[?25l[38;128H5[18;9H[34h[?25h[?25l[38;128H4[17;9H[34h[?25h[?25l[38;128H3[16;9H[34h[?25h[?25l[38;128H2[15;9H[34h[?25h[?25l[38;128H1,0-1[14;1H[34h[?25h[?25l[10;33H[36m[46m{[13;9H}[0m[38;128H0,9  [13;9H[34h[?25h[?25l[10;33H[36m{[13;9H}[0m[38;127H89[12;9H[34h[?25h[?25l[38;128H8[11;9H[34h[?25h[?25l[38;128H7[10;9H[34h[?25h[?25l[38;128H6[9;9H[34h[?25h[?25l[38;128H5[8;9H[34h[?25h[?25l[38;128H4[7;9H[34h[?25h[?25l[38;128H3[6;9H[34h[?25h[?25l[38;128H2[5;9H[34h[?25h[?25l[38;128H1,0-1[4;1H[34h[?25h[?25l[38;128H0,9  [3;9H[34h[?25h[?25l[38;127H79[2;9H[34h[?25h[?25l[38;128H8[1;9H[34h[?25h[?25l[1;37r[1;1H[L[1;38r[1;8H _select: [36mfunction[0m (li) [36m{[0m[38;126H[K[38;126H977,9[9C83%[1;9H[34h[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[34m         */[0m[38;126H[K[38;126H976,9[9C82%[1;9H[34h[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[34m         * @param li node[0m[38;126H[K[38;126H975,9[9C82%[1;9H[34h[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[34m         *[0m[38;126H[K[38;126H974,9[9C82%[1;9H[34h[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[34m         * @private[0m[38;126H[K[38;126H973,9[9C82%[1;9H[34h[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[34m         *[0m[38;126H[K[38;126H972,9[9C82%[1;9H[34h[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[34m         * Select a node[0m[38;126H[K[38;126H971,9[9C82%[1;9H[34h[?25h[?25l[1;37r[1;1H[L[1;38r[1;8H [34m/**[0m[38;126H[K[38;126H970,9[9C82%[1;9H[34h[?25h[?25l[1;37r[1;1H[L[1;38r[38;126H[K[38;126H969,0-1[7C82%[1;1H[34h[?25h[?25l[1;37r[1;1H[L[1;38r[1;8H [36m}[0m,[38;126H[K[38;126H968,9[9C82%[1;9H[34h[?25h[?25l[1;37r[1;1H[L[1;38r[38;126H[K[38;126H967,0-1[7C82%[1;1H[34h[?25h[?25l[1;37r[1;1H[L[1;38r[1;8H _initializeSelectableNode: [36mfunction[0m (li) [36m{[0m[38;126H[K[38;126H966,9[9C82%[1;9H[34h[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[34m         */[0m[38;126H[K[38;126H965,9[9C82%[1;9H[34h[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[34m         * @param li node to initialize[0m[38;126H[K[38;126H964,9[9C81%[1;9H[34h[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[34m         *[0m[38;126H[K[38;126H963,9[9C81%[1;9H[34h[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[34m         * @private[0m[38;126H[K[38;126H962,9[9C81%[1;9H[34h[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[34m         *[0m[38;126H[K[38;126H961,9[9C81%[1;9H[34h[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[34m         * Initialize passed node[0m[38;126H[K[38;126H960,9[9C81%[1;9H[34h[?25h[?25l[1;37r[1;1H[L[1;38r[1;8H [34m/**[0m[38;126H[K[38;126H959,9[9C81%[1;9H[34h[?25h[?25l[1;37r[1;1H[L[1;38r[38;126H[K[38;126H958,0-1[7C81%[1;1H[34h[?25h[?25l[1;37r[1;1H[L[1;38r[1;8H [36m}[0m,[38;126H[K[38;126H957,9[9C81%[1;9H[34h[?25h[?25l[1;37r[1;1H[L[1;38r[1;12H [34m//@todo complete treeselect _destory method[0m[38;126H[K[38;126H956,9[9C81%[1;9H[34h[?25h[?25l[1;37r[1;1H[L[1;38r[1;8H _destroySelectable: [36mfunction[0m () [36m{[0m[38;126H[K[38;126H955,9[9C81%[1;9H[34h[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[34m         */[0m[38;126H[K[38;126H954,9[9C81%[1;9H[34h[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[34m         *[0m[38;126H[K[38;126H953,9[9C81%[1;9H[34h[?25h[?25l[1;37r[1;1H[L[1;38r[1;8H [34m/**[0m[38;126H[K[38;126H952,9[9C80%[1;9H[34h[?25h[?25l[1;37r[1;1H[L[1;38r[38;126H[K[38;126H951,0-1[7C80%[1;1H[34h[?25h[?25l[1;37r[1;1H[L[1;38r[1;8H [36m}[0m,[38;126H[K[38;126H950,9[9C80%[1;9H[34h[?25h[?25l[1;37r[1;1H[L[1;38r[1;12H [36m}[0m);[38;126H[K[38;126H949,9[9C80%[1;9H[34h[?25h[?25l[1;37r[1;1H[L[1;38r[1;16H t._deselect($([36mthis[0m).[33mparent[0m([31m'li'[0m));[38;126H[K[38;126H948,9[9C80%[1;9H[34h[?25h[?25l[1;37r[1;1H[L[1;38r[1;12H [36mthis[0m.element.find([31m'.daredevel-tree-label.'[0m + [36mthis[0m.options.selectUiClass).each([36mfunction[0m () [36m{[0m[38;126H[K[38;126H947,9[9C80%[1;9H[34h[?25h[?25l[1;37r[1;1H[L[1;38r[1;12H [36mvar[0m t = [36mthis[0m;[38;126H[K[38;126H946,9[9C80%[1;9H[34h[?25h[?25l[1;37r[1;1H[L[1;38r[1;8H _deselectAll: [36mfunction[0m () [36m{[0m[38;126H[K[38;126H945,9[9C80%[1;9H[34h[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[34m         */[0m[38;126H[K[38;126H944,9[9C80%[1;9H[34h[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[34m         * @private[0m[38;126H[K[38;126H943,9[9C80%[1;9H[34h[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[34m         *[0m[38;126H[K[38;126H942,9[9C80%[1;9H[34h[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[34m         * Deselect all selected nodes[0m[38;126H[K[38;126H941,9[9C80%[1;9H[34h[?25h[?25l[1;37r[1;1H[L[1;38r[1;8H [34m/**[0m[38;126H[K[38;126H940,9[9C79%[1;9H[34h[?25h[?25l[1;37r[1;1H[L[1;38r[38;126H[K[38;126H939,0-1[7C79%[1;1H[34h[?25h[?25l[1;37r[1;1H[L[1;38r[1;8H [36m}[0m,[38;126H[K[38;126H938,9[9C79%[1;9H[34h[?25h[?25l[1;37r[1;1H[L[1;38r[1;12H [36mthis[0m._trigger([31m'deselect'[0m, [31mtrue[0m, li);[38;126H[K[38;126H937,9[9C79%[1;9H[34h[?25h[?25l[1;37r[1;1H[L[1;38r[1;12H li.find([31m'span.daredevel-tree-label:first'[0m).removeClass([36mthis[0m.options.selectUiClass);[38;126H[K[38;126H936,9[9C79%[1;9H[34h[?25h[?25l[1;37r[1;1H[L[1;38r[1;8H _deselect: [36mfunction[0m (li) [36m{[0m[38;126H[K[38;126H935,9[9C79%[1;9H[34h[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[34m         */[0m[38;126H[K[38;126H934,9[9C79%[1;9H[34h[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[34m         * @param li node[0m[38;126H[K[38;126H933,9[9C79%[1;9H[34h[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[34m         *[0m[38;126H[K[38;126H932,9[9C79%[1;9H[34h[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[34m         * @private[0m[38;126H[K[38;126H931,9[9C79%[1;9H[34h[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[34m         *[0m[38;126H[K[38;126H930,9[9C79%[1;9H[34h[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[34m         * Deselect a node[0m[38;126H[K[38;126H929,9[9C78%[1;9H[34h[?25h[?25l[1;37r[1;1H[L[1;38r[1;8H [34m/**[0m[38;126H[K[38;126H928,9[9C78%[1;9H[34h[?25h[?25l[1;37r[1;1H[L[1;38r[38;126H[K[38;126H927,0-1[7C78%[1;1H[34h[?25h[?25l[1;37r[1;1H[L[1;38r[1;8H [36m}[0m,[38;126H[K[38;126H926,9[9C78%[1;9H[34h[?25h[?25l[1;37r[1;1H[L[1;38r[1;12H [36m}[0m);[38;126H[K[38;126H925,9[9C78%[1;9H[34h[?25h[?25l[1;37r[1;1H[L[1;38r[1;16H [36m}[0m[38;126H[K[38;126H924,9[9C78%[1;9H[34h[?25h[?25l[1;37r[1;1H[L[1;38r[1;20H t.select($([36mthis[0m).[33mparent[0m([31m'li'[0m));[38;126H[K[38;126H923,9[9C78%[1;9H[34h[?25h[?25l[1;37r[1;1H[L[1;38r[1;16H [36m}[0m [33melse[0m [36m{[0m[38;126H[K[38;126H922,9[9C78%[1;9H[34h[?25h[?25l[1;37r[1;1H[L[1;38r[1;20H t.deselect($([36mthis[0m).[33mparent[0m(li));[38;126H[K[38;126H921,9[9C78%[1;9H[34h[?25h[?25l[1;37r[1;1H[L[1;38r[1;16H [33mif[0m (li.hasClass(t.options.selectUiClass)) [36m{[0m[38;126H[K[38;126H920,9[9C78%[1;9H[34h[?25h[?25l[1;37r[1;1H[L[1;38r[1;16H [36mvar[0m li = $([36mthis[0m);[38;126H[K[38;126H919,9[9C78%[1;9H[34h[?25h[?25l[1;37r[1;1H[L[1;38r[1;12H [36mthis[0m.element.on([31m"click"[0m, [31m'.daredevel-tree-label'[0m, [36mfunction[0m () [36m{[0m[38;126H[K[38;126H918,9[9C78%[1;9H[34h[?25h[?25l[1;37r[1;1H[L[1;38r[38;126H[K[38;126H917,0-1[7C77%[1;1H[34h[?25h[?25l[1;37r[1;1H[L[1;38r[1;12H [36mvar[0m t = [36mthis[0m;[38;126H[K[38;126H916,9[9C77%[1;9H[34h[?25h[?25l[1;37r[1;1H[L[1;38r[1;8H _createSelectable: [36mfunction[0m () [36m{[0m[38;126H[K[38;126H915,9[9C77%[1;9H[34h[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[34m         */[0m[38;126H[K[38;126H914,9[9C77%[1;9H[34h[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[34m         * @private[0m[38;126H[K[38;126H913,9[9C77%[1;9H[34h[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[34m         * //@todo find right name or merge with _create[0m[38;126H[K[38;126H912,9[9C77%[1;9H[34h[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[34m         * Initialize plugin[0m[38;126H[K[38;126H911,9[9C77%[1;9H[34h[?25h[?25l[1;37r[1;1H[L[1;38r[1;8H [34m/**[0m[38;126H[K[38;126H910,9[9C77%[1;9H[34h[?25h[?25l[1;37r[1;1H[L[1;38r[38;126H[K[38;126H909,0-1[7C77%[1;1H[34h[?25h[?25l[1;37r[1;1H[L[1;38r[1;8H [36m}[0m,[38;126H[K[38;126H908,9[9C77%[1;9H[34h[?25h[?25l[1;37r[1;1H[L[1;38r[38;126H[K[38;126H907,0-1[7C77%[1;1H[34h[?25h[?25l[1;37r[1;1H[L[1;38r[1;12H $(li).find([31m'.daredevel-tree-label:first'[0m).after(span);[38;126H[K[38;126H906,9[9C77%[1;9H[34h[?25h[?25l[38;128H7,0-1[2;1H[34h[?25h[?25l[38;128H8,9  [3;9H[34h[?25h[?25l[38;128H9,0-1[4;1H[34h[?25h[?25l[38;127H10,9  [5;9H[34h[?25h[?25l[38;128H1[6;9H[34h[?25h[?25l[38;128H2[7;9H[34h[?25h[?25l[38;128H3[8;9H[34h[?25h[?25l[38;128H4[9;9H[34h[?25h[?25l[38;128H5[10;9H[34h[?25h[?25l[38;128H6[11;9H[34h[?25h[?25l[38;128H7,0-1[12;1H[34h[?25h[?25l[38;128H8,9  [13;9H[34h[?25h[?25l[38;128H7,0-1[12;1H[34h[?25h[?25l[38;128H6,9  [11;9H[34h[?25h[?25l[38;128H5[10;9H[34h[?25h[?25l[38;128H4[9;9H[34h[?25h[?25l[38;128H5[10;9H[34h[?25h[?25l[38;130H10[10;10H[34h[?25h[?25l[38;131H1[10;11H[34h[?25h[?25l[38;1H/\<_createSelectable\>[38;126H[K[38;1H[31msearch hit BOTTOM, continuing at TOP[23m[24m[0m[H[J[2;12H [34m// add core widget to options so components can add methods @todo remove core variable[0m[3;12H [36mthis[0m.options.core = [36mthis[0m;[5;12H [34m// add jQueryUI css widget classes[0m[6;12H [36mthis[0m.element.addClass([31m'ui-widget ui-widget-content daredevel-tree'[0m);[8;12H [34m// initialize requested features[0m[9;12H [33mif[0m ([36mthis[0m.options.checkbox) [36m{[0m[10;16H [36mthis[0m._createCheckbox();[11;12H [36m}[0m[12;12H [33mif[0m ([36mthis[0m.options.collapsible) [36m{[0m[13;16H [36mthis[0m._createCollapsible();[14;12H [36m}[0m[15;12H [33mif[0m ([36mthis[0m.options.dnd) [36m{[0m[16;16H [36mthis[0m._createDnd();[17;12H [36m}[0m[18;12H [33mif[0m ([36mthis[0m.options.selectable) [36m{[0m[19;16H [36mthis[0m._createSelectable();[20;12H [36m}[0m[22;12H [34m// initialize requested components[0m[23;12H [34m//this._initializeComponents();[0m[25;12H [36mthis[0m.element.find([31m'li'[0m).each([36mfunction[0m () [36m{[0m[26;16H t._initializeNode($([36mthis[0m));[27;12H [36m}[0m);[29;12H [33mif[0m ([36mthis[0m.options.nodes != [33mnull[0m) [36m{[0m[30;16H $.each([36mthis[0m.options.nodes, [36mfunction[0m (key, value) [36m{[0m[31;20H t.options.core.addNode(value);[32;16H [36m}[0m);[33;12H [36m}[0m[34;8H [36m}[0m,[36;8H [34m/**
         * Destroy plugin[0m[38;126H148,22[8C10%[31msearch hit BOTTOM, continuing at TOP[0m[38;126H[K[38;126H148,22[8C10%[19;22H[34h[?25h[?25l[38;1H/\<_createSelectable\>[38;23H[K[38;1H[23m[24m[0m[H[J[1;20H [36m}[0m,[2;20H over: [36mfunction[0m ([33mevent[0m, ui) [36m{[0m[3;24H $([36mthis[0m).[33mparent[0m([31m'li'[0m).find([31m'.daredevel-tree-label:first'[0m).addClass([31m'ui-state-hover'[0m);[4;20H [36m}[0m,[5;20H out: [36mfunction[0m ([33mevent[0m, ui) [36m{[0m[6;24H $([36mthis[0m).[33mparent[0m([31m'li'[0m).find([31m'.daredevel-tree-label:first'[0m).removeClass([31m'ui-state-hover'[0m);[7;20H [36m}[0m[8;16H [36m}[0m);[10;12H $(li).find([31m'.daredevel-tree-label:first'[0m).after(span);[12;8H [36m}[0m,[14;8H [34m/**
         * Initialize plugin
         * //@todo find right name or merge with _create
         * @private
         */[0m[19;8H _createSelectable: [36mfunction[0m () [36m{[0m[20;12H [36mvar[0m t = [36mthis[0m;[22;12H [36mthis[0m.element.on([31m"click"[0m, [31m'.daredevel-tree-label'[0m, [36mfunction[0m () [36m{[0m[23;16H [36mvar[0m li = $([36mthis[0m);[24;16H [33mif[0m (li.hasClass(t.options.selectUiClass)) [36m{[0m[25;20H t.deselect($([36mthis[0m).[33mparent[0m(li));[26;16H [36m}[0m [33melse[0m [36m{[0m[27;20H t.select($([36mthis[0m).[33mparent[0m([31m'li'[0m));[28;16H [36m}[0m[29;12H [36m}[0m);[30;8H [36m}[0m,[32;8H [34m/**
         * Deselect a node
         *
         * @private
         *
         * @param li node[0m[38;126H915,9[9C76%[19;9H[34h[?25h[?25l[23m[24m[0m[H[J[1;1H[34m         *
         * @param li node
         */[0m[4;8H _deselect: [36mfunction[0m (li) [36m{[0m[5;12H li.find([31m'span.daredevel-tree-label:first'[0m).removeClass([36mthis[0m.options.selectUiClass);[6;12H [36mthis[0m._trigger([31m'deselect'[0m, [31mtrue[0m, li);[7;8H [36m}[0m,[9;8H [34m/**
         * Deselect all selected nodes
         *
         * @private
         */[0m[14;8H _deselectAll: [36mfunction[0m () [36m{[0m[15;12H [36mvar[0m t = [36mthis[0m;[16;12H [36mthis[0m.element.find([31m'.daredevel-tree-label.'[0m + [36mthis[0m.options.selectUiClass).each([36mfunction[0m () [36m{[0m[17;16H t._deselect($([36mthis[0m).[33mparent[0m([31m'li'[0m));[18;12H [36m}[0m);[19;8H [36m}[0m,[21;8H [34m/**
         *
         */[0m[24;8H _destroySelectable: [36mfunction[0m () [36m{[0m[25;12H [34m//@todo complete treeselect _destory method[0m[26;8H [36m}[0m,[28;8H [34m/**
         * Initialize passed node
         *
         * @private
         *
         * @param li node to initialize
         */[0m[35;8H _initializeSelectableNode: [36mfunction[0m (li) [36m{[0m[37;8H [36m}[0m,[38;126H932,10[8C79%[1;10H[34h[?25h[?25l[23m[24m[0m[H[J[2;8H [36m}[0m,[4;8H [34m/**
         * Select a node
         *
         * @private
         *
         * @param li node
         */[0m[11;8H _select: [36mfunction[0m (li) [36m{[0m[12;12H li.find([31m'span.daredevel-tree-label:first'[0m).addClass([36mthis[0m.options.selectUiClass);[13;12H [36mthis[0m._trigger([31m'select'[0m, [31mtrue[0m, li);[14;8H [36m}[0m,[16;8H [34m/**
         * Deselect node
         *
         * @public
         */[0m[21;8H deselect: [36mfunction[0m (li) [36m{[0m[22;12H li = $(li);[23;12H [36mthis[0m._deselect(li);[24;8H [36m}[0m,[26;8H [34m/**
         * Select a node
         *
         * @public
         *
         * @param li node
         */[0m[33;8H select: [36mfunction[0m (li) [36m{[0m[34;12H li = $(li);[36;12H [33mif[0m ([36mthis[0m.options.selectUnique) [36m{[0m[37;16H [36mthis[0m._deselectAll();[38;126H967,0-1[7C82%[1;1H[34h[?25h[?25l[23m[24m[0m[H[J[1;12H [33mif[0m ([36mthis[0m.options.selectUnique) [36m{[0m[2;16H [36mthis[0m._deselectAll();[3;12H [36m}[0m[5;12H [36mthis[0m._select(li);[6;8H [36m}[0m,[8;8H [34m/**
         * Return selected node
         *
         * @public
         *
         * @return li
         */[0m[15;8H selected: [36mfunction[0m () [36m{[0m[16;12H [36mvar[0m selected = [36mthis[0m.element.find([31m'.daredevel-tree-label.'[0m + [36mthis[0m.options.selectUiClass);[17;12H [33mreturn[0m $(selected).[33mparent[0m();[18;8H [36m}[0m,[21;8H [34m/**
         * Default options values.
         */[0m[24;8H options: [36m{[0m[26;12H [34m/**
             * Defines default node attributes to use in node adding if different specified in addNode() method
             */[0m[29;12H defaultNodeAttributes: [36m{[0m[30;16H span: [36m{[0m[31;20H html: [31m'new node'[0m[32;16H [36m}[0m,[33;16H li: [36m{[0m[34;20H [31m'class'[0m: [31m'leaf'[0m [34m//@todo handle leaf class[0m[35;16H [36m}[0m,[36;16H input: [36m{[0m[37;20H type: [31m'checkbox'[0m[38;126H1002,13[7C85%[1;13H[34h[?25h[?25l[23m[24m[0m[H[J[1;16H input: [36m{[0m[2;20H type: [31m'checkbox'[0m[3;16H [36m}[0m[4;12H [36m}[0m,[6;12H [34m/**
             *
             */[0m[9;12H nodes: [33mnull[0m,[10;12H [34m/**
             * Defines if tree nodes will have a checkbox field
             */[0m[13;12H checkbox: [31mtrue[0m,[15;12H [34m/**
             * Defines which actions trigger when a node is checked.
             * Actions are triggered in the following order:
             * 1) others
             * 2) descendants
             * 3) ancestors
             */[0m[22;12H onCheck: [36m{[0m[24;16H [34m/**
                 * Available values: null, 'check', 'uncheck', 'checkIfFull'.
                 */[0m[27;16H ancestors: [31m'check'[0m,[29;16H [34m/**
                 * Available values: null, 'check', 'uncheck'.
                 */[0m[32;16H descendants: [31m'check'[0m,[34;16H [34m/**
                 * Available values: null, 'collapse', 'expand'.
                 */[0m[37;16H node: [31m''[0m, [34m//@todo missing order[0m[38;126H1037,17[7C88%[1;17H[34h[?25h[?25l[23m[24m[0m[H[J[1;12H [33mif[0m ([36mthis[0m.options.selectUnique) [36m{[0m[2;16H [36mthis[0m._deselectAll();[3;12H [36m}[0m[5;12H [36mthis[0m._select(li);[6;8H [36m}[0m,[8;8H [34m/**
         * Return selected node
         *
         * @public
         *
         * @return li
         */[0m[15;8H selected: [36mfunction[0m () [36m{[0m[16;12H [36mvar[0m selected = [36mthis[0m.element.find([31m'.daredevel-tree-label.'[0m + [36mthis[0m.options.selectUiClass);[17;12H [33mreturn[0m $(selected).[33mparent[0m();[18;8H [36m}[0m,[21;8H [34m/**
         * Default options values.
         */[0m[24;8H options: [36m{[0m[26;12H [34m/**
             * Defines default node attributes to use in node adding if different specified in addNode() method
             */[0m[29;12H defaultNodeAttributes: [36m{[0m[30;16H span: [36m{[0m[31;20H html: [31m'new node'[0m[32;16H [36m}[0m,[33;16H li: [36m{[0m[34;20H [31m'class'[0m: [31m'leaf'[0m [34m//@todo handle leaf class[0m[35;16H [36m}[0m,[36;16H input: [36m{[0m[37;20H type: [31m'checkbox'[0m[38;126H1038,21[7C85%[37;21H[34h[?25h[?25l[38;129H7[36;21H[34h[?25h[?25l[38;129H6,18[35;18H[34h[?25h[?25l[38;129H5,21[34;21H[34h[?25h[?25l[33;21H[36m[46m{[35;17H}[0m[38;129H4[33;21H[34h[?25h[?25l[36m{[35;17H}[0m[38;129H3,18[32;18H[34h[?25h[?25l[38;129H2,21[31;21H[34h[?25h[?25l[38;129H1[30;21H[34h[?25h[?25l[38;129H0[29;21H[34h[?25h[?25l[38;128H29,15[28;15H[34h[?25h[?25l[38;129H8,21[27;21H[34h[?25h[?25l[38;129H7,15[26;15H[34h[?25h[?25l[38;129H6,0-1[25;1H[34h[?25h[?25l[38;129H5,18 [24;18H[34h[?25h[?25l[38;129H4,11[23;11H[34h[?25h[?25l[38;129H3,2[22;21H[34h[?25h[?25l[38;129H2,1[21;11H[34h[?25h[?25l[38;129H1,0-1[20;1H[34h[?25h[?25l[38;129H0[19;1H[34h[?25h[?25l[38;128H19,10 [18;10H[34h[?25h[?25l[17;21H[46m([8C)[0m[38;129H8,21[17;21H[34h[?25h[?25l([8C)[38;129H7[16;21H[34h[?25h[?25l[38;129H6[15;21H[34h[?25h[?25l[38;129H5,1[14;11H[34h[?25h[?25l[38;129H4,2[13;21H[34h[?25h[?25l[38;129H3,10[12;10H[34h[?25h[?25l[38;129H2,18[11;18H[34h[?25h[?25l[38;129H1,10[10;10H[34h[?25h[?25l[38;129H0,21[9;21H[34h[?25h[?25l[38;128H09,1[8;11H[34h[?25h[?25l[38;129H8,0-1[7;1H[34h[?25h[?25l[38;129H7,10 [6;10H[34h[?25h[?25l[38;129H6,21[5;21H[34h[?25h[?25l[38;129H5,0-1[4;1H[34h[?25h[?25l[1;44H[36m[46m{[3;13H}[0m[38;129H4,13 [3;13H[34h[?25h[?25l[1;44H[36m{[3;13H}[0m[38;129H3,21[2;21H[34h[?25h[?25l[38;129H2[1;21H[34h[?25h[?25l[1;37r[1;1H[L[1;38r[38;126H[K[38;126H1001,0-1      85%[1;1H[34h[?25h[?25l[1;37r[1;1H[L[1;38r[1;12H li = $(li);[38;126H[K[38;126H1000,21[7C85%[1;21H[34h[?25h[?25l[1;37r[1;1H[L[1;38r[1;8H select: [36mfunction[0m (li) [36m{[0m[38;126H[K[38;126H999,21[8C84%[1;21H[34h[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[34m         */[0m[38;126H[K[38;126H998,11[8C84%[1;11H[34h[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[34m         * @param li node[0m[38;126H[K[38;126H997,21[8C84%[1;21H[34h[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[34m         *[0m[38;126H[K[38;126H996,10[8C84%[1;10H[34h[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[34m         * @public[0m[38;126H[K[38;126H995,18[8C84%[1;18H[34h[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[34m         *[0m[38;126H[K[38;126H994,10[8C84%[1;10H[34h[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[34m         * Select a node[0m[38;126H[K[38;126H993,21[8C84%[1;21H[34h[?25h[?25l[1;37r[1;1H[L[1;38r[1;8H [34m/**[0m[38;126H[K[38;126H992,11[8C84%[1;11H[34h[?25h[?25l[1;37r[1;1H[L[1;38r[38;126H[K[38;126H991,0-1[7C84%[1;1H[34h[?25h[?25l[1;37r[1;1H[L[1;38r[1;8H [36m}[0m,[38;126H[K[38;126H990,10[8C84%[1;10H[34h[?25h[?25l[1;37r[1;1H[L[1;38r[1;12H [36mthis[0m._deselect(li);[38;126H[K[38;126H989,21[8C84%[1;21H[34h[?25h[?25l[1;37r[1;1H[L[1;38r[1;12H li = $(li);[38;126H[K[38;126H988,21[8C84%[1;21H[34h[?25h[?25l[1;37r[1;1H[L[1;38r[1;8H deselect: [36mfunction[0m (li) [36m{[0m[38;126H[K[38;126H987,21[8C83%[1;21H[34h[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[34m         */[0m[38;126H[K[38;126H986,11[8C83%[1;11H[34h[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[34m         * @public[0m[38;126H[K[38;126H985,18[8C83%[1;18H[34h[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[34m         *[0m[38;126H[K[38;126H984,10[8C83%[1;10H[34h[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[34m         * Deselect node[0m[38;126H[K[38;126H983,21[8C83%[1;21H[34h[?25h[?25l[1;37r[1;1H[L[1;38r[1;8H [34m/**[0m[38;126H[K[38;126H982,11[8C83%[1;11H[34h[?25h[?25l[1;37r[1;1H[L[1;38r[38;126H[K[38;126H981,0-1[7C83%[1;1H[34h[?25h[?25l[1;37r[1;1H[L[1;38r[1;8H [36m}[0m,[38;126H[K[38;126H980,10[8C83%[1;10H[34h[?25h[?25l[38;126H[K[38;1H/[34h[?25hc[?25l[4;18H[7m[34mc[0m[38;126H983,18[8C83%[38;126H[K[38;3H[34h[?25hh[?25l[23m[24m[0m[H[J[3;8H [34m/**
         * Default options values.
         */[0m[6;8H options: [36m{[0m[8;12H [34m/**
             * Defines default node attributes to use in node adding if different specified in addNode() method
             */[0m[11;12H defaultNodeAttributes: [36m{[0m[12;16H span: [36m{[0m[13;20H html: [31m'new node'[0m[14;16H [36m}[0m,[15;16H li: [36m{[0m[16;20H [31m'class'[0m: [31m'leaf'[0m [34m//@todo handle leaf class[0m[17;16H [36m}[0m,[18;16H input: [36m{[0m[19;20H type: [31m'[0m[7m[31mch[0m[31meckbox'[0m[20;16H [36m}[0m[21;12H [36m}[0m,[23;12H [34m/**
             *
             */[0m[26;12H nodes: [33mnull[0m,[27;12H [34m/**
             * Defines if tree nodes will have a checkbox field
             */[0m[30;12H checkbox: [31mtrue[0m,[32;12H [34m/**
             * Defines which actions trigger when a node is checked.
             * Actions are triggered in the following order:
             * 1) others
             * 2) descendants
             * 3) ancestors[0m[38;126H1038,28[7C86%/ch[38;126H[K[38;4H[34h[?25he[?25l[19;30H[7m[31me[0m[38;126H1038,28[7C86%[38;126H[K[38;5H[34h[?25hc[?25l[19;31H[7m[31mc[0m[38;126H1038,28[7C86%[38;126H[K[38;6H[34h[?25hk[?25l[19;32H[7m[31mk[0m[38;126H1038,28[7C86%[38;126H[K[38;7H[34h[?25h:[?25l[1;37r[1;1H[20M[1;38r[18;1H[34m             */[0m[19;12H on[7mCheck:[0m [36m{[0m[21;16H [34m/**
                 * Available values: null, 'check', 'uncheck', 'checkIfFull'.
                 */[0m[24;16H ancestors: [31m'check'[0m,[26;16H [34m/**
                 * Available values: null, 'check', 'uncheck'.
                 */[0m[29;16H descendants: [31m'check'[0m,[31;16H [34m/**
                 * Available values: null, 'collapse', 'expand'.
                 */[0m[34;16H node: [31m''[0m, [34m//@todo missing order[0m[36;16H [34m/**
                 * Available values: null, 'check', 'uncheck'.[0m[38;1H[K[38;126H1058,15[7C88%/check:[38;126H[K[38;8H[34h[?25h[?25l[19;21H[7m [0m[38;126H1058,15[7C88%[38;126H[K[38;9H[34h[?25hf[?25l[23m[24m[0m[H[J[1;12H [36mvar[0m t = [36mthis[0m;[2;12H li.addClass([31m'exclude'[0m);[3;12H li.parents([31m'li'[0m).addClass([31m'exclude'[0m);[4;12H li.find([31m'li'[0m).addClass([31m'exclude'[0m);[5;12H $([36mthis[0m.element).find([31m'li'[0m).each([36mfunction[0m () [36m{[0m[6;16H [33mif[0m (!$([36mthis[0m).hasClass([31m'exclude'[0m)) [36m{[0m[7;20H $([36mthis[0m).find([31m'input:checkbox:first:checked'[0m).prop([31m'checked'[0m, [31mfalse[0m).change();[8;16H [36m}[0m[9;12H [36m}[0m);[10;12H $([36mthis[0m.element).find([31m'li'[0m).removeClass([31m'exclude'[0m);[11;8H [36m}[0m,[13;8H [34m/**
         * Check node
         *
         * @public
         * @param li node to check
         */[0m[19;8H [7mcheck: [0m[7m[36mf[0m[36munction[0m (li) [36m{[0m[21;12H li = $(li);[23;12H li.find([31m'input:checkbox:first:not(:checked)'[0m).prop([31m'checked'[0m, [31mtrue[0m).change();[25;12H [34m// handle others[0m[26;12H [33mif[0m ([36mthis[0m.options.onCheck.others == [31m'check'[0m) [36m{[0m[27;16H [36mthis[0m._checkOthers(li);[28;12H [36m}[0m [33melse[0m [33mif[0m ([36mthis[0m.options.onCheck.others == [31m'uncheck'[0m) [36m{[0m[29;16H [36mthis[0m._uncheckOthers(li);[30;12H [36m}[0m[32;12H [34m// handle descendants[0m[33;12H [33mif[0m ([36mthis[0m.options.onCheck.descendants == [31m'check'[0m) [36m{[0m[34;16H [36mthis[0m._checkDescendants(li);[35;12H [36m}[0m [33melse[0m [33mif[0m ([36mthis[0m.options.onCheck.descendants == [31m'uncheck'[0m) [36m{[0m[36;16H [36mthis[0m._uncheckDescendants(li);[37;12H [36m}[0m[38;126H493,9[9C40%/check: f[38;126H[K[38;10H[34h[?25h[?25l[31msearch hit BOTTOM, continuing at TOP[0m[19;9Hcheck: [36mf[0m[38;126H493,9[9C40%[38;126H[K[38;126H493,9[9C40%[19;9H[34h[?25h[?25l[38;128H4,0-1[20;1H[34h[?25h[?25l[38;128H5,9  [21;9H[34h[?25h[?25l[38;128H6,0-1[22;1H[34h[?25h[?25l[38;128H7,9  [23;9H[34h[?25h[?25l[38;128H8,0-1[24;1H[34h[?25h[?25l[38;128H9,9  [25;9H[34h[?25h[?25l[38;126H500[26;9H[34h[?25h[?25l[38;128H1[27;9H[34h[?25h[?25l[38;128H2[28;9H[34h[?25h[?25l[38;128H3[29;9H[34h[?25h[?25l[38;128H4[30;9H[34h[?25h[?25l[38;128H5,0-1[31;1H[34h[?25h
Broadcast message from sriram@ubuntu
	(/dev/tty2) at 16:26 ...

The system is going down for reboot NOW!
